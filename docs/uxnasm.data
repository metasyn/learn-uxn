( logic )

%+  { ADD } %-   { SUB }              %/   { DIV }  
%<  { LTH } %>   { GTH }  %=  { EQU } %!   { NEQ } 
%++ { ADD2 } %-- { SUB2 }              %// { DIV2 } 
%<< { LTH2 } %>> { GTH2 } %== { EQU2 } %!! { NEQ2 }  

%2*  { #10 SFT } %2/  { #01 SFT }
%4*  { #20 SFT } %4/  { #02 SFT }
%8*  { #30 SFT } %8/  { #03 SFT }
%10* { #40 SFT } %10/ { #04 SFT }
%20* { #50 SFT } %20/ { #05 SFT }

%2**  { #10 SFT2 } %2//  { #01 SFT2 }
%4**  { #20 SFT2 } %4//  { #02 SFT2 }
%8**  { #30 SFT2 } %8//  { #03 SFT2 }
%10** { #40 SFT2 } %10// { #04 SFT2 }
%20** { #50 SFT2 } %20// { #05 SFT2 }

%RELEASE-MOUSE { #0096 DEO }
%AUTO-X { #01 .Screen/auto DEO }
%AUTO-X-ADDR { #05 .Screen/auto DEO }
%AUTO-NONE { #00 .Screen/auto DEO }

%RTN { JMP2r }
%TOS { #00 SWP }

( devices )

|00 @System     [ &vector $2 &wst      $1 &rst    $1 &pad   $4 &r      $2 &g      $2 &b    $2 &debug  $1 &halt $1 ]
|10 @Console    [ &vector $2 &read     $1 &pad    $5 &write $1 &error  $1 ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &auto  $1 &pad    $1 &x      $2 &y      $2 &addr $2 &pixel $1 &sprite $1 ]
|30 @Audio0     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
|40 @Audio1     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
|50 @Audio2     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
|60 @Audio3     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
|80 @Controller [ &vector $2 &button   $1 &key    $1 ]
|90 @Mouse      [ &vector $2 &x        $2 &y      $2 &state $1 &wheel  $1 ]
|a0 @File       [ &vector $2 &success  $2 &stat   $2 &delete $1 &append $1 &name  $2 &length $2 &read $2 &write $2 ]
|c0 @DateTime   [ &year   $2 &month    $1 &day    $1 &hour  $1 &minute $1 &second $1 &dotw $1 &doty   $2 &isdst $1 ]

( variables )

|0000

@a-frame
	&x $2 &y $2 &x2 $2 &y2 $2
@b-frame
	&x $2 &y $2 &x2 $2 &y2 $2
@input
	&a $1 &b $1
@pointer
	&x $2 &y $2

( program )

|0100 ( -> )

	( theme ) 
	#0fe7 .System/r DEO2 
	#0fce .System/g DEO2 
	#0f2c .System/b DEO2

	;on-mouse   .Mouse/vector DEO2

	.Screen/width DEI2 2// 
		DUP2 #0040 -- .a-frame/x STZ2 DUP2 #0040 ++ .a-frame/x2 STZ2
		DUP2 #0040 -- .b-frame/x STZ2 #0040 ++ .b-frame/x2 STZ2

	.Screen/height DEI2 2// #0020 --
		DUP2 #0010 -- .a-frame/y STZ2 DUP2 #0000 ++ .a-frame/y2 STZ2
		DUP2 .b-frame/y STZ2 #0010 ++ .b-frame/y2 STZ2

	;redraw JSR2

BRK

@on-mouse ( -> )

	;draw-cursor JSR2 
	
	.Mouse/state DEI #00 ! JMP [ BRK ]

	.Mouse/x DEI2 .Mouse/y DEI2 .a-frame ;within-rect JSR2 
		;on-touch-a JCN2
	.Mouse/x DEI2 .Mouse/y DEI2 .b-frame ;within-rect JSR2 
		;on-touch-b JCN2

BRK

@on-touch-a ( -> )

	.Mouse/x DEI2 .a-frame/x LDZ2 -- 
	10// NIP #07 SWP - STH

	.input/a LDZ 
		#01 [ STHr #40 SFT ] SFT EOR 
		.input/a STZ

	;redraw JSR2
	RELEASE-MOUSE

BRK

@on-touch-b ( -> )

	.Mouse/x DEI2 .b-frame/x LDZ2 -- 
	10// NIP #07 SWP - STH

	.input/b LDZ 
		#01 [ STHr #40 SFT ] SFT EOR 
		.input/b STZ

	;redraw JSR2
	RELEASE-MOUSE

BRK

@redraw ( -- )

	.a-frame/x LDZ2  .Screen/x DEO2
	.a-frame/y LDZ2  .Screen/y DEO2
	.input/a LDZ #01 ;draw-byte JSR2

	.b-frame/x LDZ2 .Screen/x DEO2
	.b-frame/y LDZ2 .Screen/y DEO2
	.input/b LDZ #01 ;draw-byte JSR2

	.b-frame/x LDZ2 .Screen/x DEO2
	.Screen/y DEI2 #000d ++ .Screen/y DEO2
	.input LDZ2 AND #03 ;draw-byte JSR2

	.b-frame/x LDZ2 .Screen/x DEO2
	.Screen/y DEI2 #000d ++ .Screen/y DEO2
	.input LDZ2 ORA #03 ;draw-byte JSR2

	.b-frame/x LDZ2 .Screen/x DEO2
	.Screen/y DEI2 #000d ++ .Screen/y DEO2
	.input LDZ2 EOR #03 ;draw-byte JSR2

	( labels )
	AUTO-X-ADDR
	.b-frame/x LDZ2 #0020 -- .Screen/x DEO2
	;names-icn/and .Screen/addr DEO2
	.b-frame/y2 LDZ2 #0004 ++ .Screen/y DEO2
	,&draw-label JSR
	.b-frame/y2 LDZ2 #0014 ++ .Screen/y DEO2
	,&draw-label JSR
	.b-frame/y2 LDZ2 #0024 ++ .Screen/y DEO2
	,&draw-label JSR
	AUTO-NONE

RTN
	&draw-label
		.b-frame/x LDZ2 #0020 -- .Screen/x DEO2 
		#03 .Screen/sprite DEOk DEOk DEO
	RTN

@draw-byte ( value -- )

	STH STH
	#0800
	&loop
		DUP #07 SWP -
		STHkr SWP SFT #01 AND OVRr STHr ;draw-bit JSR2
		INC GTHk ,&loop JCN
	POP2
	.Screen/y DEI2 #0003 ++ .Screen/y DEO2
	.Screen/x DEI2 #0008 ++ .Screen/x DEO2
	STHr ;draw-hex JSR2
	POPr

RTN

@draw-bit ( value color -- )

	STH STH

	AUTO-X-ADDR
	;button-icns/off [ #00 STHkr 20* ++ ] .Screen/addr DEO2
	OVRr STHr .Screen/sprite DEO
	OVRr STHr .Screen/sprite DEO
	.Screen/y DEI2 #0008 ++ .Screen/y DEO2
	.Screen/x DEI2 #0010 -- .Screen/x DEO2
	OVRr STHr .Screen/sprite DEO
	OVRr STHr .Screen/sprite DEO
	AUTO-NONE
	.Screen/y DEI2 #0008 -- .Screen/y DEO2

	POPr POPr

RTN

@draw-hex ( value -- )

	AUTO-X
	DUP #04 SFT ,&draw JSR
	#0f AND ,&draw JSR
	AUTO-X

RTN
	&draw
		TOS 8** ;font-hex ++ .Screen/addr DEO2
		( draw ) #01 .Screen/sprite DEO
	RTN

@draw-cursor ( -- )
	
	( clear last cursor )
	;cursor .Screen/addr DEO2 
	.pointer/x LDZ2 .Screen/x DEO2 
	.pointer/y LDZ2 .Screen/y DEO2 
	#40 .Screen/sprite DEO
	( record pointer positions )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2 
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2  
	( colorize on state )
	#42 [ .Mouse/state DEI #00 ! ] + .Screen/sprite DEO

RTN

@within-rect ( x* y* rect -- flag )
	
	STH
	( y < rect.y1 ) DUP2 STHkr #02 ADD LDZ2 LTH2 ,&skip JCN
	( y > rect.y2 ) DUP2 STHkr #06 ADD LDZ2 GTH2 ,&skip JCN
	SWP2
	( x < rect.x1 ) DUP2 STHkr LDZ2 LTH2 ,&skip JCN
	( x > rect.x2 ) DUP2 STHkr #04 ADD LDZ2 GTH2 ,&skip JCN
	POP2 POP2 POPr
	#01 
RTN
	&skip
	POP2 POP2 POPr
	#00

RTN

@cursor 
	80c0 e0f0 f8e0 1000 

@button-icns
	&off
	3f40 8080 8080 8080
	f804 0202 0202 0202
	8080 8080 8040 3f00
	0202 0202 0204 f800
	&on
	3f40 9fbf bfbf bfbf
	f804 f2fa fafa fafa
	bfbf bfbf 9f40 3f00
	fafa fafa f204 f800

@names-icn
	&and
	fc02 027e 8286 fa00
	bcc2 8282 8282 8200
	fc82 8282 8282 fc00
	&ora
	7c82 8282 8282 7c00
	fc82 82fc 8282 8200
	fc02 027e 8286 fa00
	&eor
	8282 4438 4482 8200
	7c82 8282 8282 7c00
	fc82 82fc 8282 8200

@font-hex ( 0-F )
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 007c 8202 1e02 0202
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc
	007c 8280 8080 827c 00fc 8282 8282 82fc
	007c 8280 f080 827c 007c 8280 f080 8080

( Polycat:
	A cat with one eye, and the hind and tail of a lizard.
	Original character by Rekka Bellum )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixeld $1 &sprite $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &pad $3 &scrollx $2 &scrolly $2

|0000

@cat &x $2 &y $2 &timer $1
@pointer &x $2 &y $2

|0100 ( -> )
	
	( theme )
	#0a3f .System/r DEO2
	#05df .System/g DEO2
	#0caf .System/b DEO2
	( DOS resolution )
	#0140 .Screen/width DEO2
	#00c8 .Screen/height DEO2
	( vectors )
	;on-mouse .Mouse/vector DEO2
	( find center )
	.Screen/width DEI2 #01 SFT2 .cat/x STZ2
	.Screen/height DEI2 #01 SFT2 .cat/y STZ2
	( draw ground )
	#f6 .Screen/auto DEO
	.cat/y LDZ2 #0018 ADD2 .Screen/y DEO2
	.cat/x LDZ2 #0010 SUB2 .Screen/x DEO2
	;ground .Screen/addr DEO2
	#01 .Screen/sprite DEO
	( init )
	#ff ;draw-eye/last STA
	#ff ;draw-tail/last STA
	( set screen mode auto-x )
	#05 .Screen/auto DEO
	,draw-polycat JSR

BRK

@draw-polycat ( -- )

	( ears )
	.cat/y LDZ2 .Screen/y DEO2
	.cat/x LDZ2 #0008 SUB2 .Screen/x DEO2
	;ears .Screen/addr DEO2
	#81 .Screen/sprite DEOk DEO
	( body )
	.cat/y LDZ2 #0010 ADD2 .Screen/y DEO2
	.cat/x LDZ2 #0008 SUB2 .Screen/x DEO2
	;body .Screen/addr DEO2
	#81 .Screen/sprite DEO
	( eye/tail )
	#00 ,draw-eye JSR
	#00 ;draw-tail JSR2

JMP2r

@on-mouse ( -> )
	
	.Mouse/x DEI2 .cat/x LDZ2 GTH2 #50 SFT
	.Mouse/y DEI2 .cat/y LDZ2 GTH2 #60 SFT
		ADD ,draw-eye JSR
	.cat/timer LDZ INC [ DUP ] .cat/timer STZ
		#04 SFT ,draw-tail JSR
	,draw-cursor JSR

BRK

@draw-eye ( quad -- )
	
	DUP ,&last LDR NEQ ,&changed JCN
		POP JMP2r &changed
	( only redraw on change )
	#00 OVR ;eye ADD2 .Screen/addr DEO2
	.cat/y LDZ2 #0008 ADD2 .Screen/y DEO2
	.cat/x LDZ2 #0008 SUB2 .Screen/x DEO2
	#81 .Screen/sprite DEOk DEO
	,&last STR

JMP2r
	&last $1

@draw-tail ( frame -- )

	STHk ,&last LDR NEQ ,&changed JCN
		POPr JMP2r &changed
	( only redraw on change )
	STHr #00 OVR ;frames ADD2 LDA
	#00 SWP #40 SFT2 ;body/tail ADD2
		.Screen/addr DEO2
	.cat/x LDZ2 .Screen/x DEO2
	.cat/y LDZ2 #0010 ADD2 .Screen/y DEO2
	#81 .Screen/sprite DEO
	,&last STR

JMP2r
	&last $1

@draw-cursor ( -- )
	
	( last cursor )
	;cursor STH2k .Screen/addr DEO2
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO
	( new cursor )
	STH2r .Screen/addr DEO2
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	#41 .Mouse/state DEI #00 NEQ ADD .Screen/sprite DEO

JMP2r

@cursor
	80c0 e0f0 f8e0 1000
@frames
	00 01 02 03 02 01 00 00
	00 00 00 00 00 00 00 00
@ears
	081c 3e3e 7f7f ffff 081c 3e3e 7f7f fffc
	081c 3c3e 7e7e ffff 081c 3c3e 7e7e ff1f
@eye
	ffff ffff ff7f 3f0f f7ef cfe7 f07c 3f0f
	ffff ffff fffe fcf0 87c3 c183 071e fcf0
	ffff ffff ff7f 3f0f f0e1 c1e0 f07c 3f0f
	ffff ffff fffe fcf0 f7fb f9f3 071e fcf0
	ffff ffff ff7f 3f0f f0e7 cfef f77c 3f0f
	ffff ffff fffe fcf0 0783 c1c3 871e fcf0
	ffff ffff ff7f 3f0f f0e0 c1e1 f07c 3f0f
	ffff ffff fffe fcf0 07f3 f9fb f71e fcf0
@body
	0707 0707 0302 0200 0107 0707 0300 0000
	&tail
	e0f0 f0e0 e080 8000 c0f2 f9f9 fef8 b000
	e0f0 f0e0 e080 8000 c0f2 f9f9 fef8 b000
	e0f0 f0e0 e080 8000 c0f2 faf9 fef8 b000
	e0f0 f0e0 e080 8000 c0f1 faf9 fef8 b000
	0707 0707 0f08 1000 0307 0707 0f00 0000
	e0e0 e0e0 e080 8000 f2f9 f9fe b884 8400
@ground
	bf00 5c02 0202 020c ef10 6f90 8080 8074
	ff00 fe01 0100 0116 fd00 3c40 4040 4028
( simple graphical clock )

|00 @System     [ &vector $2 &pad      $6 &r      $2 &g     $2 &b      $2 ]
|10 @Console    [ &vector $2 &read     $1 &pad    $5 &write $1 &error  $1 ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &auto  $1 &pad    $1 &x      $2 &y      $2 &addr $2 &pixel $1 &sprite $1 ]
|c0 @DateTime   [ &year   $2 &month    $1 &day    $1 &hour  $1 &minute $1 &second $1 &dotw $1 &doty $2 &isdst $1 ]

|0000

@last
	&day $1 &sec $1
@center
	&x $2 &y $2
@date
	&x $2 &y $2
@time
	&x $2 &y $2
@needles
	&hx $2 &hy $2
	&mx $2 &my $2
	&sx $2 &sy $2
	&zx $2 &zy $2
@buf
	&d $3 &h $2 &s1 $1 &m $2 &s2 $1 &s $3
@line
	&x $2 &y $2 &dx $2 &dy $2 &e1 $2

|0100 ( -> )

	( theme )
	#0ff8 .System/r DEO2
	#0f08 .System/g DEO2
	#0f08 .System/b DEO2
	( resize )
	#00f0 .Screen/width DEO2
	#0120 .Screen/height DEO2
	( vectors )
	;on-frame .Screen/vector DEO2
	( center )
	.Screen/width DEI2 #01 SFT2
		DUP2 .center/x STZ2
		DUP2 #0028 SUB2 .date/x STZ2
		#0020 SUB2 .time/x STZ2
	.Screen/height DEI2 #01 SFT2
		DUP2 .center/y STZ2
		DUP2 #0078 SUB2 .date/y STZ2
		#006c ADD2 .time/y STZ2
	;draw-watchface JSR2
	( time buffer )
	LIT ':
		DUP .buf/s1 STZ
		.buf/s2 STZ

( continue )

@on-frame ( -> )

	( once per second )
	.DateTime/second DEI
	DUP .last/sec LDZ EQU ,&same-sec JCN
		( make time )
		.DateTime/hour DEI .buf/h ;decimal JSR2
		.DateTime/minute DEI .buf/m ;decimal JSR2
		DUP .buf/s ;decimal JSR2
		( draw label )
		.time/x LDZ2 .Screen/x DEO2
		.time/y LDZ2 .Screen/y DEO2
		;buf/h ;draw-text JSR2
		( draw needles )
		#00 ;draw-needles JSR2
		;make-needles JSR2
		#01 ;draw-needles JSR2
		DUP .last/sec STZ
		&same-sec
	POP

	( once per day )
	.DateTime/day DEI
	DUP .last/day LDZ EQU ,&same-day JCN
		( make date )
		DUP .buf/d ;decimal JSR2
		( draw label )
		.date/x LDZ2 .Screen/x DEO2
		.date/y LDZ2 .Screen/y DEO2
		[ #00 .DateTime/dotw DEI #20 SFT ] ;week-txt ADD2 ;draw-text JSR2
		[ #00 .DateTime/month DEI #20 SFT ] ;month-txt ADD2 ;draw-text JSR2
		;buf/d ;draw-text JSR2
		DUP .last/day STZ
		&same-day
	POP

BRK

@draw-needles ( draw -- )

	STH
	.center/x LDZ2 .center/y LDZ2
	OVR2 OVR2
	.needles/mx LDZ2 .needles/my LDZ2 #01 STHkr MUL
		;draw-line JSR2
	OVR2 OVR2
	.needles/hx LDZ2 .needles/hy LDZ2 #01 STHkr MUL
		;draw-line JSR2
	.needles/sx LDZ2 .needles/sy LDZ2
	.needles/zx LDZ2 .needles/zy LDZ2 #02 STHr MUL
		;draw-line JSR2

	( middle )
	#0001 SUB2 .Screen/y DEO2
	#0001 SUB2 .Screen/x DEO2
	;middle-icn .Screen/addr DEO2
	#0a .Screen/sprite DEO

JMP2r

@draw-text ( addr* -- )

	( auto addr ) #15 .Screen/auto DEO
	&while
		LDAk
		DUP ;is-lc JSR2 ,&lc JCN
		DUP ;is-uc JSR2 ,&uc JCN
		DUP ;is-num JSR2 ,&num JCN
		DUP LIT '/ EQU ,&slash JCN
		DUP LIT ': EQU ,&colon JCN
		POP ;font/blank
		&end
		.Screen/addr DEO2
		#03 .Screen/sprite DEO
		INC2 LDAk ,&while JCN
	POP2
	#00 .Screen/sprite DEO
	( auto none ) #00 .Screen/auto DEO

JMP2r
	&lc #61 SUB #00 SWP #40 SFT2 ;font/lc ADD2 ,&end JMP
	&uc #41 SUB #00 SWP #40 SFT2 ;font/uc ADD2 ,&end JMP
	&num #30 SUB #00 SWP #40 SFT2 ;font/num ADD2 ,&end JMP
	&slash POP ;font/slash ,&end JMP
	&colon POP ;font/colon ,&end JMP

@draw-line ( x1* y1* x2* y2* color -- )

	( load ) STH ,&y STR2 ,&x STR2 .line/y STZ2 .line/x STZ2
	,&x LDR2 .line/x LDZ2 SUB2 ;abs2 JSR2 .line/dx STZ2
	#0000 ,&y LDR2 .line/y LDZ2 SUB2 ;abs2 JSR2 SUB2 .line/dy STZ2
	#ffff #00 .line/x LDZ2 ,&x LDR2 ;lts2 JSR2 DUP2 ADD2 ADD2 ,&sx STR2
	#ffff #00 .line/y LDZ2 ,&y LDR2 ;lts2 JSR2 DUP2 ADD2 ADD2 ,&sy STR2
	.line/dx LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
	&loop
		.line/x LDZ2 DUP2 .Screen/x DEO2 [ LIT2 &x $2 ] EQU2
		.line/y LDZ2 DUP2 .Screen/y DEO2 [ LIT2 &y $2 ] EQU2
			STHkr .Screen/pixel DEO
			AND ,&end JCN
		.line/e1 LDZ2 DUP2 ADD2 DUP2
		.line/dy LDZ2 ;lts2 JSR2 ,&skipy JCN
			.line/e1 LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
			.line/x LDZ2 [ LIT2 &sx $2 ] ADD2 .line/x STZ2
		&skipy
		.line/dx LDZ2 ;gts2 JSR2 ,&skipx JCN
			.line/e1 LDZ2 .line/dx LDZ2 ADD2 .line/e1 STZ2
			.line/y LDZ2 [ LIT2 &sy $2 ] ADD2 .line/y STZ2
		&skipx
		,&loop JMP
	&end
	POPr

JMP2r

@draw-watchface ( -- )

	#3c00
	&loop
		( dots )
		#00 OVRk ADD2 ;table ADD2 LDA2
			#0018 ;circle JSR2
			.Screen/x DEO2 .Screen/y DEO2 #01 .Screen/pixel DEO
		( markers )
		DUP #05 ;mod JSR2 ,&no-marker JCN
			#00 OVRk ADD2 ;table ADD2 LDA2
			STH2k #0018 ;circle JSR2 SWP2
			STH2r #001c ;circle JSR2 SWP2
				#01 ;draw-line JSR2
			&no-marker
		INC GTHk ;&loop JCN2
	POP2

JMP2r

@make-needles ( -- )

	[ #00 .DateTime/second DEI #1e ADD #3c ;mod JSR2 ] DUP2 ADD2 ;table ADD2 LDA2
		#00a0 ,circle JSR .needles/zx STZ2 .needles/zy STZ2
	[ #00 .DateTime/second DEI ] DUP2 ADD2 ;table ADD2 LDA2
		#0020 ,circle JSR .needles/sx STZ2 .needles/sy STZ2
	[ #00 .DateTime/minute DEI ] DUP2 ADD2 ;table ADD2 LDA2
		#0022 ,circle JSR .needles/mx STZ2 .needles/my STZ2
	[ #00 .DateTime/hour DEI #0c ;mod JSR2 #20 SFTk NIP ADD ]
	( minute offset ) [ #00 .DateTime/minute DEI #0f DIV ADD2 ] DUP2 ADD2 ;table ADD2 LDA2
		#002a ,circle JSR .needles/hx STZ2 .needles/hy STZ2

JMP2r

@circle ( cx cy radius* -- y* x* )

	STH2 SWP
	#00 SWP #40 SFT2 STH2kr DIV2 .center/x LDZ2 ADD2 #0800 STH2kr DIV2 SUB2
	STH2 SWP2r
	#00 SWP #40 SFT2 STH2kr DIV2 .center/y LDZ2 ADD2 #0800 STH2kr DIV2 SUB2
	POP2r STH2r

JMP2r

@decimal ( value* zp-label -- )

	STH
	DUP #0a DIV #30 ADD STHkr STZ
	#0a ;mod JSR2 #30 ADD STHr INC STZ

JMP2r

@mod DIVk MUL SUB JMP2r
@abs2 DUP2 #0f SFT2 EQU #05 JCN #0000 SWP2 SUB2 JMP2r
@lts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 GTH2 JMP2r
@gts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 LTH2 JMP2r
@is-uc DUP #40 GTH SWP #5b LTH AND JMP2r
@is-lc DUP #60 GTH SWP #7b LTH AND JMP2r
@is-num DUP #2f GTH SWP #3a LTH AND JMP2r

@week-txt
	"Sun $1 "Mon $1 "Tue $1 "Wed $1 "Thu $1 "Fri $1
	"Sat $1

@month-txt
	"Jan $1 "Feb $1 "Mar $1 "Apr $1 "May $1 "Jun $1
	"Jul $1 "Aug $1 "Sep $1 "Oct $1 "Nov $1 "Dec $1

@table ( 60 positions on a circle )
	8000 8d00 9a02 a706 b40b c011 cb18 d520
	df2a e734 ee40 f44b f958 fd65 ff72 ff80
	ff8d fd9a f9a7 f4b4 eec0 e7cb dfd5 d5df
	cbe7 c0ee b4f4 a7f9 9afd 8dff 80ff 72ff
	65fd 58f9 4bf4 40ee 34e7 2adf 20d5 18cb
	11c0 0bb4 06a7 029a 008d 0080 0072 0265
	0658 0b4b 113f 1834 202a 2a20 3418 3f11
	4b0b 5806 6502 7200

@middle-icn
	40e0 4000 0000 0000

@font
	&num
	0018 2442 4242 4242 4242 4242 4224 1800
	0008 1828 0808 0808 0808 0808 0808 1c00
	0018 2442 4202 0202 0408 1020 4040 7e00
	0018 2442 0202 0438 0402 0202 0204 7800
	000c 0c14 1414 2424 2444 447e 0404 0e00
	007e 4040 4040 5864 4202 0202 0204 7800
	000c 1020 4040 5864 4242 4242 4224 1800
	007e 4202 0204 0404 0808 0810 1010 1000
	0018 2442 4242 2418 2442 4242 4224 1800
	0018 2442 4242 4242 261a 0202 0408 3000
	&uc
	0010 1028 2844 4444 8282 fe82 8282 0000
	00f8 4442 4242 4478 4442 4242 44f8 0000
	003c 4282 8280 8080 8080 8282 423c 0000
	00f8 4442 4242 4242 4242 4242 44f8 0000
	00fc 4240 4040 4878 4840 4040 42fc 0000
	80fe 4240 4040 447c 4440 4040 40e0 0000
	003a 4682 8080 8e82 8282 8282 463a 0000
	00ee 4444 4444 447c 4444 4444 44ee 0000
	0038 1010 1010 1010 1010 1010 1038 0000
	000e 0404 0404 0404 0404 4444 2810 0000
	00ee 4448 4850 5060 5050 4848 44ee 0000
	00e0 4040 4040 4040 4040 4040 42fe 0000
	0082 c6c6 c6aa aaaa 9292 9282 8282 0000
	00e2 4262 6262 5252 4a4a 4646 42e2 0000
	0038 4482 8282 8282 8282 8282 4438 0000
	00f8 4442 4242 4244 7840 4040 40f0 0000
	0038 4482 8282 8282 8282 829a 643a 0000
	00f8 4442 4242 4478 4844 4442 42e2 0000
	0010 2844 4440 2010 0804 4444 2810 0000
	00fe 9210 1010 1010 1010 1010 1038 0000
	00ee 4444 4444 4444 4444 4444 4438 0000
	0082 8282 8282 8244 4444 2828 1010 0000
	0082 8292 9292 9292 92ba aa44 4444 0000
	0042 4242 2424 1818 1824 2442 4242 0000
	0082 8282 4444 2828 1010 1010 1038 0000
	007e 4204 0408 0810 1020 2040 427e 0000
	&lc
	0000 0000 0030 0808 3848 4848 4834 0000
	0060 2020 202c 3222 2222 2222 322c 0000
	0000 0000 001c 2240 4040 4040 221c 0000
	000c 0404 0434 4c44 4444 4444 4c36 0000
	0000 0000 0018 2424 3c20 2020 2418 0000
	000c 1210 1038 1010 1010 1010 1038 0000
	0000 0000 0034 4a48 4830 4038 4444 4438
	00c0 4040 4058 6444 4444 4444 44ee 0000
	0010 0000 0030 1010 1010 1010 1038 0000
	0008 0000 0018 0808 0808 0808 0808 2810
	0060 2020 2022 2224 2438 2424 2272 0000
	0030 1010 1010 1010 1010 1010 1038 0000
	0000 0000 00a4 da92 9292 9292 9292 0000
	0000 0000 00d8 6444 4444 4444 44ee 0000
	0000 0000 0038 4482 8282 8282 4438 0000
	0000 0000 00d8 6442 4242 4242 6458 40e0
	0000 0000 0034 4c84 8484 8484 4c34 040e
	0000 0000 0068 3420 2020 2020 2070 0000
	0000 0000 0018 2424 1008 0424 2418 0000
	0010 1010 107c 1010 1010 1010 1408 0000
	0000 0000 00cc 4444 4444 4444 4c36 0000
	0000 0000 00ee 4444 4428 2828 1010 0000
	0000 0000 0092 9292 9292 92aa 4444 0000
	0000 0000 00ee 4428 1010 1028 44ee 0000
	0000 0000 00ee 4444 4448 2828 1010 2040
	0000 0000 007c 4408 0810 2020 447c 0000
	&colon
	0000 0000 0010 1000 0000 0000 1010 0000
	&slash
	0202 0404 0808 1010 2020 4040 8080 0000
	&blank
	0000 0000 0000 0000 0000 0000 0000 0000

( Cube3d:
	Just a cube, y'know )

|00 @System &vector $2 &wst $1 &rst $1 &eaddr $2 &ecode $1 &pad $1 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1

|0000

@timer $1
@color $1
@cube &v0 $8 &v4 $8
@line &x $2 &y $2 &dx $2 &dy $2 &e1 $2
@center &x $2 &y $2

( program )

|0100 ( -> )

	( theme )
	#4fcd .System/r DEO2
	#4fc3 .System/g DEO2
	#dfc2 .System/b DEO2
	( center )
	.Screen/width DEI2 #01 SFT2 #0040 SUB2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 #0040 SUB2 .center/y STZ2
	( begin. )
	;on-frame .Screen/vector DEO2

@on-frame ( -> )

	#00 ;draw-cube JSR2
	.timer LDZk INC SWP STZ
	#05 ;draw-cube JSR2

BRK

@draw-cube ( frame color -- )

	.color STZ
	( create box )
	#0800
	&loop
		STHk
		#00 .timer LDZ [ #00 STHkr INC #07 AND #60 SFT ADD2 ] #00ff AND2 ;table ADD2 LDA #01 SFT
		#00 .timer LDZ [ #00 STHkr #60 SFT ADD2 ] #00ff AND2 ;table ADD2 LDA #02 SFT [ #00 STHkr #62 SFT2 ADD2 ]
		.cube/v0 STHr DUP ADD ADD STZ2
		INC GTHk ,&loop JCN
	POP2
	( vertices )
	#0800
	&ver-loop
		DUP DUP ADD .cube ADD LDZ2 ;draw-vertex JSR2
		INC GTHk ,&ver-loop JCN
	POP2
	( lines )
	#0400
	&line-loop
		STHk
		.cube/v0 STHkr DUP ADD ADD .cube/v0 STHkr INC #03 AND DUP ADD ADD ,trace JSR
		.cube/v0 STHkr DUP ADD ADD .cube/v4 STHkr DUP ADD ADD ,trace JSR
		.cube/v4 STHkr DUP ADD ADD .cube/v4 STHr INC #03 AND DUP ADD ADD ,trace JSR
		INC GTHk ,&line-loop JCN
	POP2

JMP2r

@trace ( a b -- )

	STH STH
	#00 STHkr LDZ .center/x LDZ2 ADD2 #00 STHr INC LDZ .center/y LDZ2 ADD2
	#00 STHkr LDZ .center/x LDZ2 ADD2 #00 STHr INC LDZ .center/y LDZ2 ADD2
		.color LDZ ;draw-line JSR2

JMP2r

@draw-vertex ( x y -- )

	#00 SWP #0004 SUB2 .center/y LDZ2 ADD2 .Screen/y DEO2
	#00 SWP #0003 SUB2 .center/x LDZ2 ADD2 .Screen/x DEO2
	;&icn .Screen/addr DEO2
	.color LDZ .Screen/sprite DEO

JMP2r
	&icn 0000 387c 7c7c 3800

@draw-line ( x1* y1* x2* y2* color -- )

	( load ) STH ,&y STR2 ,&x STR2 .line/y STZ2 .line/x STZ2
	,&x LDR2 .line/x LDZ2 SUB2 ;abs2 JSR2 .line/dx STZ2
	#0000 ,&y LDR2 .line/y LDZ2 SUB2 ;abs2 JSR2 SUB2 .line/dy STZ2
	#ffff #00 .line/x LDZ2 ,&x LDR2 ;lts2 JSR2 DUP2 ADD2 ADD2 ,&sx STR2
	#ffff #00 .line/y LDZ2 ,&y LDR2 ;lts2 JSR2 DUP2 ADD2 ADD2 ,&sy STR2
	.line/dx LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
	&loop
		.line/x LDZ2 DUP2 .Screen/x DEO2 [ LIT2 &x $2 ] EQU2
		.line/y LDZ2 DUP2 .Screen/y DEO2 [ LIT2 &y $2 ] EQU2
			STHkr .Screen/pixel DEO
			AND ,&end JCN
		.line/e1 LDZ2 DUP2 ADD2 DUP2
		.line/dy LDZ2 ;lts2 JSR2 ,&skipy JCN
			.line/e1 LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
			.line/x LDZ2 [ LIT2 &sx $2 ] ADD2 .line/x STZ2
		&skipy
		.line/dx LDZ2 ;gts2 JSR2 ,&skipx JCN
			.line/e1 LDZ2 .line/dx LDZ2 ADD2 .line/e1 STZ2
			.line/y LDZ2 [ LIT2 &sy $2 ] ADD2 .line/y STZ2
		&skipx
		,&loop JMP
	&end
	POPr

JMP2r

@abs2 DUP2 #0f SFT2 EQU #05 JCN #0000 SWP2 SUB2 JMP2r
@lts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 GTH2 JMP2r
@gts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 LTH2 JMP2r

@table ( 256 xy )
	f7f8 f9fa fbfc fcfd fefe ffff ffff ffff
	ffff ffff fffe fefd fcfc fbfa f9f8 f7f6
	f5f3 f2f0 efed ecea e8e6 e4e2 e0de dcda
	d8d5 d3d1 cecc c9c7 c4c1 bfbc b9b6 b3b0
	aeab a8a5 a29f 9c98 9592 8f8c 8986 8380
	7c79 7673 706d 6a67 6360 5d5a 5754 514f
	4c49 4643 403e 3b38 3633 312e 2c2a 2725
	2321 1f1d 1b19 1715 1312 100f 0d0c 0a09
	0807 0605 0403 0302 0101 0000 0000 0000
	0000 0000 0001 0102 0303 0405 0607 0809
	0a0c 0d0f 1012 1315 1719 1b1d 1f21 2325
	272a 2c2e 3133 3638 3b3e 4043 4649 4c4f
	5154 575a 5d60 6367 6a6d 7073 7679 7c7f
	8386 898c 8f92 9598 9c9f a2a5 a8ab aeb0
	b3b6 b9bc bfc1 c4c7 c9cc ced1 d3d5 d8da
	dcde e0e2 e4e6 e8ea eced eff0 f2f3 f5f6
( dev/audio )

%MOD { DIVk MUL SUB }

( devices )

|00 @System     [ &vector $2 &pad      $6 &r      $2 &g     $2 &b      $2 ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &pad   $2 &x      $2 &y    $2 &addr  $2 &pixel $1 &sprite $1 ]
|30 @Audio0     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr  $2 &volume $1 &pitch $1 ]
|40 @Audio1     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr  $2 &volume $1 &pitch $1 ]
|50 @Audio2     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr  $2 &volume $1 &pitch $1 ]
|60 @Audio3     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr  $2 &volume $1 &pitch $1 ]

( variables )

|0000

@timer    $1
@counter  $1

|0100 ( -> )
	
	( theme )
	#00ff .System/r DEO2 
	#0f0f .System/g DEO2 
	#0ff0 .System/b DEO2 

	( vectors )
	;on-frame .Screen/vector DEO2

	( setup synth )
	#1202 .Audio0/adsr DEO2
	;saw .Audio0/addr DEO2
	#0100 .Audio0/length DEO2
	#88 .Audio0/volume DEO

	#0101 .Audio1/adsr DEO2
	;tri .Audio1/addr DEO2
	#0100 .Audio1/length DEO2
	#88 .Audio1/volume DEO

	#0112 .Audio2/adsr DEO2
	;sin .Audio2/addr DEO2
	#0100 .Audio2/length DEO2
	#88 .Audio2/volume DEO

	#0022 .Audio3/adsr DEO2
	;piano .Audio3/addr DEO2
	#0100 .Audio3/length DEO2
	#88 .Audio3/volume DEO

BRK

@on-frame ( -> )

	( incr ) .timer LDZ INC .timer STZ 
	( skip ) .timer LDZ #10 EQU #01 JCN [ BRK ]

	( get note )
	.counter LDZ #18 MOD #30 ADD 
		.Audio0/pitch .counter LDZ #03 AND #40 SFT ADD DEO

	.counter LDZ INC .counter STZ
	#00 .timer STZ

BRK

@saw 
	0003 0609 0c0f 1215 181b 1e21 2427 2a2d
	3033 3639 3b3e 4143 4649 4b4e 5052 5557
	595b 5e60 6264 6667 696b 6c6e 7071 7274
	7576 7778 797a 7b7b 7c7d 7d7e 7e7e 7e7e
	7f7e 7e7e 7e7e 7d7d 7c7b 7b7a 7978 7776
	7574 7271 706e 6c6b 6967 6664 6260 5e5b
	5957 5552 504e 4b49 4643 413e 3b39 3633
	302d 2a27 2421 1e1b 1815 120f 0c09 0603
	00fd faf7 f4f1 eeeb e8e5 e2df dcd9 d6d3
	d0cd cac7 c5c2 bfbd bab7 b5b2 b0ae aba9
	a7a5 a2a0 9e9c 9a99 9795 9492 908f 8e8c
	8b8a 8988 8786 8585 8483 8382 8282 8282
	8182 8282 8282 8383 8485 8586 8788 898a
	8b8c 8e8f 9092 9495 9799 9a9c 9ea0 a2a5
	a7a9 abae b0b2 b5b7 babd bfc2 c5c7 cacd
	d0d3 d6d9 dcdf e2e5 e8eb eef1 f4f7 fafd 
@tri
	8082 8486 888a 8c8e 9092 9496 989a 9c9e
	a0a2 a4a6 a8aa acae b0b2 b4b6 b8ba bcbe
	c0c2 c4c6 c8ca ccce d0d2 d4d6 d8da dcde
	e0e2 e4e6 e8ea ecee f0f2 f4f6 f8fa fcfe
	fffd fbf9 f7f5 f3f1 efed ebe9 e7e5 e3e1
	dfdd dbd9 d7d5 d3d1 cfcd cbc9 c7c5 c3c1
	bfbd bbb9 b7b5 b3b1 afad aba9 a7a5 a3a1
	9f9d 9b99 9795 9391 8f8d 8b89 8785 8381
	7f7d 7b79 7775 7371 6f6d 6b69 6765 6361
	5f5d 5b59 5755 5351 4f4d 4b49 4745 4341
	3f3d 3b39 3735 3331 2f2d 2b29 2725 2321
	1f1d 1b19 1715 1311 0f0d 0b09 0705 0301
	0103 0507 090b 0d0f 1113 1517 191b 1d1f
	2123 2527 292b 2d2f 3133 3537 393b 3d3f
	4143 4547 494b 4d4f 5153 5557 595b 5d5f
	6163 6567 696b 6d6f 7173 7577 797b 7d7f
@sin
	8083 8689 8c8f 9295 989b 9ea1 a4a7 aaad
	b0b3 b6b9 bbbe c1c3 c6c9 cbce d0d2 d5d7
	d9db dee0 e2e4 e6e7 e9eb ecee f0f1 f2f4
	f5f6 f7f8 f9fa fbfb fcfd fdfe fefe fefe
	fffe fefe fefe fdfd fcfb fbfa f9f8 f7f6
	f5f4 f2f1 f0ee eceb e9e7 e6e4 e2e0 dedb
	d9d7 d5d2 d0ce cbc9 c6c3 c1be bbb9 b6b3
	b0ad aaa7 a4a1 9e9b 9895 928f 8c89 8683
	807d 7a77 7471 6e6b 6865 625f 5c59 5653
	504d 4a47 4542 3f3d 3a37 3532 302e 2b29
	2725 2220 1e1c 1a19 1715 1412 100f 0e0c
	0b0a 0908 0706 0505 0403 0302 0202 0202
	0102 0202 0202 0303 0405 0506 0708 090a
	0b0c 0e0f 1012 1415 1719 1a1c 1e20 2225
	2729 2b2e 3032 3537 3a3d 3f42 4547 4a4d
	5053 5659 5c5f 6265 686b 6e71 7477 7a7d
@piano
	8182 8588 8d91 959b a1a6 aaad b2b5 b8bd
	c1c7 cbd0 d5d9 dde1 e5e5 e4e4 e1dc d7d1
	cbc5 bfb8 b2ac a6a2 9c97 928d 8884 807c
	7977 7574 7372 7272 7273 7372 706d 6964
	605b 5650 4d49 4643 4342 4244 4548 4a4d
	5052 5556 5758 5554 5150 4c4a 4744 423f
	3d3c 3a38 3835 3431 3030 2f31 3336 393e
	4449 4e54 5a60 666b 7175 7b82 8990 989e
	a6ab b1b6 babd bebf bfbe bbb9 b6b3 b0ae
	aaa8 a6a3 a19e 9c9a 9997 9696 9798 9b9e
	a1a4 a6a9 a9ac adad adae aeaf b0b0 b1b1
	b3b3 b4b4 b4b3 b3b1 b0ad abab a9a9 a8a8
	a7a5 a19d 9891 8b84 7e77 726e 6b6b 6b6c
	6f71 7477 7776 7370 6c65 5e56 4e48 423f
	3d3c 3b3a 3a39 3838 3839 393a 3c3e 4146
	4a50 575b 6064 686a 6e70 7274 7677 7a7d

@melody [ 
	54 52 54 4f 4b 4f 48 ff
	54 52 54 4f 4b 4f 48 ff
	54 56 57 56 57 54 56 54 
	56 52 54 52 54 50 54 ff ] 
( File:
	Creates a temporary file called file-output.txt, 
	then read it back in console, print length and delete it. )

|a0 @File0 &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2
|b0 @File1 &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0100 ( -> )

	( write a file with file0 )
	;filepath-txt .File0/name DEO2
	;part1 ,append JSR
	;part2 ,append JSR
	( close file before changing device )
	.File0/name DEI2k ROT DEO2
	( read a file with file1 )
	;filepath-txt .File1/name DEO2
	,stream JSR
	( delete file with file0 )
	;filepath-txt .File0/delete DEO2

BRK

@append ( part* -- )

	DUP2 ;print-str JSR2
	DUP2 ;slen JSR2 STH2k .File0/length DEO2
	.File0/write DEO2
	( print result )
	;saved-txt ;print-str JSR2 
	STH2r ;print JSR2 #2018 DEO
	;bytes-txt ;print-str JSR2 #0a18 DEO

JMP2r

@stream ( -- )

	#0001 .File1/length DEO2
	LIT2r 0000
	&stream
		;&buf DUP2 .File1/read DEO2 LDA #18 DEO INC2r
		.File1/success DEI2 #0000 NEQ2 ,&stream JCN
	( print result )
	;loaded-txt ;print-str JSR2 
	STH2r ;print JSR2 #2018 DEO
	;bytes-txt ;print-str JSR2 #0a18 DEO

JMP2r
	&buf $1

@slen ( str* -- len* )

	DUP2 ,scap JSR SWP2 SUB2

JMP2r

@scap ( str* -- end* )

	LDAk #00 NEQ JMP JMP2r
	&while INC2 LDAk ,&while JCN

JMP2r

@print ( short* -- )

	&short ( short* -- ) SWP ,&byte JSR
	&byte ( byte -- ) DUP #04 SFT ,&char JSR
	&char ( char -- ) #0f AND DUP #09 GTH #27 MUL ADD #30 ADD #18 DEO

JMP2r

@print-str ( str* -- )

	&while
		LDAk #18 DEO
		INC2 LDAk ,&while JCN
	POP2

JMP2r

@saved-txt "Saved 20 $1
@loaded-txt "Loaded 20 $1
@bytes-txt "bytes. $1
@filepath-txt "file-output.txt $1

@part1
	596f 7572 2073 6163 7265 6420 706c 616e
	7473 2c20 6966 2068 6572 6520 6265 6c6f
	772c 0a4f 6e6c 7920 616d 6f6e 6720 7468
	6520 706c 616e 7473 2077 696c 6c20 6772
	6f77 2e0a 00

@part2
	536f 6369 6574 7920 6973 2061 6c6c 2062
	7574 2072 7564 652c 0a54 6f20 7468 6973
	2064 656c 6963 696f 7573 2073 6f6c 6974
	7564 652e 0a
( mandelbrot )

%+  { ADD }  %-  { SUB }  %*  { MUL }  %/  { DIV }
%<  { LTH }  %>  { GTH }  %=  { EQU }  %!  { NEQ }

%GTS2 { #8000 ADD2 SWP2 #8000 ADD2 LTH2 }
%AUTO-X    { #01 .Screen/auto DEO }
%NEXT-LINE { #0000 .Screen/x DEO2 .Screen/y DEI2k INC2 ROT DEO2 }

%WIDTH { #0280 }
%HEIGHT { #01e0 }

%XMIN { #de69 } ( -8601 )
%XMAX { #0b33 } ( 2867 )
%YMIN { #ecc7 } ( -4915 )
%YMAX { #1333 } ( 4915 )
%MAXI { #20 } ( 32 )
%DX { XMAX XMIN SUB2 WIDTH DIV2 } ( (XMAX-XMIN)/W )
%DY { YMAX YMIN SUB2 HEIGHT DIV2 } ( (YMAX-YMIN)/H )
%X  { .x LDZ2  } %Y  { .y LDZ2  }
%X2 { .x2 LDZ2 } %Y2 { .y2 LDZ2 }

|00 @System     &vector $2 &wst      $1 &rst    $1 &eaddr  $2 &ecode  $1 &pad     $1 &r       $2 &g      $2 &b     $2 &debug  $1 &halt $1
|20 @Screen     &vector $2 &width    $2 &height $2 &auto   $1 &pad    $1 &x       $2 &y       $2 &addr   $2 &pixel $1 &sprite $1

|0000 ( zero-page )

@x  $2 @y  $2
@x2 $2 @y2 $2

|0100 ( -> )

	( theme ) 
	#0f0f .System/r DEO2 
	#0ff0 .System/g DEO2 
	#00ff .System/b DEO2

	WIDTH .Screen/width DEO2 ( 640 )
	HEIGHT .Screen/height DEO2 ( 480 )

	AUTO-X

	;draw-mandel JSR2

BRK

@draw-mandel ( -- )

	YMAX YMIN
	&ver
		DUP2 ,&y STR2
		XMAX XMIN
		&hor
			DUP2 ,&x STR2
			#0000 DUP2k DUP2 .x STZ2 .y STZ2 .x2 STZ2 .y2 STZ2
			MAXI #00
			&loop
				X Y ;smul2 JSR2 DUP2 ADD2 [ LIT2 &y $2 ] ADD2 .y STZ2
				X2 Y2 SUB2 [ LIT2 &x $2 ] ADD2 .x STZ2
				X DUP2 ;smul2 JSR2 .x2 STZ2
				Y DUP2 ;smul2 JSR2 .y2 STZ2
				X2 Y2 ADD2 #4000 GTH2 ,&end JCN
				INC GTHk ,&loop JCN
				&end
			NIP .Screen/pixel DEO
			DX ADD2 OVR2 OVR2 GTS2 ;&hor JCN2
		POP2 POP2
		NEXT-LINE
		DY ADD2 OVR2 OVR2 GTS2 ;&ver JCN2
	POP2 POP2

JMP2r

@smul2 ( a* b* -- c* )
	LITr 00
	DUP2 #8000 LTH2 ,&b-positive JCN
	INCr DUP2k EOR2 SWP2 SUB2
	&b-positive
	SWP2
	DUP2 #8000 LTH2 ,&a-positive JCN
	INCr DUP2k EOR2 SWP2 SUB2
	&a-positive
	( ahi alo bhi blo )
	LITr 00 STH ( ahi alo bhi / blo* )
	OVRr STH ( ahi alo / blo* bhi* )
	OVRr STH ( ahi / blo* bhi* alo* )
	OVRr STH ( asign / blo* bhi* alo* ahi* )
	ROT2r MUL2kr STH2r ( asign ahi-bhi* / blo* alo* ahi* bhi* )
	ROT2r MUL2kr STH2r ( asign ahi-bhi* alo-bhi* / blo* ahi* bhi* alo* )
	NIP2r ( asign ahi-bhi* alo-bhi* / blo* ahi* alo* )
	ROT2r MUL2kr STH2r ( asign ahi-bhi* alo-bhi* alo-blo* / ahi* alo* blo* )
	ROT2r MUL2r STH2r POP2r ( asign ahi-bhi* alo-bhi* alo-blo* ahi-blo* )
	SWP2 ( asign ahi-bhi* alo-bhi* ahi-blo* alo-blo* )
	( 32-bit result is [ r3 r2 r1 r0 ] )
	POP #00 SWP ( asign ahi-bhi* alo-bhi* ahi-blo* r21* )
	( r21 max is 00fe, ahi-blo max is 7e81, max sum is 7f7f )
	ADD2 ( asign ahi-bhi* alo-bhi* r21'* )
	( r21' max is 7f7f, alo-bhi max is 7e81, max sum is fe00 )
	ADD2 ( asign ahi-bhi* r21"* )
	( The result we want is bits 27-12 due to the fixed point representation we use. )
	#04 SFT2 SWP2 #40 SFT2 ADD2
	( saturate to +/-7.fff )
	#7fff GTH2k JMP SWP2 NIP2
	STHr #01 NEQ ,&result-positive JCN
	DUP2k EOR2 SWP2 SUB2
	&result-positive
JMP2r
( GUI Shapes )

%ABS2 { DUP2 #0f SFT2 EQU #05 JCN #0000 SWP2 SUB2 }
%LTS2  { #8000 ADD2 SWP2 #8000 ADD2 GTH2 }
%GTS2  { #8000 ADD2 SWP2 #8000 ADD2 LTH2 }
%WIDTH { #0100 } %HEIGHT { #00a0 }

( devices )

|00 @System [ &vector $2 &pad $6 &r $2 &g $2 &b $2 ]
|20 @Screen [ &vector $2 &width $2 &height $2 &pad $2 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]

( variables )

|0000

( draw requirements )
@color [ &byte $1 ]

@rect [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@line [ &x0 $2 &y0 $2 &x $2 &y $2 &sx $2 &sy $2 &dx $2 &dy $2 &e1 $2 &e2 $2 ]
@circle [ &xc $2 &yc $2 &x $2 &y $2 &r $2 &d $2 ]

( program )

|0100
	
	( theme ) 
	#f0ff .System/r DEO2 
	#f03c .System/g DEO2 
	#f03f .System/b DEO2

	( background ) ;checker-icn #03 ;cover-pattern JSR2

	.Screen/width DEI2 #01 SFT2 WIDTH #01 SFT2 SUB2 #0008 ADD2
	.Screen/height DEI2 #01 SFT2 HEIGHT #01 SFT2 SUB2 #0008 ADD2
	WIDTH HEIGHT
	STH2 STH2 OVR2 STH2r ADD2 OVR2 STH2r ADD2 #02 ;fill-rect JSR2

	.Screen/width DEI2 #01 SFT2 WIDTH #01 SFT2 SUB2
	.Screen/height DEI2 #01 SFT2 HEIGHT #01 SFT2 SUB2
	WIDTH HEIGHT
	STH2 STH2 OVR2 STH2r ADD2 OVR2 STH2r ADD2 #01 ;fill-rect JSR2

	.Screen/width DEI2 #01 SFT2 WIDTH #01 SFT2 SUB2  #0008 ADD2
	.Screen/height DEI2 #01 SFT2 HEIGHT #01 SFT2 SUB2  #0008 ADD2
	WIDTH #0010 SUB2 HEIGHT #0010 SUB2
	STH2 STH2 OVR2 STH2r ADD2 OVR2 STH2r ADD2 #03 ;line-rect JSR2

	.Screen/width DEI2 #01 SFT2 .Screen/height DEI2 #01 SFT2 WIDTH #02 SFT2 #02 ;draw-circle JSR2

	#0010 #0030 #0068 #02 ;line-hor JSR2
	#0020 #0058 #0078 #02 ;line-ver JSR2
	
BRK

@line-slow ( x1 y1 x2 y2 color -- )
	
	( load ) .color STZ #0001 SUB2 .line/y0 STZ2 #0001 SUB2 .line/x0 STZ2 .line/y STZ2 .line/x STZ2
	.line/x0 LDZ2 .line/x LDZ2 SUB2 ABS2 .line/dx STZ2
	.line/y0 LDZ2 .line/y LDZ2 SUB2 ABS2 #0000 SWP2 SUB2 .line/dy STZ2
	#ffff #00 .line/x LDZ2 .line/x0 LDZ2 LTS2 #10 SFT2 ADD2 .line/sx STZ2
	#ffff #00 .line/y LDZ2 .line/y0 LDZ2 LTS2 #10 SFT2 ADD2 .line/sy STZ2
	.line/dx LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
	&loop
		.line/x LDZ2 .Screen/x DEO2 .line/y LDZ2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.line/x LDZ2 .line/x0 LDZ2 EQU2 .line/y LDZ2 .line/y0 LDZ2 EQU2 AND ,&end JCN
		.line/e1 LDZ2 #10 SFT2 .line/e2 STZ2
		.line/e2 LDZ2 .line/dy LDZ2 LTS2 ,&skipy JCN
			.line/e1 LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
			.line/x LDZ2 .line/sx LDZ2 ADD2 .line/x STZ2
		&skipy
		.line/e2 LDZ2 .line/dx LDZ2 GTS2 ,&skipx JCN
			.line/e1 LDZ2 .line/dx LDZ2 ADD2 .line/e1 STZ2
			.line/y LDZ2 .line/sy LDZ2 ADD2 .line/y STZ2
		&skipx
		;&loop JMP2

	&end

JMP2r

@line-rect ( x1* y1* x2* y2* color -- )

	STH
	DUP2 ,&ver-y2 STR2 ,&hor-y2 STR2
	DUP2 ,&ver-x2 STR2 ,&hor-x2 STR2
	DUP2 ,&ver-y1 STR2 ,&hor-y1 STR2
	DUP2 ,&ver-x1 STR2 ,&hor-x1 STR2
	( horizontal )
	[ LIT2 &hor-x2 $2 ] INC2 [ LIT2 &hor-x1 $2 ]
	&hor
		DUP2 .Screen/x DEO2
		[ LIT2 &hor-y1 $2 ] .Screen/y DEO2 STHkr .Screen/pixel DEOk
		[ LIT2 &hor-y2 $2 ] .Screen/y DEO2 DEO
		INC2 GTH2k ,&hor JCN
	POP2 POP2
	( vertical )
	[ LIT2 &ver-y2 $2 ] [ LIT2 &ver-y1 $2 ]
	&ver
		DUP2 .Screen/y DEO2
		[ LIT2 &ver-x1 $2 ] .Screen/x DEO2 STHkr .Screen/pixel DEOk
		[ LIT2 &ver-x2 $2 ] .Screen/x DEO2 DEO
		INC2 GTH2k ,&ver JCN
	POP2 POP2
	POPr

JMP2r

@fill-rect ( x1* y1* x2* y2* color -- )
	
	,&color STR
	( x1 x2 y1 y2 ) ROT2
	&ver
		( save ) DUP2 .Screen/y DEO2
		STH2 STH2 OVR2 OVR2 SWP2
		&hor
			( save ) DUP2 .Screen/x DEO2
			( draw ) ,&color LDR .Screen/pixel DEO
			( incr ) INC2
			OVR2 OVR2 GTS2 ,&hor JCN
		POP2 POP2 STH2r STH2r
		( incr ) INC2
		OVR2 OVR2 GTS2 ,&ver JCN
	POP2 POP2 POP2 POP2

JMP2r
	&color $1

@draw-circle ( xc yc r color -- )

	( load ) .color STZ .circle/r STZ2 .circle/yc STZ2 .circle/xc STZ2
	#0000 .circle/x STZ2 .circle/r LDZ2 .circle/y STZ2
	.circle/r LDZ2 #10 SFT2 .circle/d STZ2
	( draw ) ;&seg JSR2
	&loop
		( incr ) .circle/x LDZ2 INC2 .circle/x STZ2
		.circle/d LDZ2 #0001 LTS2 ,&else JCN
			( decr ) .circle/y LDZ2 #0001 SUB2 .circle/y STZ2
			.circle/x LDZ2 .circle/y LDZ2 SUB2 #20 SFT2 .circle/d LDZ2 ADD2 .circle/d STZ2
			;&end JMP2
		&else
			.circle/x LDZ2 #20 SFT2 .circle/d LDZ2 ADD2 .circle/d STZ2
		&end
		( draw ) ;&seg JSR2
		.circle/y LDZ2 .circle/x LDZ2 #0001 SUB2 GTS2 ,&loop JCN
	JMP2r
	&seg
		.circle/xc LDZ2 .circle/x LDZ2 ADD2 .Screen/x DEO2 .circle/yc LDZ2 .circle/y LDZ2 ADD2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.circle/xc LDZ2 .circle/x LDZ2 SUB2 .Screen/x DEO2 .circle/yc LDZ2 .circle/y LDZ2 ADD2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.circle/xc LDZ2 .circle/x LDZ2 ADD2 .Screen/x DEO2 .circle/yc LDZ2 .circle/y LDZ2 SUB2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.circle/xc LDZ2 .circle/x LDZ2 SUB2 .Screen/x DEO2 .circle/yc LDZ2 .circle/y LDZ2 SUB2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.circle/xc LDZ2 .circle/y LDZ2 ADD2 .Screen/x DEO2 .circle/yc LDZ2 .circle/x LDZ2 ADD2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.circle/xc LDZ2 .circle/y LDZ2 SUB2 .Screen/x DEO2 .circle/yc LDZ2 .circle/x LDZ2 ADD2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.circle/xc LDZ2 .circle/y LDZ2 ADD2 .Screen/x DEO2 .circle/yc LDZ2 .circle/x LDZ2 SUB2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO
		.circle/xc LDZ2 .circle/y LDZ2 SUB2 .Screen/x DEO2 .circle/yc LDZ2 .circle/x LDZ2 SUB2 .Screen/y DEO2 .color LDZ .Screen/pixel DEO

JMP2r

@cover-pattern ( addr* color -- )
	
	( load ) STH .Screen/addr DEO2
	.Screen/height DEI2 #0000
	&ver
		( save ) DUP2 .Screen/y DEO2
		.Screen/width DEI2 #0000
		&hor
			( save ) DUP2 .Screen/x DEO2
			( draw ) STHkr .Screen/sprite DEO
			#0008 ADD2 GTH2k ,&hor JCN
		POP2 POP2
		#0008 ADD2 GTH2k ,&ver JCN
	POP2 POP2
	POPr

JMP2r

@line-hor ( x0* x1* y* color -- )
	
	STH .Screen/y DEO2
	SWP2
	&loop
		( save ) DUP2 .Screen/x DEO2
		( draw ) STHkr .Screen/pixel DEO
		INC2 GTH2k ,&loop JCN
	POP2 POP2 POPr

JMP2r

@line-ver ( x* y0* y1* color -- )
	
	STH ROT2 .Screen/x DEO2
	SWP2
	&loop
		( save ) DUP2 .Screen/y DEO2
		( draw ) STHkr .Screen/pixel DEO
		INC2 GTH2k ,&loop JCN
	POP2 POP2 POPr

JMP2r

@checker-icn
	f0f0 f0f0 0f0f 0f0f
(
	wireworld

	A - conductor
	B - tail
	Sel - head
	Start - clear
	mouse1 - paint
	mouse2 - erase

	RULES:
	- electron head<3>, becomes electron tail<2>
	- electron tail<2>, becomes conductor<1>
	- conductor<1>, becomes electron head<3>
		if there are exactly 1 or 2 electron heads around it. )

( devices )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button $1 &key $1 &func $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &pad $3 &modx $2 &mody $2

|0000

@color $1
@pointer &x $2 &y $2
@timer &frame $1 &play $1

( program )

|0100 ( -> )

	( theme )
	#07fe .System/r DEO2
	#07b6 .System/g DEO2
	#0fc6 .System/b DEO2
	( size )
	#0100 .Screen/width DEO2
	#0100 .Screen/height DEO2
	( vectors )
	;on-frame .Screen/vector DEO2
	;on-mouse .Mouse/vector DEO2
	;on-button .Controller/vector DEO2
	( setup )
	#01 .timer/play STZ
	#01 .color STZ
	( start )
	;world ;get-addr/current STA2
	#1000 ;run/future STA2
	;redraw JSR2

BRK

@on-frame ( -> )

	.timer/play LDZ JMP BRK
	( every 4th )
	.timer/frame LDZk
		#03 AND ,&no-run JCN
			;run JSR2
			&no-run
		LDZk INC SWP STZ

BRK

@on-mouse ( -> )

	;pointer-icn .Screen/addr DEO2
	( clear last cursor )
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO
	( draw new cursor )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	#40 .color LDZ ADD .Screen/sprite DEO
	( paint )
	.Mouse/state DEI ,on-mouse-down JCN

BRK

@on-mouse-down ( -> )

	.Mouse/x DEI2 #03 SFT2 NIP
	.Mouse/y DEI2 #03 SFT2 NIP
	#0202 NEQ2k NIP2 ,&no-color1 JCN
		#01 .color STZ
		#00 .Mouse/state DEO
		POP2 BRK
		&no-color1
	#0302 NEQ2k NIP2 ,&no-color2 JCN
		#02 .color STZ
		#00 .Mouse/state DEO
		POP2 BRK
		&no-color2
	#0402 NEQ2k NIP2 ,&no-color3 JCN
		#03 .color STZ
		#00 .Mouse/state DEO
		POP2 BRK
		&no-color3
	#0602 NEQ2k NIP2 ,&no-toggle JCN
		.timer/play LDZk #00 EQU SWP STZ
		#00 .Mouse/state DEO
		;draw-ui JSR2
		POP2 BRK
		&no-toggle
	POP2

	( color ) .color LDZ .Mouse/state DEI #01 GTH #00 EQU MUL
	( cell* ) .Mouse/x DEI2 #02 SFT2 NIP .Mouse/y DEI2 #02 SFT2 NIP
		;get-addr JSR2 STA
	;redraw JSR2

BRK

@print ( short* -- )

	SWP ,&byte JSR
	&byte ( byte -- ) DUP #04 SFT ,&char JSR
	&char ( char -- ) #0f AND DUP #09 GTH #27 MUL ADD #30 ADD #18 DEO

JMP2r

@on-button ( -> )

	.Controller/button DEI
	[ #01 ] NEQk NIP ,&no-a JCN #01 .color STZ &no-a
	[ #02 ] NEQk NIP ,&no-b JCN #02 .color STZ &no-b
	[ #04 ] NEQk NIP ,&no-select JCN #03 .color STZ &no-select
	[ #08 ] NEQk NIP ,&no-start JCN ;world #2000 ;mclr JSR2 ;redraw JSR2 &no-start
	POP
	( space )
	.Controller/key DEI #20 NEQ ,&no-space JCN .timer/play LDZk #00 EQU SWP STZ &no-space

BRK

@draw-ui ( -- )

	( colors )
	#01 .Screen/auto DEO
	#0010 DUP2 .Screen/x DEO2 .Screen/y DEO2
	;color-icn .Screen/addr DEO2
	#01 .Screen/sprite DEO
	#02 .Screen/sprite DEO
	#03 .Screen/sprite DEO
	( toggle )
	#0030 .Screen/x DEO2
	;toggle-icn #00 .timer/play LDZ #30 SFT2 ADD2 .Screen/addr DEO2
	#01 .Screen/sprite DEO

JMP2r

@redraw ( -- )

	;cell-icn .Screen/addr DEO2
	#4000
	&ver
		#00 OVR #20 SFT2 .Screen/y DEO2
		STHk
		#4000
		&hor
			#00 OVR #20 SFT2 .Screen/x DEO2
			DUP STHkr ,get-addr JSR LDA .Screen/sprite DEO
			INC GTHk ,&hor JCN
		POP2
		POPr
		INC GTHk ,&ver JCN
	POP2
	;draw-ui JSR2

JMP2r

@run ( -- )

	#40 #00
	&ver
		STHk
		#40 #00
		&hor
			( x,y ) DUP STHkr
			( cell ) DUP2 ,get-addr JSR STH2k LDA
			( transform ) ,transform JSR STH2r [ LIT2 &future $2 ] ADD2 STA
			INC GTHk ,&hor JCN
		POP2
		POPr
		INC GTHk ,&ver JCN
	POP2
	( Swap worlds )
	;get-addr/current LDA2k ;run/future LDA2 STH2k ADD2 SWP2 STA2
	#0000 STH2r SUB2 ;run/future STA2
	,redraw JSR

JMP2r

@get-addr ( x y -- addr* )

	#00 SWP #60 SFT2 ROT #00 SWP ADD2 [ LIT2 &current $2 ] ADD2

JMP2r

@transform ( xy cell -- cell )

	DUP ,&no-null JCN NIP NIP JMP2r &no-null
	DUP #03 NEQ ,&no-head JCN POP POP2 #02 JMP2r &no-head
	DUP #02 NEQ ,&no-tail JCN POP POP2 #01 JMP2r &no-tail
	DUP #01 NEQ ,&no-cond JCN POP
		LITr 00
		DUP2 #01 SUB ,get-addr JSR
			( tl ) #0001 SUB2 LDAk #03 NEQ JMP INCr
			( tc ) INC2 LDAk #03 NEQ JMP INCr
			( tr ) INC2 LDA #03 NEQ JMP INCr
		DUP2 ,get-addr JSR
			( ml ) #0001 SUB2 LDAk #03 NEQ JMP INCr
			( mr ) INC2 INC2 LDA #03 NEQ JMP INCr
		INC ,get-addr JSR
			( bl ) #0001 SUB2 LDAk #03 NEQ JMP INCr
			( bc ) INC2 LDAk #03 NEQ JMP INCr
			( br ) INC2 LDA #03 NEQ JMP INCr
		STHkr #02 EQU STHr #01 EQU ORA
		DUP ADD INC JMP2r
		&no-cond
	( unknown )
	NIP NIP

JMP2r

@mclr ( addr* len* -- )

	OVR2 ADD2 SWP2
	&loop
		STH2k #00 STH2r STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2

JMP2r

@pointer-icn
	80c0 e0f0 f8e0 1000
@cell-icn
	e0e0 e000 0000 0000
@color-icn
	7cfe fefe fefe 7c00
@toggle-icn
	( pause ) 6666 6666 6666 6600
	( play ) 4666 767e 7666 4600


(
	I live in the atom with the happy protons and neutrons.
	I'm also so negative all the freakin time.
	What do I do?
	How do I find peace? )

@world
( Screen:
	Draws a table of all possible sprite arrangements. )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1

|0000

@count $2
@center &x $2 &y $2

|0100 ( -> )
	
	( vector )
	;on-frame .Screen/vector DEO2
	( theme )
	#f07f .System/r DEO2
	#f0e0 .System/g DEO2
	#f0c0 .System/b DEO2
	( gba screen size 00f0 x 00a0 )
	( nds screen size 0100 x 00c0 )
	#00f0 .Screen/width DEO2
	#00a0 .Screen/height DEO2
	( find screen center )
	.Screen/width DEI2 #01 SFT2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 .center/y STZ2
	( draw )
	;draw-sprites JSR2
	;draw-1bpp JSR2
	;draw-2bpp JSR2
	#00 .Screen/auto DEO
	
BRK

@on-frame ( -> )

	#01 .Screen/auto DEO
	.count LDZ2 INC2 [ DUP2 ] .count STZ2
	.center/x LDZ2 #0050 ADD2 .Screen/x DEO2
	.center/y LDZ2 #0048 SUB2 .Screen/y DEO2
	;draw-short JSR2

BRK

@draw-sprites ( -- )
	
	( horizontal )
	.center/x LDZ2 #0060 SUB2 .Screen/x DEO2
	.center/y LDZ2 #0048 SUB2 .Screen/y DEO2
	;font-hex .Screen/addr DEO2
	#f6 .Screen/auto DEO
	#01 .Screen/sprite DEO
	( vertical )
	.center/x LDZ2 #0070 SUB2 .Screen/x DEO2
	.center/y LDZ2 #0038 SUB2 .Screen/y DEO2
	;font-hex .Screen/addr DEO2
	#f5 .Screen/auto DEO
	#01 .Screen/sprite DEO

	#00 .Screen/auto DEO
	( table )
	;preview_icn .Screen/addr DEO2
	#00 #00
	&loop
		( move ) DUP #0f AND #40 SFT #01 SFT #00 SWP
			.center/x LDZ2 #0060 SUB2 ADD2 .Screen/x DEO2
		( move ) DUP #f0 AND #01 SFT #00 SWP
			.center/y LDZ2 #0038 SUB2 ADD2 .Screen/y DEO2
		( draw ) DUP .Screen/sprite DEO
		INC NEQk ,&loop JCN
	POP2
	
JMP2r

@draw-1bpp ( -- )

	#10 #00
	&loop
		( color ) STHk
		( y ) DUP #02 SFT [ #00 SWP ] #40 SFT2
			[ .center/y LDZ2 #0038 SUB2 ADD2 ] STH2
		( x ) DUP #03 AND [ #00 SWP ] #40 SFT2 #0040 ADD2
			[ .center/x LDZ2 #0010 SUB2 ADD2 ]
		STH2r STHr #00 ,draw-circle JSR
		INC GTHk ,&loop JCN
	POP2
	
JMP2r

@draw-2bpp ( -- )

	#10 #00
	&loop
		( color ) STHk
		( y ) DUP #02 SFT [ #00 SWP ] #40 SFT2
			[ .center/y LDZ2 #0008 ADD2 ADD2 ] STH2
		( x ) DUP #03 AND [ #00 SWP ] #40 SFT2 #0040 ADD2
			[ .center/x LDZ2 #0010 SUB2 ADD2 ]
		STH2r STHr #80 ,draw-circle JSR
		INC GTHk ,&loop JCN
	POP2
	
JMP2r

@draw-circle ( x* y* color depth -- )
	
	ADD STH
	;preview_icn .Screen/addr DEO2
	.Screen/y DEO2
	.Screen/x DEO2
	#01 .Screen/auto DEO
	STHr .Screen/sprite DEOk
	#02 .Screen/auto DEO
	SWP #10 ADD SWP DEOk
	.Screen/x DEI2k #0008 SUB2 ROT DEO2
	#01 .Screen/auto DEO
	SWP #10 ADD SWP DEOk
	SWP #10 ADD SWP DEO

JMP2r

@draw-short ( short* -- )

	SWP ,draw-byte JSR

@draw-byte ( byte -- )

	DUP #04 SFT ,draw-hex JSR #0f AND

@draw-hex ( char -- )

	#00 SWP #30 SFT2 ;font-hex ADD2 .Screen/addr DEO2
	#01 .Screen/sprite DEO

JMP2r

@preview_icn
	0f38 675f dfbf bfbf 0007 1820 2344 4848

@font-hex
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 007c 8202 1e02 0202
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc
	007c 8280 8080 827c 00fc 8282 8282 82fc
	007c 8280 f080 827c 007c 8280 f080 8080
( Bifurcan )

|00 @System     [ &vector $2 &pad      $6 &r      $2 &g     $2 &b      $2 ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &pad   $2 &x      $2 &y      $2 &addr $2 &pixel $1 &sprite $1 ]
|90 @Mouse      [ &vector $2 &x        $2 &y      $2 &state $1 &wheel  $1 ]
|c0 @DateTime   [ &year   $2 &month    $1 &day    $1 &hour  $1 &minute $1 &second $1 &dotw $1 &doty $2 &isdst $1 ]
|80 @Controller [ &vector $2 &button   $1 &key    $1 ] 

|0000

@last  $1
@style $1
@pointer [ &x $2 &y $2 ]
@center  [ &x $2 &y $2 ]

|0100 ( -> )

	( theme ) 
	#0f3a .System/r DEO2 
	#0fda .System/g DEO2 
	#0faa .System/b DEO2
	( vectors )
	;on-frame .Screen/vector DEO2
	;on-mouse .Mouse/vector DEO2
	;on-button .Controller/vector DEO2
	( find center )
	.Screen/width DEI2 #01 SFT2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 .center/y STZ2
	( background ) 
	;tiles ;cover-pattern JSR2
	;redraw JSR2

BRK

@on-frame ( -> )

	( only draw once per second )
	.DateTime/second DEI .last LDZ NEQ JMP [ BRK ]
	.DateTime/second DEI .last STZ
	;redraw JSR2

BRK

@on-mouse ( -> )

	;draw-cursor JSR2

	.Mouse/state DEI #00 NEQ JMP BRK
	,select JSR

BRK 

@on-button ( -> )
	
	.Controller/button DEI #00 NEQ JMP BRK
	,select JSR

BRK

@select ( -- )

	( incr ) .style LDZ INC #03 ;mod JSR2 .style STZ
	( bg ) ;tiles [ #00 .style LDZ #40 SFT ] ADD2 ;cover-pattern JSR2
	( fg ) ;redraw JSR2
	( release ) #0000 .Mouse/state DEO .Controller/button DEO

JMP2r

@redraw ( -- )
	
	( hrs )
	[ .center/x LDZ2 #0018 SUB2 ] 
	[ .center/y LDZ2 #0048 SUB2 ] 
	.DateTime/hour DEI #0a DIV ;draw-number JSR2
	[ .center/x LDZ2 #0008 ADD2 ] 
	[ .center/y LDZ2 #0048 SUB2 ] 
	.DateTime/hour DEI #0a ;mod JSR2 ;draw-number JSR2
	( min )
	[ .center/x LDZ2 #0018 SUB2 ] 
	[ .center/y LDZ2 #0018 SUB2 ] 
	.DateTime/minute DEI #0a DIV ;draw-number JSR2
	[ .center/x LDZ2 #0008 ADD2 ] 
	[ .center/y LDZ2 #0018 SUB2 ] 
	.DateTime/minute DEI #0a ;mod JSR2 ;draw-number JSR2
	( sec )
	[ .center/x LDZ2 #0018 SUB2 ] 
	[ .center/y LDZ2 #0018 ADD2 ]
	.DateTime/second DEI #0a DIV 
	;draw-number JSR2
	[ .center/x LDZ2 #0008 ADD2 ] 
	[ .center/y LDZ2 #0018 ADD2 ] 
	.DateTime/second DEI #0a ;mod JSR2 
	;draw-number JSR2

JMP2r

@draw-number ( x* y* n -- )
	
	,&digit STR ,&y STR2 ,&x STR2
	#0f00 
	&loop
		( save-x ) DUP #03 ;mod JSR2 #00 SWP #30 SFT2 [ LIT2 &x $2 ] ADD2 .Screen/x DEO2
		( save-y ) DUP #03 DIV #00 SWP #30 SFT2 [ LIT2 &y $2 ] ADD2 .Screen/y DEO2
		( get digit* ) DUP [ LIT &digit $1 ] DUP ADD #00 SWP ;digits ADD2 LDA2 
		( get bit ) ROT #0e SWP SUB SFT2 #0001 AND2 
		( set tile ) #30 SFT2 ;tiles ADD2 
		( set style ) .style LDZ #40 SFT #00 SWP ADD2
			.Screen/addr DEO2
		( draw ) #01 .Screen/sprite DEO
		INC GTHk ,&loop JCN
	POP2

JMP2r

@cover-pattern ( addr* -- )
	
	.Screen/addr DEO2
	.Screen/height DEI2 #03 SFT2 NIP ,&h STR
	.Screen/width DEI2 #03 SFT2 NIP ,&w STR
	[ LIT &h $1 ] #00
	&ver
		#00 OVR #30 SFT2 .Screen/y DEO2
		[ LIT &w $1 ] #00
		&hor
			#00 OVR #30 SFT2 .Screen/x DEO2
			#01 .Screen/sprite DEO
			INC GTHk ,&hor JCN
		POP2
		INC GTHk ,&ver JCN
	POP2

JMP2r

@draw-cursor ( -- )
	
	( clear last cursor )
	;cursor .Screen/addr DEO2 
	.pointer/x LDZ2 .Screen/x DEO2 
	.pointer/y LDZ2 .Screen/y DEO2 
	#40 .Screen/sprite DEO
	( record pointer positions )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2 
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2 
	( colorize on state )
	#41 [ .Mouse/state DEI #00 NEQ ] ADD .Screen/sprite DEO

JMP2r

@mod DIVk MUL SUB JMP2r

@cursor 
	80c0 e0f0 f8e0 1000

@digits
	7b6f 2492 73e7 73cf 
	5bc9 79cf 49ef 7249 
	7bef 7bc9

@tiles
	0102 0408 1020 4080
	8040 2010 0804 0201 
	0718 2040 4080 8080
	0101 0102 0204 18e0
	0808 0810 e304 0808
	0808 0804 e310 0808
( Boing )

|00 @System &vector $2 &wst $1 &rst $1 &eaddr $2 &ecode $1 &pad $1 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1

|0000

	@ball &x $2 &y $2 &vx $2 &vy $2
	@timer $1
	@frame $1

|0100

	( vectors )
	;on-frame .Screen/vector DEO2
	( theme )
	#aff0 .System/r DEO2
	#af00 .System/g DEO2
	#af00 .System/b DEO2
	( screen size )
	#0140 .Screen/width DEO2
	#0100 .Screen/height DEO2
	( inital position )
	#0020 .ball/x STZ2
	#0020 .ball/y STZ2
	( initial velocity )
	#0008 .ball/vx STZ2
	#0000 .ball/vy STZ2
	( once )
	;make-shadow JSR2
	;draw-background JSR2

BRK

@on-frame ( -> )

	( every 4th frame )
	.timer LDZ INC .timer STZk POP #03 EQU JMP [ BRK ]
	( reset timer )
	#00 .timer STZ
	( 12 frames animation )
	.frame LDZ INC DUP #0c NEQ MUL .frame STZ
	,move-ball JSR

BRK

@clear-ball ( -- )

	.ball/x LDZ2 .Screen/x DEO2
	.ball/y LDZ2 .Screen/y DEO2
	#76 .Screen/auto DEO
	#0800
	&loop-bg
		#40 .Screen/sprite DEO
		INC GTHk ,&loop-bg JCN
	POP2

JMP2r

@move-ball ( -- )

	,clear-ball JSR
	.ball/vx LDZ2k STH2k ROT STZ2
	.ball/x LDZ2k STH2r ADD2 ,check-flip-vx JSR ROT STZ2
	.ball/vy LDZ2k INC2 STH2k ROT STZ2
	.ball/y LDZ2k STH2r ADD2 ,check-flip-vy JSR ROT STZ2
	,draw-ball JSR

JMP2r

@check-flip-vx ( x -- x )

	( left ) DUP2 #0010 LTH2 ,&flip JCN 
	( right ) DUP2 .Screen/width DEI2 #0050 SUB2 GTH2 ,&flip JCN ,&else JMP
	&flip .ball/vx LDZ2k #ffff EOR2 ( INC2 ) ROT STZ2
	&else

JMP2r

@check-flip-vy ( y -- y )

	( bottom ) DUP2 .Screen/height DEI2 #0050 SUB2 GTH2 ,&flip JCN ,&else JMP
	&flip .ball/vy LDZ2k #ffff EOR2 ( INC2 ) ROT STZ2
	&else

JMP2r

@draw-ball ( -- )

	( shadow )
	.ball/x LDZ2 #0008 ADD2 .Screen/x DEO2
	.ball/y LDZ2 #0008 ADD2 .Screen/y DEO2
	;shadow .Screen/addr DEO2
	#66 .Screen/auto DEO
	#0700
	&loop-shadow
		#4f .Screen/sprite DEO
		INC GTHk ,&loop-shadow JCN
	POP2
	.frame LDZ
	( bg )
	DUP #06 DIV INC #05 MUL #40 ADD STH
	.ball/x LDZ2 .Screen/x DEO2
	.ball/y LDZ2 .Screen/y DEO2
	;bg .Screen/addr DEO2
	#66 .Screen/auto DEO
	#0700
	&loop-bg
		STHkr .Screen/sprite DEO
		INC GTHk ,&loop-bg JCN
	POP2
	POPr
	( fg )
	DUP #06 DIV #00 EQU INC #05 MUL #40 ADD STH
	.ball/x LDZ2 .Screen/x DEO2
	.ball/y LDZ2 .Screen/y DEO2
	#06 DIVk MUL SUB #00 SWP #0188 MUL2 ;ball-icn ADD2 .Screen/addr DEO2
	#66 .Screen/auto DEO
	#0700
	&loop-fg
		STHkr .Screen/sprite DEO
		INC GTHk ,&loop-fg JCN
	POP2
	POPr

JMP2r

@draw-background ( -- )

	( hor lines )
	#01 .Screen/auto DEO
	;hor-icn .Screen/addr DEO2
	.Screen/height DEI2 #04 SFT2 NIP #04 SUB #00
	&horver
		#0020 .Screen/x DEO2
		#00 OVR #40 SFT2 #0020 ADD2 .Screen/y DEO2
		.Screen/width DEI2 #03 SFT2 NIP #08 SUB #00
		&horhor
			#0f .Screen/sprite DEO
			INC GTHk ,&horhor JCN
		POP2
		INC GTHk ,&horver JCN
	POP2
	( ver lines )
	#02 .Screen/auto DEO
	;ver-icn .Screen/addr DEO2
	.Screen/width DEI2 #04 SFT2 NIP #03 SUB #00
	&verver
		#0027 .Screen/y DEO2
		#00 OVR #40 SFT2 #0019 ADD2 .Screen/x DEO2
		.Screen/height DEI2 #03 SFT2 NIP #0a SUB #00
		&verhor
			#0f .Screen/sprite DEO
			INC GTHk ,&verhor JCN
		POP2
		INC GTHk ,&verver JCN
	POP2

JMP2r

@make-shadow ( -- )

	;bg ;shadow #0188 ;mcpy JSR2
	#0188 #0000
	&loop
		DUP2 ;shadow ADD2 LDA2k #aa55 AND2 SWP2 STA2
		INC2 INC2 GTH2k ,&loop JCN
	POP2 POP2

JMP2r

@mcpy ( src* dst* len* -- )

	SWP2 STH2
	OVR2 ADD2 SWP2
	&loop
		LDAk STH2kr STA INC2r
		INC2 GTH2k ,&loop JCN
	POP2 POP2
	POP2r

JMP2r

@hor-icn
	0000 0000 0000 00ff
@ver-icn
	0101 0101 0101 0101

@ball-icn ( 56 x 56 )
	( 00 )
	0000 0000 0000 0000 0000 0000 0304 0830 0000 073f 180c 1f3f 00f4 c103 070f bf8f
	0040 0cfc e2c1 c1c1 0000 0000 80a0 e0e4 0000 0000 0000 0000 0000 0000 0101 0303
	60c0 01e3 fbf0 f0e0 7fff fefe fc78 000f 8100 0000 0001 0103 8040 f8ff ffff ffff
	f2f1 f9f8 1c00 0303 0000 8080 4020 b0e0 0707 0f1f 2720 2060 e0c0 c080 8000 e0fc
	0f1f 1f3f 3f3f 7f7f e3ff f8f8 f8f0 f0f0 fefe 7e0e 0001 0103 0101 0101 01c1 f9fe
	e0e0 e0f0 f0f0 f0f8 6060 4041 4141 0139 ffff ffff fefe fefe 7f0f 0100 0000 0000
	e0e0 e000 3c3f 7f7f 0303 0707 0787 fff1 fefe fefc fcfc fcfc 1804 0606 0e0e 0e0e
	3e1e 1e1e 1e0e 0f0f fe1c 0003 0303 0303 0000 0080 f1ff fefe 7fff ffff ffff 3f07
	f0e0 e0e0 c0c0 8080 3800 070f 0f1f 1f3f 0e0c 0cfc e0c0 c080 0f09 0400 0001 0000
	0303 c37b 3c3c 9e1e fcfc fcfc f818 040f 0000 0101 0303 078f 80e0 feff fffe fcf8
	3f7f 7f3e 0603 070e 8000 0000 0000 0000	0000 0000 0000 0000 0e1e 0500 0000 0000
	0f0f 0f4f 2703 0200 ffe1 c080 030f 1e00	f0e0 00f9 f8c0 0000 3c70 e0c0 0000 0000
	0000 0000 0000 0000
	( 01 )
	0000 0000 0000 0000 0000 0000 0204 0800 0001 0f7c 101c 3fff 00e7 8307 0f3f ff0f
	0040 0cdc c083 8101 0000 0000 80a0 c0e4 0000 0000 0000 0000 0000 0003 0103 0307
	4183 07ef f3e0 e0c0 fefe fcf8 f070 181f 0101 0103 0303 0707 01c1 f9fe fefc fcfc
	e2f3 f1f8 1804 0707 0000 0080 4060 b0c0 070f 3f1f 2721 0101 c080 8000 0000 e1fd
	3f3f 7f7f ffff ffff eff3 f0e0 e0c0 c0c0 fcfc 7c0c 0607 0707 0303 0303 03c3 fbfc
	c0e0 e0e4 e0e0 f0f0 4141 4343 4343 433b fefe fcfc fcfc f8f8 7f0f 0100 0000 0001
	8080 80c0 fcff ffff 0f0f 0f1f 1f9f efc1 fcf8 f8f8 f8f8 f0f0 100c 0e0e 0e1e 1e1e
	3c3c 3c1c 3c1e 0e0e f818 0407 0707 0707 0101 0383 f3f9 f8f8 ffff ffff ffff 3f06
	c0c0 8080 0000 0000 3008 1f1f 3f3f 7f7f 1c1c 1cfc c0c4 8000 0e08 0400 0000 0000
	0707 c7ff 7838 bc1c f8f8 f0f0 f010 1c1f 0103 0307 070f 0f9f 00e0 fefe fcf8 f0e0
	7ffe fe3c 0407 0f1e 0000 0000 4000 0000 0000 0000 0000 0000 0c1e 0400 0000 0000
	1f1f 1fdf 2607 0200 cfc1 8001 071f 1c00 e0c0 41fb f080 0000 38f0 e0c0 0000 0000
	0000 0000 0000 0000
	( 02 )
	0000 0000 0000 0000 0000 0000 0000 0001 0001 1ff8 003c fefe 00e7 030f 3f7f 7f0e
	0000 1cd8 8003 0303 0000 0000 80c0 c0c4 0000 0000 0000 0000 0000 0103 0307 070f
	0307 0fff e3c0 c080 fcf8 f0f0 e040 787f 0203 0707 0f0f 1f1f 03c3 fbf8 f8f8 f8f8
	e6e3 e1f1 100c 0f0f 0000 0080 c060 e0c0 0f1f 3f3e 0403 0303 8000 0001 0103 e3fb
	7fff ffff ffff ffff ffc3 c080 8080 0000 f8f0 7000 0e1f 1f1f 0f0f 0707 07c7 fff0
	c8c0 c0c4 e0e0 e0e2 0303 0707 0707 477f f8f8 f8f8 f0f0 f0f0 7f0e 0001 0303 0307
	0000 00c0 fcff ffff 1f3f 3f3f 7fff 8f01 f0f0 f0f0 e0e0 e0e0 001c 1e1e 1e1c 3c3c
	7838 3838 3c1c 1c1c f000 1c1f 1f1f 0f0f 0707 078f fff1 f0e0 ffff fefe fefc 3c00
	0000 0000 0000 0001 2038 3f7f 7fff fffe 3c3c 3cdc 8004 0800 0c00 0100 0000 0000
	0f0f cff7 7078 3818 e0e0 e0e0 e020 3c3f 0707 0f0f 1f1f 3fbf 01e1 fdf8 f0f0 e0c0
	fefc fc38 000f 1e3c 1000 2000 4000 0000 0000 0000 0000 0000 1c1c 0400 0000 0000
	3f3f 3ffe 6407 0300 8f01 0103 0f3f 1800 8080 c3ff e008 0000 78f0 c080 0000 0000
	0000 0000 0000 0000
	( 03 )
	0000 0000 0000 0000 0000 0000 0000 0003 0001 1ef0 207d fcf8 00c7 071f 7ffe 7c0c
	0080 1c9a 0407 0707 0000 0000 80c0 80cc 0000 0000 0000 0000 0000 0103 0307 070f
	070f 1fdf c380 8001 f8f0 e0c0 8080 f8ff 060f 0f1f 1f3f 3f7f 07c7 f7f0 f0f0 e0e0
	c6c2 e3e1 001c 1f1f 0000 0080 c0c0 e080 0f1e 3c3c 0007 0707 0101 0303 0707 eff3
	ffff ffff fefe fcfc 9f03 0000 0000 0000 e0e0 6030 3e3f 7f7f 1f1f 1f1f 1fdf e7e0
	8888 80c4 c4c0 c0c2 0707 070f 0f0f 4f77 f0f0 e0e0 e0e0 e0c0 7c08 0607 070f 0f0f
	0000 00c0 fcfe fefe 7fff ffff ff7f 0f01 e0e0 c0c0 c0c0 8080 223c 3c3c 3c3c 7c7c
	7030 3838 3818 181c c020 3c3f 3f3f 3f3f 1f1f 1f9f cfc1 c0c0 fcfc fcf8 f8f0 3008
	0000 0000 0101 0303 4078 ffff fffe fefc 7c7c 7818 0404 0810 0c02 0101 0000 0000
	1f1f dfe7 e070 3038 c0c0 c080 8060 7c7f 1f1f 3f3f 3f7f 7f7f 07e7 f1f0 e0c0 8080
	fcf8 f830 081f 3e7c 1020 2040 4080 0000 0000 0000 0000 0000 181c 0200 0000 0000
	7f7e 3efc 440f 0100 0f00 030f 1f3e 1800 0003 c7f7 c108 0000 f8e0 c080 0000 0000
	0000 0000 0000 0000
	( 04 )
	0000 0000 0000 0000 0000 0000 0000 0103 0001 1ce0 60ff f8f0 0087 0f3f fefc 7800
	0080 3c1a 0d0f 0f0f 0000 0000 8040 808c 0000 0000 0000 0000 0000 0103 0307 070e
	0f1f 3f9f 8301 0103 e0c0 8000 0080 f8fe 0e1f 3f3f 7f7f ffff 0fdf e7e0 c0c0 c0c0
	8686 c3c3 213c 3f3f 0000 0080 c0c0 6000 0e1c 3c38 000f 0f0f 0307 070f 0f1f ffe3
	fefe fcfc f8f8 f8f0 1f03 0000 0000 0001 8080 0070 feff ffff 3f3f 3f3f 3fff c780
	0808 8884 8484 8482 0f0f 0f0f 1f1f 5f67 c0c0 c0c0 c080 8080 7000 1e1f 1f1f 3f3f
	0101 03c3 fff8 f8f8 ffff ffff ff7f 0f01 8080 8080 0000 0000 627e 7c7c 7cfc f8f8
	6030 3030 3018 1818 8060 7c7f 7f7f 7f7f 3f7f 7fff 8f81 8080 f0f0 f0e0 e0e0 0038
	0101 0303 0307 070f c0f8 fffe fefc fcf8 f8f8 f818 040c 1810 0802 0301 0000 0000
	3f3f ffc7 e060 7030 0000 0000 00e0 fdfe 3f7f 7fff ffff ff7e 0fff e1c0 8080 0001
	f8f0 f020 387f fcf8 3020 6040 c080 0000 0000 0000 0000 0000 1818 0200 0000 0000
	7c7c 7cb8 400f 0100 0e02 0f1f 3f7c d000 0307 cfe7 0318 8000 f0e0 c000 0000 0000
	0000 0000 0000 0000
	( 05 )
	0000 0000 0000 0000 0000 0000 0001 0307 0001 18c0 e1fb f0e0 0087 1f7e fcf8 7010
	0080 7012 0d1f 1f1f 0000 0000 0040 100c 0000 0000 0000 0000 0000 0103 0306 060c
	0f3f 7f9e 0003 0707 c080 0000 0081 fbfc 3e7f 7fff ffff ffff 3fff c780 8080 0000
	0c86 8783 637d 7e7e 0000 0080 80c0 6010 0c18 3830 080f 0f1f 0f0f 1f1f 3f3f 9f83
	f8f8 f8f0 f0e0 e0e0 1f02 0101 0303 0307 0000 80f0 feff ffff 7e7f 7f7f 7f3f 0700
	1808 080c 0c04 0406 1f1f 1f1f 1f1f 7f67 8080 8080 0000 0000 4030 3e7f 7f7f 7fff
	0707 0fcf f3f0 e0e0 fffe fefe fe7c 0c02 0000 0000 0101 0101 e6fe f8f8 f8f8 f8f8
	6020 2030 3010 1018 00e0 fcfe fefe fe7e ffff ff7f 0f01 0000 e0c0 c0c0 8080 40f8
	0707 070f 0f1f 1f1f c1f9 fcfc f8f8 f0f0 f8f0 f010 0c1c 1830 0806 0301 0100 0000
	7e7e bec6 c1e1 6130 0000 0101 01e3 fffc ffff ffff fffe fe7c 3fdf 8100 0000 0103
	e0e0 c000 79fe fcf0 3060 60c0 c080 0000 0000 0000 0000 0000 3008 0200 0000 0000
	f8f8 f8b0 480e 0100 080e 1f3f 7ef8 e100 070f df87 0318 8000 e0c0 8000 0000 0000
	0000 0000 0000 0000

@bg
	0000 0000 0000 0000 0000 0000 0307 0f3f
	0001 1fff ffff ffff 00ff ffff ffff ffff
	00c0 fcfe ffff ffff 0000 0000 80e0 f8fc
	0000 0000 0000 0000 0000 0103 0307 070f
	7fff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	feff ffff ffff ffff 0000 8080 c0e0 f0f0
	0f1f 3f3f 3f3f 7f7f ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	f8f8 f8fc fcfc fcfe 7f7f 7f7f 7f7f 7f7f
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff fefe fefe fefe fefe
	7f3f 3f3f 3f1f 1f1f ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	fefe fcfc fcfc f8f0 0f0f 0703 0101 0000
	ffff ffff ffff ff7f ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff fffe f0e0 e0c0 c080 0000
	0000 0000 0000 0000 3f1f 0701 0000 0000
	ffff ffff 7f3f 0300 ffff ffff ffff ff00
	ffff ffff fff8 8000 fcf0 e0c0 0000 0000
	0000 0000 0000 0000

@shadow $0188
( GUI Monospace )

|00 @System     &vector $2 &wst      $1 &rst    $1 &eaddr  $2 &ecode  $1 &pad     $1 &r       $2 &g      $2 &b     $2 &debug  $1 &halt $1
|20 @Screen     &vector $2 &width    $2 &height $2 &auto   $1 &pad    $1 &x       $2 &y       $2 &addr   $2 &pixel $1 &sprite $1

( variables )

|0000

( program )

|0100
	
	( theme ) 
	#f05d .System/r DEO2 
	#f0cd .System/g DEO2 
	#f0ad .System/b DEO2

	( draw hello world )
	#0010 .Screen/x DEO2
	#0010 .Screen/y DEO2
	;hello-txt #01 ;draw-uf1 JSR2

	( draw long text )
	#0010 .Screen/x DEO2
	#0030 .Screen/y DEO2
	;long-txt #02 ;draw-uf1-linebreaks JSR2

BRK

@draw-uf1 ( string* color -- )

	#01 .Screen/auto DEO
	STH
	&while
		( get sprite ) LDAk #20 SUB #00 SWP #30 SFT2 ;font ADD2 .Screen/addr DEO2
		( draw ) STHkr .Screen/sprite DEO
		INC2 LDAk ,&while JCN
	POPr
	POP2

JMP2r

@draw-uf1-linebreaks ( string* color -- )

	.Screen/x DEI2 ,&anchor STR2
	#01 .Screen/auto DEO
	STH
	&while
		LDAk #0a NEQ ,&no-lb JCN
			( rewind ) LIT2 &anchor $2 .Screen/x DEO2
			( skip line ) .Screen/y DEI2k #0008 ADD2 ROT DEO2
			,&end JMP
			&no-lb
		( get sprite ) LDAk #20 SUB #00 SWP #30 SFT2 ;font ADD2 .Screen/addr DEO2
		( draw ) STHkr .Screen/sprite DEO
		&end
		INC2 LDAk ,&while JCN
	POPr
	POP2

JMP2r

@hello-txt "Hello 20 "Uxn! $1

@long-txt
	5275 7374 6963 2043 6f6d 7075 7469 6e67
	2072 6566 6572 7320 746f 2074 6865 2063
	6f6e 7374 7275 6374 696f 6e20 0a6f 6620
	6361 6c63 756c 6174 696f 6e20 6d61 6368
	696e 6573 2075 7369 6e67 2070 7265 2d69
	6e64 7573 7472 6961 6c20 0a6f 7220 6576
	656e 2070 7265 2d68 6973 746f 7269 6320
	7465 6368 6e6f 6c6f 6779 2e20 0a0a 4974
	2072 6576 6561 6c73 2061 2068 6973 746f
	7279 206f 6620 636f 6d70 7574 696e 6720
	6173 2074 6865 200a 7061 7374 696d 6520
	6f66 2064 696c 6574 7461 6e74 6573 2c20
	616d 6174 6575 7220 7363 6965 6e74 6973
	7473 0a61 6e64 2074 6162 756c 6174 6f72
	7320 7768 6f20 636f 6e73 7472 7563 7420
	6d61 6368 696e 6573 2074 6f20 0a6d 616e
	6970 756c 6174 6520 6162 7374 7261 6374
	2073 796d 626f 6c73 2077 6974 6820 6e6f
	2070 7261 6374 6963 616c 200a 6170 706c
	6963 6174 696f 6e2e 2041 7320 7468 6573
	6520 6d61 6368 696e 6573 2061 7265 2067
	656e 6572 616c 6c79 200a 6c65 7373 2065
	6666 6963 6965 6e74 2074 6861 6e20 636f
	6e76 656e 7469 6f6e 616c 2070 656e 6369
	6c20 616e 6420 0a70 6170 6572 2063 6f6d
	7075 7461 7469 6f6e 2c20 7468 6579 2061
	6c6c 7564 6520 746f 2061 206d 6f72 6520
	0a65 7069 6375 7265 616e 2070 7261 6374
	6963 6520 6f66 2063 6f6d 7075 7469 6e67
	2066 6f72 2070 6c65 6173 7572 6520 0a72
	6174 6865 7220 7468 616e 2070 726f 6475
	6374 696f 6e2e 

@font ( bbcmicro )
	0000 0000 0000 0000 1818 1818 1800 1800
	6c6c 6c00 0000 0000 3636 7f36 7f36 3600
	0c3f 683e 0b7e 1800 6066 0c18 3066 0600
	386c 6c38 6d66 3b00 0c18 3000 0000 0000
	0c18 3030 3018 0c00 3018 0c0c 0c18 3000
	0018 7e3c 7e18 0000 0018 187e 1818 0000
	0000 0000 0018 1830 0000 007e 0000 0000
	0000 0000 0018 1800 0006 0c18 3060 0000
	3c66 6e7e 7666 3c00 1838 1818 1818 7e00
	3c66 060c 1830 7e00 3c66 061c 0666 3c00
	0c1c 3c6c 7e0c 0c00 7e60 7c06 0666 3c00
	1c30 607c 6666 3c00 7e06 0c18 3030 3000
	3c66 663c 6666 3c00 3c66 663e 060c 3800
	0000 1818 0018 1800 0000 1818 0018 1830
	0c18 3060 3018 0c00 0000 7e00 7e00 0000
	3018 0c06 0c18 3000 3c66 0c18 1800 1800
	3c66 6e6a 6e60 3c00 3c66 667e 6666 6600
	7c66 667c 6666 7c00 3c66 6060 6066 3c00
	786c 6666 666c 7800 7e60 607c 6060 7e00
	7e60 607c 6060 6000 3c66 606e 6666 3c00
	6666 667e 6666 6600 7e18 1818 1818 7e00
	3e0c 0c0c 0c6c 3800 666c 7870 786c 6600
	6060 6060 6060 7e00 6377 7f6b 6b63 6300
	6666 767e 6e66 6600 3c66 6666 6666 3c00
	7c66 667c 6060 6000 3c66 6666 6a6c 3600
	7c66 667c 6c66 6600 3c66 603c 0666 3c00
	7e18 1818 1818 1800 6666 6666 6666 3c00
	6666 6666 663c 1800 6363 6b6b 7f77 6300
	6666 3c18 3c66 6600 6666 663c 1818 1800
	7e06 0c18 3060 7e00 7c60 6060 6060 7c00
	0060 3018 0c06 0000 3e06 0606 0606 3e00
	183c 6642 0000 0000 0000 0000 0000 00ff
	1c36 307c 3030 7e00 0000 3c06 3e66 3e00
	6060 7c66 6666 7c00 0000 3c66 6066 3c00
	0606 3e66 6666 3e00 0000 3c66 7e60 3c00
	1c30 307c 3030 3000 0000 3e66 663e 063c
	6060 7c66 6666 6600 1800 3818 1818 3c00
	1800 3818 1818 1870 6060 666c 786c 6600
	3818 1818 1818 3c00 0000 367f 6b6b 6300
	0000 7c66 6666 6600 0000 3c66 6666 3c00
	0000 7c66 667c 6060 0000 3e66 663e 0607
	0000 6c76 6060 6000 0000 3e60 3c06 7c00
	3030 7c30 3030 1c00 0000 6666 6666 3e00
	0000 6666 663c 1800 0000 636b 6b7f 3600
	0000 663c 183c 6600 0000 6666 663e 063c
	0000 7e0c 1830 7e00 0c18 1870 1818 0c00
	1818 1800 1818 1800 3018 180e 1818 3000
	316b 4600 0000 0000 ffff ffff ffff ffff
( simple graphical calculator )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|30 @Audio0 &vector $2 &position $2 &output $1 &pad $3 &adsr $2 &length $2 &addr $2 &volume $1 &pitch $1
|80 @Controller &vector $2 &button $1 &key $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &wheel $1
|a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0000

@input &value $2 &mode $1
@stack &length $1 &items $10
@center &x $2 &y $2
@pointer &x $2 &y $2 &last $1
@keypad-frame &x $2 &y $2 &x2 $2 &y2 $2
@modpad-frame &x $2 &y $2 &x2 $2 &y2 $2
@bitpad-frame &x $2 &y $2 &x2 $2 &y2 $2
@input-frame &x $2 &y $2 &x2 $2 &y2 $2

|0100 ( -> )

	( theme )
	#0e7d .System/r DEO2
	#0ec6 .System/g DEO2
	#0e95 .System/b DEO2
	( size )
	#0090 .Screen/width DEO2
	#0100 .Screen/height DEO2
	( vectors )
	;on-mouse .Mouse/vector DEO2
	;on-button .Controller/vector DEO2
	( setup synth )
	#0112 .Audio0/adsr DEO2
	;sin-pcm .Audio0/addr DEO2
	#0100 .Audio0/length DEO2
	#88 .Audio0/volume DEO
	( center )
	.Screen/width DEI2 #01 SFT2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 .center/y STZ2
	.center/x LDZ2 #0020 SUB2
		DUP2 .keypad-frame/x STZ2 #003f ADD2 .keypad-frame/x2 STZ2
	.center/y LDZ2 #0018 SUB2
		DUP2 .keypad-frame/y STZ2 #003f ADD2 .keypad-frame/y2 STZ2
	.keypad-frame/x LDZ2
		DUP2 .modpad-frame/x STZ2 #003f ADD2 .modpad-frame/x2 STZ2
	.keypad-frame/y LDZ2 #0040 ADD2
		DUP2 .modpad-frame/y STZ2 #001f ADD2 .modpad-frame/y2 STZ2
	.keypad-frame/x LDZ2
		DUP2 .bitpad-frame/x STZ2 #003f ADD2 .bitpad-frame/x2 STZ2
	.modpad-frame/y2 LDZ2 #0008 ADD2
		DUP2 .bitpad-frame/y STZ2 #000f ADD2 .bitpad-frame/y2 STZ2
	.center/x LDZ2 #0020 SUB2
		DUP2 .input-frame/x STZ2 #003f ADD2 .input-frame/x2 STZ2
	.center/y LDZ2 #002a SUB2
		DUP2 .input-frame/y STZ2 #000f ADD2 .input-frame/y2 STZ2
	( theme support )
	;load-theme JSR2

BRK

@on-button ( -> )

	.Controller/key DEI
	( generics )
	[ #00 ] NEQk NIP ,&no-empty JCN ;redraw JSR2 POP BRK &no-empty
	[ #09 ] NEQk NIP ,&no-tab JCN ;toggle-mode JSR2 POP BRK &no-tab
	[ #0d ] NEQk NIP ,&no-enter JCN ;do-push JSR2 POP BRK &no-enter
	[ #1b ] NEQk NIP ,&no-esc JCN ;do-pop JSR2 POP BRK &no-esc
	[ #08 ] NEQk NIP ,&no-backspace JCN ;do-erase JSR2 POP BRK &no-backspace
	( arithmetic )
	[ LIT '+ ] NEQk NIP ,&no-add JCN ;do-add JSR2 POP BRK &no-add
	[ LIT '- ] NEQk NIP ,&no-sub JCN ;do-sub JSR2 POP BRK &no-sub
	[ LIT '* ] NEQk NIP ,&no-mul JCN ;do-mul JSR2 POP BRK &no-mul
	[ LIT '/ ] NEQk NIP ,&no-div JCN ;do-div JSR2 POP BRK &no-div
	( bitwise )
	[ LIT '& ] NEQk NIP ,&no-and JCN ;do-and JSR2 POP BRK &no-and
	[ LIT '| ] NEQk NIP ,&no-ora JCN ;do-ora JSR2 POP BRK &no-ora
	[ LIT '^ ] NEQk NIP ,&no-eor JCN ;do-eor JSR2 POP BRK &no-eor
	[ LIT '~ ] NEQk NIP ,&no-not JCN ;do-not JSR2 POP BRK &no-not
	( value )
	;key-value JSR2 ;push-input JSR2

BRK

@on-mouse ( -> )

	;pointer-icn .Screen/addr DEO2

	( clear last cursor )
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO

	( draw new cursor )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	#41 .Mouse/state DEI #01 EQU ADD .Screen/sprite DEO

	.Mouse/state DEI .pointer/last LDZ
	( down )
	DUP2 #0100 NEQ2 ,&no-down JCN
		.Mouse/x DEI2 .Mouse/y DEI2
		OVR2 OVR2 .keypad-frame ;within-rect JSR2 ;click-keypad JCN2
		OVR2 OVR2 .input-frame ;within-rect JSR2 ;click-input JCN2
		OVR2 OVR2 .modpad-frame ;within-rect JSR2 ;click-modpad JCN2
		OVR2 OVR2 .bitpad-frame ;within-rect JSR2 ;click-bitpad JCN2
		;toggle-mode JSR2
		POP2 POP2
		&no-down
	( up )
	DUP2 #0001 NEQ2 ,&no-up JCN
		;redraw JSR2
		&no-up
	POP2
	( record )
	.Mouse/state DEI .pointer/last STZ

BRK

@click-keypad ( state* x* y* -> )

	( y ) .keypad-frame/y LDZ2 SUB2 #24 SFT2
	( x ) SWP2 .keypad-frame/x LDZ2 SUB2 #04 SFT2 #0003 AND2
	( value ) ADD2 ;keypad/layout ADD2 LDA ;push-input JSR2
	#00 .Mouse/state DEO POP2

BRK

@click-modpad ( state* x* y* -> )

	( y ) .modpad-frame/y LDZ2 SUB2 #24 SFT2 NIP STH
	( x ) .modpad-frame/x LDZ2 SUB2 #04 SFT2
	( lookup ) STHr ADD DUP2 ADD2 ;keypad/ops ADD2 LDA2 JSR2
	;draw-bitpad JSR2
	#00 .Mouse/state DEO POP2

BRK

@click-input ( state* x* y* -> )

	POP2
	.input-frame/x LDZ2 SUB2 #03 SFT2 NIP
	DUP ,&no-push JCN
		;do-push JSR2 &no-push
	DUP #01 NEQ ,&no-pop JCN
		;do-pop JSR2 &no-pop
	POP
	#00 .Mouse/state DEO POP2

BRK

@click-bitpad ( state* x* y* -> )

	( y ) .bitpad-frame/y LDZ2 SUB2 #33 SFT2 NIP STH
	( x ) .bitpad-frame/x LDZ2 SUB2 #03 SFT2 NIP
	( value ) STHr ADD STHk

	#30 ADD .Audio0/pitch DEO

	( toggle bit )
	.input/value LDZ2 #0001
		[ STHr #0f SWP SUB ] #40 SFT SFT2 EOR2
		.input/value STZ2

	;draw-bitpad JSR2
	#ff ;draw-input JSR2
	#00 .Mouse/state DEO POP2

BRK

@push-input ( key -- )

	DUP #50 ADD .Audio0/pitch DEO
	#00 OVR ;keypad/series ADD2 LDA ;draw-keypad JSR2
	( hex/dec )
	#00 SWP .input/value LDZ2 #00 [ #0a #10 .input/mode LDZ JMP SWP POP ] MUL2
		ADD2 .input/value STZ2
	#ff ;draw-input JSR2
	;draw-bitpad JSR2

JMP2r

@push ( value* -- )

	( store ) .stack/length LDZ DUP ADD .stack/items ADD STZ2
	( INCZ ) .stack/length LDZk INC SWP STZ
	( reset ) #0000 .input/value STZ2
	#00 ;draw-input JSR2
	;draw-stack JSR2

JMP2r

@pop ( -- value* )

	.stack/length LDZ #01 SUB DUP ADD .stack/items ADD LDZ2
	( clear ) #0000 [ .stack/length LDZ #01 SUB DUP ADD .stack/items ADD ] STZ2
	( DECZ ) .stack/length LDZk #01 SUB SWP STZ
	#01 ;draw-input JSR2
	;draw-stack JSR2

JMP2r

@toggle-mode ( -- )

	.input/mode LDZk #00 EQU SWP STZ
	#30 .Audio0/pitch DEO
	;redraw JSR2

JMP2r

@do-push ( -- )

	.input/value LDZ2 #0000 GTH2 JMP JMP2r
	.stack/length LDZ #07 LTH JMP JMP2r
	#40 .Audio0/pitch DEO
	.input/value LDZ2 ;push JSR2
	;draw-bitpad JSR2

JMP2r

@do-pop ( -- )

	#0000 .input/value STZ2
	.stack/length LDZ #00 EQU ,&continue JCN
		#41 .Audio0/pitch DEO
		;pop JSR2 POP2
		;draw-stack JSR2
		&continue
	#01 ;draw-input JSR2
	;draw-bitpad JSR2

JMP2r

@do-add ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #01 GTH JMP JMP2r

	#42 .Audio0/pitch DEO
	#00 ;draw-modpad JSR2
	;pop JSR2 ;pop JSR2 SWP2 ADD2 ;push JSR2

JMP2r

@do-sub ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #01 GTH JMP JMP2r

	#43 .Audio0/pitch DEO
	#01 ;draw-modpad JSR2
	;pop JSR2 ;pop JSR2 SWP2 SUB2 ;push JSR2

JMP2r

@do-mul ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #01 GTH JMP JMP2r

	#44 .Audio0/pitch DEO
	#02 ;draw-modpad JSR2
	;pop JSR2 ;pop JSR2 SWP2 MUL2 ;push JSR2

JMP2r

@do-div ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #01 GTH JMP JMP2r

	#45 .Audio0/pitch DEO
	#03 ;draw-modpad JSR2
	;pop JSR2 ;pop JSR2 SWP2 DIV2 ;push JSR2

JMP2r

@do-and ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #01 GTH JMP JMP2r

	#46 .Audio0/pitch DEO
	#04 ;draw-modpad JSR2
	;pop JSR2 ;pop JSR2 SWP2 AND2 ;push JSR2

JMP2r

@do-ora ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #01 GTH JMP JMP2r

	#47 .Audio0/pitch DEO
	#05 ;draw-modpad JSR2
	;pop JSR2 ;pop JSR2 SWP2 ORA2 ;push JSR2

JMP2r

@do-eor ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #01 GTH JMP JMP2r

	#48 .Audio0/pitch DEO
	#06 ;draw-modpad JSR2
	;pop JSR2 ;pop JSR2 SWP2 EOR2 ;push JSR2

JMP2r

@do-not ( -- )

	.input/value LDZ2 #0000 EQU2 ,&no-push JCN
		;do-push JSR2
		&no-push

	( stack empty ) .stack/length LDZ #00 GTH JMP JMP2r

	#49 .Audio0/pitch DEO
	#07 ;draw-modpad JSR2
	;pop JSR2 #ffff EOR2 ;push JSR2

JMP2r

@do-erase ( -- )

	.input/value LDZ2 #04 SFT2 .input/value STZ2
	#ff ;draw-input JSR2
	;draw-bitpad JSR2

JMP2r

@key-value ( key -- value )

	DUP #2f GTH OVR #3a LTH #0101 NEQ2 ,&no-num JCN
		#30 SUB JMP2r &no-num
	DUP #60 GTH OVR #67 LTH #0101 NEQ2 ,&no-lc JCN
		#57 SUB JMP2r ( #61 - #0a ADD ) &no-lc
	DUP #40 GTH OVR #47 LTH #0101 NEQ2 ,&no-uc JCN
		#37 SUB JMP2r ( #41 - #0a ADD ) &no-uc
	POP #00

JMP2r

@redraw ( -- )

	#ff ;draw-keypad JSR2
	#ff ;draw-modpad JSR2
	#ff ;draw-input JSR2
	;draw-bitpad JSR2
	;draw-mode JSR2
	;draw-stack JSR2

	#0010 .Screen/x DEO2
	#0010 .Screen/y DEO2

JMP2r

@draw-mode ( -- )

	#26 .Screen/auto DEO
	.input-frame/x LDZ2 .Screen/x DEO2
	.input-frame/y LDZ2 #0014 SUB2 .Screen/y DEO2
	;modes #00 .input/mode LDZ #0018 MUL2 ADD2 .Screen/addr DEO2
	#02 .input/mode LDZ ADD .Screen/sprite DEO
	#00 .Screen/auto DEO

JMP2r

@draw-stack ( -- )

	#08 #00
	&loop
		.input-frame/x LDZ2 #0018 ADD2 .Screen/x DEO2
		#00 OVR #30 SFT2 .input-frame/y LDZ2 ADD2 #004c SUB2 .Screen/y DEO2
		( color ) DUP #08 .stack/length LDZ SUB #01 SUB GTH STH
		( value ) DUP DUP ADD .stack/items ADD [ #10 .stack/length LDZ DUP ADD SUB SUB ] LDZ2
			STHr ;draw-number JSR2
		INC GTHk ,&loop JCN
	POP2

JMP2r

@draw-input ( key -- )

	STH
	( draw value )
	.input-frame/x LDZ2 #0018 ADD2 .Screen/x DEO2
	.input-frame/y LDZ2 #0003 ADD2 .Screen/y DEO2
	.input/value LDZ2 #02 ;draw-number JSR2
	( controls )
	.input-frame/x LDZ2
	.input-frame/y LDZ2
	;stack-icns/push [ STHkr #00 EQU ] #02
		;draw-key-thin JSR2
	.input-frame/x LDZ2 #0008 ADD2
	.input-frame/y LDZ2
	;stack-icns/pop [ STHkr #01 EQU ] #03
		;draw-key-thin JSR2
	( line )
	.input-frame/x LDZ2
	.input-frame/x2 LDZ2
	.input-frame/y LDZ2 #0004 SUB2 #02
		;line-hor-dotted JSR2
	POPr

JMP2r

@draw-keypad ( key -- )

	STH
	#10 #00
	&loop
		( color ) #00 OVR ;keypad/color ADD2 LDA STH
		( state ) DUP OVRr STHr EQU STH
		( layout ) #00 OVR ;keypad/layout ADD2 LDA
			( layout addr ) #00 SWP #30 SFT2 ;font-hex ADD2 STH2
		( x ) #00 OVR #03 AND #40 SFT2 STH2
		( y ) #00 OVR #42 SFT2
		( origin-x ) STH2r .keypad-frame/x LDZ2 ADD2 SWP2
		( origin-y ) .keypad-frame/y LDZ2 ADD2
			STH2r STHr STHr ;draw-key JSR2
		INC GTHk ,&loop JCN
	POP2
	POPr

JMP2r

@draw-modpad ( key -- )

	STH
	#08 #00
	&loop
		( state ) DUP STHkr EQU STH
		( glyph ) #00 OVR #30 SFT2 ;mod-icns ADD2 STH2
		( y ) #00 OVR #42 SFT2 .modpad-frame/y LDZ2 ADD2 STH2
		( x ) #00 OVR #03 AND #40 SFT2 .modpad-frame/x LDZ2 ADD2
		STH2r STH2r STHr #03 ;draw-key JSR2
		INC GTHk ,&loop JCN
	POP2
	POPr

JMP2r

@draw-bitpad ( -- )

	#1000
	&loop
		( y ) #00 OVR #33 SFT2 .bitpad-frame/y LDZ2 ADD2 .Screen/y DEO2
		( x ) #00 OVR #07 AND #30 SFT2 .bitpad-frame/x LDZ2 ADD2 .Screen/x DEO2
		( state ) DUP #0f SWP SUB .input/value LDZ2 ROT SFT2 #0001 AND2
		( addr ) #30 SFT2 ;bit-icns ADD2 .Screen/addr DEO2
		#01 .Screen/sprite DEO
		INC GTHk ,&loop JCN
	POP2

JMP2r

@draw-key ( x* y* glyph* state color -- )

	STH2
	#16 .Screen/auto DEO
	SWP2 .Screen/y DEO2
	SWP2 .Screen/x DEO2
	( bg )
	;button-icns [ #00 OVRr STHr #50 SFT2 ADD2 ] .Screen/addr DEO2
	STHkr .Screen/sprite DEOk DEO
	( fg )
	.Screen/addr DEO2
	#00 .Screen/auto DEO
	.Screen/y DEI2k #000d SUB2 ROT DEO2
	.Screen/x DEI2k #0004 ADD2 ROT DEO2
	STHr [ STHr #09 MUL ADD ] .Screen/sprite DEO

JMP2r

@draw-key-thin ( x* y* glyph* state color -- )

	#06 .Screen/auto DEO
	,&color STR ,&state STR ,&glyph STR2
	( frame )
	;button-thin-icns #00 [ LIT &state $1 ] #40 SFT2 ADD2 .Screen/addr DEO2
	.Screen/y DEO2 .Screen/x DEO2
	[ LIT &color $1 ] .Screen/sprite DEOk DEO
	( glyph )
	[ LIT2 &glyph $2 ] .Screen/addr DEO2
	.Screen/y DEI2 #000c SUB2 .Screen/y DEO2
	#05 .Screen/sprite DEO
	#00 .Screen/auto DEO

JMP2r

@draw-number ( number* color -- )

	,&color STR
	( reset zero pad )
	#00 ;&zero STA
	( hexadecimal )
	.input/mode LDZ ,&decimal JCN
		#01 .Screen/auto DEO
		#00 ,&digit JSR
		SWP ,&byte JSR
	&byte
		STHk #04 SFT ,&digit JSR
		STHr #0f AND 
	&digit ( num -- )
		,&addr JSR .Screen/addr DEO2
		[ LIT &color $1 ] .Screen/sprite DEO
	JMP2r
	&decimal ( num* -- )
		#01 .Screen/auto DEO
		#2710 DIV2k DUP2 NIP ,&digit JSR MUL2 SUB2
		#03e8 DIV2k DUP2 NIP ,&digit JSR MUL2 SUB2
		#0064 DIV2k DUP2 NIP ,&digit JSR MUL2 SUB2 NIP
		#0a DIVk DUP ,&digit JSR MUL SUB
		,&digit JSR
		#00 .Screen/auto DEO
	JMP2r
	&addr ( num -- addr* )
		,&zero LDR ,&padded JCN
		DUP ,&no-blank JCN
			POP ;blank-icn JMP2r
			&no-blank
		DUP ,&zero STR
		&padded #30 SFT #00 SWP ;font-hex ADD2

JMP2r
	&zero $1

( theme )

@theme-txt ".theme $1

@load-theme ( -- )

	;theme-txt .File/name DEO2
	#0006 .File/length DEO2
	#fffa .File/read DEO2

	.File/success DEI2 #0006 NEQ2 ,&ignore JCN
		#fffa LDA2 .System/r DEO2
		#fffc LDA2 .System/g DEO2
		#fffe LDA2 .System/b DEO2
		&ignore
	;redraw JSR2

JMP2r

@within-rect ( x* y* rect -- flag )
	
	STH
	( y < rect.y1 ) DUP2 STHkr INC INC LDZ2 LTH2 ,&skip JCN
	( y > rect.y2 ) DUP2 STHkr #06 ADD LDZ2 GTH2 ,&skip JCN
	SWP2
	( x < rect.x1 ) DUP2 STHkr LDZ2 LTH2 ,&skip JCN
	( x > rect.x2 ) DUP2 STHkr #04 ADD LDZ2 GTH2 ,&skip JCN
	POP2 POP2 POPr
	#01
JMP2r
	&skip POP2 POP2 POPr #00 JMP2r

@line-hor-dotted ( x0* x1* y* color -- )
	
	STH .Screen/y DEO2
	SWP2
	&loop
		( save ) DUP2 .Screen/x DEO2
		( draw ) STHkr .Screen/pixel DEO
		INC2 INC2 GTH2k ,&loop JCN
	POP2 POP2 POPr

JMP2r

( assets )

@keypad
	&layout
	0708 090f 0405 060e 0102 030d 000a 0b0c
	&series
	0c08 090a 0405 0600 0102 0d0e 0f0b 0703
	&color
	0101 0102 0101 0102 0101 0102 0102 0202
	&ops
	:do-add :do-sub :do-mul :do-div
	:do-and :do-ora :do-eor :do-not

@sin-pcm
	8083 8689 8c8f 9295 989b 9ea1 a4a7 aaad
	b0b3 b6b9 bbbe c1c3 c6c9 cbce d0d2 d5d7
	d9db dee0 e2e4 e6e7 e9eb ecee f0f1 f2f4
	f5f6 f7f8 f9fa fbfb fcfd fdfe fefe fefe
	fffe fefe fefe fdfd fcfb fbfa f9f8 f7f6
	f5f4 f2f1 f0ee eceb e9e7 e6e4 e2e0 dedb
	d9d7 d5d2 d0ce cbc9 c6c3 c1be bbb9 b6b3
	b0ad aaa7 a4a1 9e9b 9895 928f 8c89 8683
	807d 7a77 7471 6e6b 6865 625f 5c59 5653
	504d 4a47 4542 3f3d 3a37 3532 302e 2b29
	2725 2220 1e1c 1a19 1715 1412 100f 0e0c
	0b0a 0908 0706 0505 0403 0302 0202 0202
	0102 0202 0202 0303 0405 0506 0708 090a
	0b0c 0e0f 1012 1415 1719 1a1c 1e20 2225
	2729 2b2e 3032 3537 3a3d 3f42 4547 4a4d
	5053 5659 5c5f 6265 686b 6e71 7477 7a7d

@font-hex
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 00fe 0202 0408 1010
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc
	007c 8280 8080 827c 00fc 8282 8282 82fc
	00fe 8080 fe80 80fe 00fe 8080 f080 8080

@modes
	( hex )
	0082 8282 fe82 8282
	00fe 8080 fe80 80fe
	0082 4428 1028 4482
	( dec )
	00fc 8282 8282 82fc
	00fe 8080 fe80 80fe
	007c 8280 8080 827c

@mod-icns
	0010 1010 fe10 1010
	0000 0000 fe00 0000
	0082 4428 1028 4482
	0002 0408 1020 4080
	0070 8888 728a 847a
	0010 1010 1010 1010
	0000 1028 4482 0000
	0000 0060 920c 0000

@button-icns
	( outline )
	3f40 8080 8080 8080
	f804 0202 0202 0202
	8080 8080 8040 3f00
	0202 0202 0204 f800
	( full )
	3f7f ffff ffff ffff
	f8fc fefe fefe fefe
	ffff ffff ff7f 3f00
	fefe fefe fefc f800

@button-thin-icns
	( outline )
	3844 8282 8282 8282
	8282 8282 8244 3800
	( full )
	387c fefe fefe fefe
	fefe fefe fe7c 3800

@bit-icns
	( outline )
	3844 8282 8244 3800
	( full )
	387c fefe fe7c 3800

@stack-icns
	&push
	0000 1028 1000 0000
	&pop
	0000 2810 2800 0000

@pointer-icn
	80c0 e0f0 f8e0 1000

@blank-icn
( GUI Hover )

|00 @System [ &vector $2 &pad $6 &r $2 &g $2 &b $2 ]
|20 @Screen [ &vector $2 &width $2 &height $2 &pad $2 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]
|90 @Mouse [ &vector $2 &x $2 &y $2 &state $1 &wheel $1 ]

( variables )

|0000

@color $1
@pointer [ &x $2 &y $2 &sprite $2 ]
@r1 [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@r2 [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@r3 [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]

( program )

|0100

	( theme ) 
	#0f0f .System/r DEO2 
	#0fff .System/g DEO2 
	#0ff0 .System/b DEO2

	( vectors ) ;on-mouse .Mouse/vector DEO2
	
	#0020 #0030 #0060 #0060 .r1/y2 STZ2 .r1/x2 STZ2 .r1/y1 STZ2 .r1/x1 STZ2
	#0058 #0050 #0090 #0080 .r2/y2 STZ2 .r2/x2 STZ2 .r2/y1 STZ2 .r2/x1 STZ2
	#0048 #0048 #0080 #0098 .r3/y2 STZ2 .r3/x2 STZ2 .r3/y1 STZ2 .r3/x1 STZ2

( no BRK, run through to on-mouse )

@on-mouse
	
	;pointer_icn .pointer/sprite STZ2

	#01 .color STZ
	.Mouse/x DEI2 .Mouse/y DEI2 .r1 ;within-rect JSR2 #00 EQU ,&draw1 JCN 
		#02 .color STZ 
		;hand_icn .pointer/sprite STZ2
		&draw1 
	.r1/x1 LDZ2 .r1/y1 LDZ2 .r1/x2 LDZ2 .r1/y2 LDZ2 .color LDZ ;line-rect JSR2
	
	#01 .color STZ
	.Mouse/x DEI2 .Mouse/y DEI2 .r2 ;within-rect JSR2 #00 EQU ,&draw2 JCN 
		#03 .color STZ 
		;hand_icn .pointer/sprite STZ2
		&draw2 
	.r2/x1 LDZ2 .r2/y1 LDZ2 .r2/x2 LDZ2 .r2/y2 LDZ2 .color LDZ ;line-rect JSR2
	
	#01 .color STZ
	.Mouse/x DEI2 .Mouse/y DEI2 .r3 ;within-rect JSR2 #00 EQU ,&draw3 JCN 
		#02 .color STZ 
		;hand_icn .pointer/sprite STZ2
		&draw3 
	.r3/x1 LDZ2 .r3/y1 LDZ2 .r3/x2 LDZ2 .r3/y2 LDZ2 .color LDZ ;line-rect JSR2

	( clear last cursor )
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO

	( record pointer positions )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2 
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	.pointer/sprite LDZ2 .Screen/addr DEO2

	( draw new cursor )
	#41 .Screen/sprite DEO

BRK

@within-rect ( x* y* rect -- flag )
	
	STH
	( y < rect.y1 ) DUP2 STHkr INC INC LDZ2 LTH2 ,&skip JCN
	( y > rect.y2 ) DUP2 STHkr #06 ADD LDZ2 GTH2 ,&skip JCN
	SWP2
	( x < rect.x1 ) DUP2 STHkr LDZ2 LTH2 ,&skip JCN
	( x > rect.x2 ) DUP2 STHkr #04 ADD LDZ2 GTH2 ,&skip JCN
	POP2 POP2 POPr
	#01 
JMP2r
	&skip
	POP2 POP2 POPr
	#00

JMP2r

@line-rect ( x1* y1* x2* y2* color -- )

	STH
	DUP2 ,&ver-y2 STR2 ,&hor-y2 STR2
	DUP2 ,&ver-x2 STR2 ,&hor-x2 STR2
	DUP2 ,&ver-y1 STR2 ,&hor-y1 STR2
	DUP2 ,&ver-x1 STR2 ,&hor-x1 STR2
	( horizontal )
	[ LIT2 &hor-x2 $2 ] INC2 [ LIT2 &hor-x1 $2 ]
	&hor
		DUP2 .Screen/x DEO2
		[ LIT2 &hor-y1 $2 ] .Screen/y DEO2 STHkr .Screen/pixel DEOk
		[ LIT2 &hor-y2 $2 ] .Screen/y DEO2 DEO
		INC2 GTH2k ,&hor JCN
	POP2 POP2
	( vertical )
	[ LIT2 &ver-y2 $2 ] [ LIT2 &ver-y1 $2 ]
	&ver
		DUP2 .Screen/y DEO2
		[ LIT2 &ver-x1 $2 ] .Screen/x DEO2 STHkr .Screen/pixel DEOk
		[ LIT2 &ver-x2 $2 ] .Screen/x DEO2 DEO
		INC2 GTH2k ,&ver JCN
	POP2 POP2
	POPr

JMP2r

@pointer_icn [ 80c0 e0f0 f8e0 1000 ]
@hand_icn    [ 4040 4070 f8f8 f870 ]
( uxnasm projects/examples/demos/snake.tal bin/snake.rom && uxnemu bin/snake.rom )

%+  { ADD } %-   { SUB }              %/   { DIV }  
%<  { LTH } %>   { GTH }  %=  { EQU } %!   { NEQ } 
%++ { ADD2 } %-- { SUB2 }              %// { DIV2 } 
%<< { LTH2 } %>> { GTH2 } %== { EQU2 } %!! { NEQ2 }  
%2/  { #01 SFT } %2* { #10 SFT }
%8//  { #03 SFT2 } %8**  { #30 SFT2 }
%MOD { DIVk MUL SUB }
%MAX { LTHk JMP SWP POP }
%RTN { JMP2r }
%TOS { #00 SWP }
%BRK? { #01 JCN BRK }


%DIFFICULTY { #06 }

( devices )

|00 @System     [ &vector $2 &wst      $1 &rst    $1 &pad   $4 &r      $2 &g      $2 &b    $2 &debug  $1 &halt $1 ]
|10 @Console    [ &vector $2 &read     $1 &pad    $5 &write $1 &error  $1 ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &pad   $2 &x      $2 &y      $2 &addr $2 &pixel  $1 &sprite $1 ]
|30 @Audio0     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
|80 @Controller [ &vector $2 &button   $1 &key    $1 ]
|c0 @DateTime   [ &year   $2 &month    $1 &day    $1 &hour  $1 &minute $1 &second $1 &dotw $1 &doty   $2 &isdst $1 ]

( variables )

|0000

( program )

@arena
	&w $1 &h $1 &timer $1
@apple
	&x $1 &y $1
@snake
	&direction $1 &length $1 &dead $1
	&x $1 &y $1
	&tail

|0100 ( -> )

	( theme ) 
	#0f7e .System/r DEO2 
	#0fe6 .System/g DEO2 
	#0f62 .System/b DEO2

	( vectors )
	;on-frame .Screen/vector DEO2
	;on-button .Controller/vector DEO2

	( resize )
	#00c8 .Screen/width DEO2
	#0100 .Screen/height DEO2

	( set arena )
	.Screen/width DEI2 8// NIP .arena/w STZ
	.Screen/height DEI2 8// NIP .arena/h STZ

	;reset JSR2

BRK

@on-frame ( -> )

	.arena/timer LDZ INC DUP .arena/timer STZ
		DIFFICULTY = BRK?

	( clear ) #00 ;draw-snake JSR2
	( update ) ;move JSR2
	( draw ) #02 .snake/dead LDZ + ;draw-snake JSR2
		#83 ;draw-apple JSR2
	( score ) .snake/length LDZ #41 ;draw-score JSR2
	( reset ) #00 .arena/timer STZ

BRK

@on-button ( -> )

	.Controller/button DEI 
	DUP #08 ! ,&no-escape JCN
		;reset JSR2
		&no-escape
	#04 SFT DUP #00 = ,&skip JCN
		DUP .snake/direction STZ
		&skip
	POP

BRK

@reset ( -- )

	#00 ;draw-snake JSR2
	#00 ;draw-apple JSR2

	.arena/w LDZ 2/ #01 - .snake/x STZ
	.arena/h LDZ 2/ #01 - .snake/y STZ
	#00 .snake/dead STZ
	#00 .snake/length STZ
	#00 .snake/direction STZ

	#03 ;draw-snake JSR2
	;add-apple JSR2

RTN

@move ( -- )

	( tail )
	.snake/x LDZ2 STH2
	.snake/length LDZ #00
	&loop
		( pop ) DUP 2* .snake/tail + LDZ2 STH2 SWP2r
		( push ) DUP 2* .snake/tail + STH2r ROT STZ2
		INC GTHk ,&loop JCN
	POP2
	POP2r

	.snake/dead LDZ #00 = JMP RTN

	.snake/direction LDZ
	DUP #01 ! ,&no-up JCN
		.snake/y LDZ #01 - 
			.arena/h LDZ MAX
			.snake/y STZ
		&no-up
	DUP #02 ! ,&no-down JCN
		.snake/y LDZ INC
			.arena/h LDZ MOD
			.snake/y STZ
		&no-down
	DUP #04 ! ,&no-left JCN
		.snake/x LDZ #01 - 
			.arena/w LDZ MAX
			.snake/x STZ
		&no-left
	DUP #08 ! ,&no-right JCN
		.snake/x LDZ INC 
			.arena/w LDZ MOD
			.snake/x STZ
		&no-right
	POP

	( detect collision with apple )
	.snake/x LDZ2 .apple/x LDZ2 NEQ2 ,&no-collision-apple JCN
		#00 ;draw-apple JSR2
		.snake/length LDZ INC .snake/length STZ
		;add-apple JSR2
		;move JSR2
		&no-collision-apple

	.snake/length LDZ #01
	&loop-body
		( pop ) DUP 2* .snake/tail + LDZ2 
		.snake/x LDZ2 NEQ2 ,&no-collision-body JCN
			#01 .snake/dead STZ
			#03 ;draw-snake JSR2
			&no-collision-body
		INC GTHk ,&loop-body JCN
	POP2

RTN

@add-apple ( -- )

	.DateTime/hour DEI2 .DateTime/minute DEI2 MUL2 #1234 MUL2 +
		.arena/w LDZ MOD .apple/x STZ
	.DateTime/hour DEI2 .DateTime/minute DEI2 MUL2 #abcd MUL2 +
		.arena/h LDZ MOD .apple/y STZ

RTN

@draw-snake ( color -- )

	STH
	( draw tail )
	;snake-icns .Screen/addr DEO2
	.snake/length LDZ #00
	&loop
		DUP 2* .snake/tail + LDZ TOS 8** .Screen/x DEO2
		DUP 2* .snake/tail + INC LDZ TOS 8** .Screen/y DEO2
		STHkr .Screen/sprite DEO
		INC GTHk ,&loop JCN
	POP2
	( draw head )
	.snake/x LDZ TOS 8** .Screen/x DEO2
	.snake/y LDZ TOS 8** .Screen/y DEO2
	;snake-icns/face .Screen/addr DEO2
	STHr .Screen/sprite DEO

RTN

@draw-apple ( color -- )

	.apple/x LDZ TOS 8** .Screen/x DEO2
	.apple/y LDZ TOS 8** .Screen/y DEO2
	;apple-chr .Screen/addr DEO2
	.Screen/sprite DEO

RTN

@draw-score ( score color -- )

	STH
	#0010 .Screen/x DEO2
	#0010 .Screen/y DEO2
	DUP #04 SFT TOS 8** ;font-hex ++ .Screen/addr DEO2
	.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		( draw ) STHkr .Screen/sprite DEO
	#0f AND TOS 8** ;font-hex ++ .Screen/addr DEO2
	.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		( draw ) STHr .Screen/sprite DEO

RTN

( assets )

@snake-icns
	7eff ffff ffff ff7e
	&face
	7eff ffdb ffe7 ff7e
@apple-chr
	0000 76ff ffff 7e3c
	1008 0000 0000 0000
@font-hex ( 0-F )
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 007c 8202 1e02 0202
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc
	007c 8280 8080 827c 00fc 8282 8282 82fc
	007c 8280 f080 827c 007c 8280 f080 8080 

( devices )
|00 @System  [ &vector $2 &pad      $6  &r      $2 &g     $2 &b      $2 ]
|20 @Screen  [ &vector $2 &width $2 &height $2 &pad   $2 &x $2 &y  $2 &addr $2 &pixel $1 &sprite $1 ]

( a -- a+1 )
%ADD-X {
    .Screen/x DEI2
    ADD2
    .Screen/x DEO2
}

( a -- a-1 )
%SUB-X {
    .Screen/x DEI2
    SWP2
    SUB2
    .Screen/x DEO2
}

( a -- a+1 )
%ADD-Y {
    .Screen/y DEI2
    ADD2
    .Screen/y DEO2
}

%RTN { JMP2r }

%color-clear { #40 } ( clear sprite from fg )

( zero page )
|0000
@dvd-loc [ &x $2 &y $2 ]
@dvd-direction [ &x $2 &y $2 ]

( main program )
|0100
      ( set system colors )
      #2ce9 .System/r DEO2
      #01c0 .System/g DEO2
      #2ce5 .System/b DEO2

      ( set initial dvd location )
      #000f .dvd-loc/x STZ2
      #00ff .dvd-loc/y STZ2

      ( set initial dvd direction )
      #0001 .dvd-direction/x STZ2
      #0001 .dvd-direction/y STZ2

      ;on-frame .Screen/vector DEO2
BRK

@on-frame ( -> )
    .dvd-loc/x LDZ2
    .Screen/x DEO2
    .dvd-loc/y LDZ2
    .Screen/y DEO2
    
    #00 ;draw-dvd JSR2

    ;handle-direction-change-x JSR2
    .dvd-loc/x LDZ2
    .dvd-direction/x LDZ2
    ;add2-signed JSR2
    DUP2
    .dvd-loc/x STZ2
    .Screen/x DEO2

    ;handle-direction-change-y JSR2
    .dvd-loc/y LDZ2
    .dvd-direction/y LDZ2
    ;add2-signed JSR2
    DUP2
    .Screen/y DEO2
    .dvd-loc/y STZ2

    #01 ;draw-dvd JSR2
BRK

@dee fcc6 c3c3 c3c3 c6fc
@vee c3c3 6666 243c 3c18
@line 0000 00ff ff00 0000

@draw-dvd ( a -- )
    ( draw the DVD symbol )
    DUP DUP DUP DUP DUP DUP
    ;dee .Screen/addr DEO2
    .Screen/sprite DEO

    #000a ADD-X
    ;vee .Screen/addr DEO2
    .Screen/sprite DEO

    #000a ADD-X
    ;dee .Screen/addr DEO2
    .Screen/sprite DEO

    ( draw the underscore line )
    #0015 SUB-X
    #0008 ADD-Y
    ;line .Screen/addr DEO2
    .Screen/sprite DEO
    #0008 ADD-X
    .Screen/sprite DEO
    #0008 ADD-X
    .Screen/sprite DEO
    #0005 ADD-X
    .Screen/sprite DEO
    RTN

@handle-direction-change-x ( -- )
    .dvd-loc/x LDZ2
    #001c ADD2 ( add padding for heigh of chars )
    .Screen/width DEI2
    GTH2 ,&must-flip-left JCN
        ,&check-flip-right JMP
    &must-flip-left
        .dvd-direction/x LDZ2
        #8000 ORA2
        .dvd-direction/x STZ2
        RTN

    &check-flip-right
    .dvd-loc/x LDZ2
    #0001
    LTH2 ,&must-flip-right JCN
        RTN
    &must-flip-right
        .dvd-direction/x LDZ2
        #8000 EOR2
        .dvd-direction/x STZ2
        RTN

@handle-direction-change-y ( -- )
    .dvd-loc/y LDZ2
    #0010 ADD2 ( add padding for heigh of chars )
    .Screen/height DEI2
    GTH2 ,&must-flip-up JCN
        ,&check-flip-down JMP
    &must-flip-up
        .dvd-direction/y LDZ2
        #8000 ORA2
        .dvd-direction/y STZ2
        RTN

    &check-flip-down
    .dvd-loc/y LDZ2
    #0001
    LTH2 ,&must-flip-down JCN
        RTN
    &must-flip-down
        .dvd-direction/y LDZ2
        #8000 EOR2
        .dvd-direction/y STZ2
        RTN

@add2-signed ( a [ signed b ] -- a +/- [ signed b ] )
    DUP2
    #8000 AND2
    POP
    ,&negative-add2 JCN
        ( if we're positive )
        ADD2
        RTN

    &negative-add2
        #8000 EOR2
        SUB2
        RTN( Game Of Life:
	Any live cell with fewer than two live neighbours dies, as if by underpopulation.
	Any live cell with two or three live neighbours lives on to the next generation.
	Any live cell with more than three live neighbours dies, as if by overpopulation.
	Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction. )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2
|10 @Console &vector $2 &read $1 &pad $5 &write $1 &error $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|30 @Audio0 &vector $2 &position $2 &output $1 &pad $3 &adsr $2 &length $2 &addr $2 &volume $1 &pitch $1
|80 @Controller &vector $2 &button $1 &key $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &wheel $1

|0000

@world &frame $1 &count $2
@anchor &x $2 &y $2 &x2 $2 &y2 $2
@pointer &x $2 &y $2

|0100 ( -> )

	( theme )
	#02cf .System/r DEO2
	#02ff .System/g DEO2
	#024f .System/b DEO2
	( resize )
	#00c0 .Screen/width DEO2
	#00c0 .Screen/height DEO2
	( vectors )
	;on-frame .Screen/vector DEO2
	;on-mouse .Mouse/vector DEO2
	;on-control .Controller/vector DEO2
	( glider )
	#07 #03 ;set-cell JSR2
	#07 #04 ;set-cell JSR2
	#05 #04 ;set-cell JSR2
	#07 #05 ;set-cell JSR2
	#06 #05 ;set-cell JSR2
	( center )
	.Screen/width DEI2 #01 SFT2 #0040 SUB2
		DUP2 .anchor/x STZ2
		#007e ADD2 .anchor/x2 STZ2
	.Screen/height DEI2 #01 SFT2 #0040 SUB2
		DUP2 .anchor/y STZ2
		#007e ADD2 .anchor/y2 STZ2

BRK

@on-frame ( -> )
	
	.Mouse/state DEI #00 EQU #01 JCN [ BRK ]
	#0000 .world/count STZ2
	.world/frame LDZ INC
		DUP .world/frame STZ
		#03 AND #00 EQU #01 JCN [ BRK ]
	;run JSR2
	&paused

BRK

@on-mouse ( -> )
	
	( clear last cursor )
	;cursor .Screen/addr DEO2
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO
	( record pointer positions )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	( colorize on state )
	#42 [ .Mouse/state DEI #00 NEQ ] ADD .Screen/sprite DEO
	( on touch in rect )
	.Mouse/state DEI #00 NEQ #01 JCN [ BRK ]
	.Mouse/x DEI2 .Mouse/y DEI2 .anchor ;within-rect JSR2 JMP [ BRK ]
	( paint )
	.Mouse/x DEI2 .anchor/x LDZ2 SUB2 #01 SFT NIP
	.Mouse/y DEI2 .anchor/y LDZ2 SUB2 #01 SFT NIP
		;set-cell JSR2
	( draw )
	;draw-grid JSR2

BRK

@on-control ( -> )

	( toggle play )
	.Controller/key DEI #20 NEQ ,&no-toggle JCN
		;on-frame
		.Screen/vector DEI2 ;on-frame/paused EQU2 ,&swap JCN
			POP2 ;on-frame/paused
			&swap
		.Screen/vector DEO2
		&no-toggle
	( clear on home )
	.Controller/button DEI #08 NEQ ,&no-reset JCN
		;bank1 #0400 ;mclr JSR2
		&no-reset

BRK

@run ( -- )

	( clear buffer )
	;bank2 #1000 ;mclr JSR2
	( run grid )
	#4000
	&ver
		STHk
		#4000
		&hor
			DUP STHkr ,run-cell JSR
			INC GTHk ,&hor JCN
		POP2
		POPr
		INC GTHk ,&ver JCN
	POP2
	( move buffer )
	;bank2 ;bank1 #1000 ;mcpy JSR2
	( draw )
	;draw-grid JSR2

JMP2r

@run-cell ( x y -- )

	( x y ) DUP2k
	( neighbours ) ;get-neighbours JSR2
	( state ) ROT ROT ;get-cell JSR2
	#00 EQU ,&dead JCN
		DUP #02 LTH ,&dies JCN
		DUP #03 GTH ,&dies JCN
		POP ;&save JSR2 JMP2r
		&dies POP POP2 JMP2r
	&dead
		DUP #03 EQU ,&birth JCN POP POP2 JMP2r
		&birth POP ;&save JSR2

JMP2r
	&save ( x y -- ) 
		STH2 #01 STH2r ,get-index JSR [ #1000 ADD2 ] STA
		.world/count LDZ2 INC2 .world/count STZ2
	JMP2r

@get-index ( x y -- index* )
	
	( y ) #3f AND #00 SWP #60 SFT2 
	( x ) ROT #3f AND #00 SWP ADD2
		;bank1 ADD2

JMP2r

@set-cell ( x y -- )
	
	STH2 #01 STH2r ,get-index JSR STA

JMP2r

@get-cell ( x y -- cell )
	
	,get-index JSR LDA

JMP2r

@get-neighbours ( x y -- neighbours )
	
	,&origin STR2
	LITr 00
	#0800
	&loop
		#00 OVRk ADD2 ;&mask ADD2 LDA2 [ LIT2 &origin $2 ]
		ROT ADD STH ADD STHr ;get-cell JSR2 STH ADDr
		INC GTHk ,&loop JCN
	POP2
	STHr

JMP2r
	&mask ffff 00ff 01ff ff00 0100 ff01 0001 0101

@draw-grid ( -- )
	
	( draw cell count )
	.anchor/x LDZ2 .Screen/x DEO2
	.anchor/y2 LDZ2 #0008 ADD2 .Screen/y DEO2
	#01 .Screen/auto DEO
	.world/count LDZ2 ;draw-short JSR2
	#00 .Screen/auto DEO
	#4000
	&ver
		#00 OVRk ADD2 .anchor/y LDZ2 ADD2 .Screen/y DEO2
		STHk
		#4000
		&hor
			#00 OVRk ADD2 .anchor/x LDZ2 ADD2 .Screen/x DEO2
			DUP STHkr ;get-cell JSR2 INC .Screen/pixel DEO
			INC GTHk ,&hor JCN
		POP2
		POPr
		INC GTHk ,&ver JCN
	POP2

JMP2r

@draw-short ( short* -- )

	SWP ,draw-byte JSR

@draw-byte ( byte color -- )

	DUP #04 SFT ,draw-hex JSR #0f AND

@draw-hex ( char color -- )

	#00 SWP #30 SFT2 ;font-hex ADD2 .Screen/addr DEO2
	#03 .Screen/sprite DEO

JMP2r

@within-rect ( x* y* rect -- flag )
	
	STH
	( y < rect.y1 ) DUP2 STHkr INC INC LDZ2 LTH2 ,&skip JCN
	( y > rect.y2 ) DUP2 STHkr #06 ADD LDZ2 GTH2 ,&skip JCN
	SWP2
	( x < rect.x1 ) DUP2 STHkr LDZ2 LTH2 ,&skip JCN
	( x > rect.x2 ) DUP2 STHkr #04 ADD LDZ2 GTH2 ,&skip JCN
	POP2 POP2 POPr
	#01
JMP2r
	&skip
	POP2 POP2 POPr
	#00

JMP2r

@mclr ( addr* len* -- )

	OVR2 ADD2 SWP2
	&loop
		STH2k #00 STH2r STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2

JMP2r

@mcpy ( src* dst* len* -- )

	SWP2 STH2
	OVR2 ADD2 SWP2
	&loop
		LDAk STH2kr STA INC2r
		INC2 GTH2k ,&loop JCN
	POP2 POP2
	POP2r

JMP2r

@cursor
	80c0 e0f0 f8e0 1000

@font-hex
	7c82 8282 8282 7c00
	3010 1010 1010 3800
	7c82 027c 8080 fe00
	7c82 021c 0282 7c00
	2242 82fe 0202 0200
	fe80 807c 0282 7c00
	7c82 80fc 8282 7c00
	fe82 0408 0810 1000
	7c82 827c 8282 7c00
	7c82 827e 0202 0200
	7c82 82fe 8282 8200
	fc82 82fc 8282 fc00
	7c82 8080 8082 7c00
	fc82 8282 8282 fc00
	fe80 80f0 8080 fe00
	fe80 80f0 8080 8000

@bank1 $1000 @bank2
( Move:
	Use controller arrows, leave a slime. )

|00 @System &vector $2 &pad $6 &r $2 &g $2 &b $2
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button $1 &key $1

|0000

@hello &x $2 &y $2

|0100 ( -> )
	
	( theme )
	#c0f4 .System/r DEO2
	#c0fc .System/g DEO2
	#c0f7 .System/b DEO2
	( vectors )
	;on-frame .Screen/vector DEO2
	( set origin )
	.Screen/width DEI2 #01 SFT2 .hello/x STZ2
	.Screen/height DEI2 #01 SFT2 .hello/y STZ2
	( drawing mode )
	#16 .Screen/auto DEO
	( defaults )
	#00 ;on-frame/draw JMP2

BRK

@on-frame ( -> )

	.Controller/button DEI 
	DUP ,&continue JCN
		POP BRK
		&continue
	( clear )
	#40 .Screen/sprite DEO
	( movement )
	DUP #10 AND #00 EQU ,&no-u JCN .hello/y LDZ2k #0001 SUB2 ROT STZ2 &no-u
	DUP #20 AND #00 EQU ,&no-d JCN .hello/y LDZ2k INC2 ROT STZ2 &no-d
	DUP #40 AND #00 EQU ,&no-l JCN .hello/x LDZ2k #0001 SUB2 ROT STZ2 &no-l
	DUP #80 AND #00 EQU ,&no-r JCN .hello/x LDZ2k INC2 ROT STZ2 &no-r
	&draw
	( draw hello )
	.hello/x LDZ2 STH2k .Screen/x DEO2
	.hello/y LDZ2 STH2k .Screen/y DEO2
	;hello-chr .Screen/addr DEO2
	#c1 .Screen/sprite DEOk DEO
	( draw slime )
	STH2r .Screen/y DEO2
	STH2r .Screen/x DEO2
	;slime-icn .Screen/addr DEO2
	,get-slime JSR .Screen/sprite DEOk DEO

BRK

@get-slime ( button -- color )

	#0f AND
		DUP #01 NEQ ,&no-ctrl JCN POP #05 JMP2r &no-ctrl
		DUP #02 NEQ ,&no-alt JCN POP #0a JMP2r &no-alt
	POP #0f

JMP2r

@hello-chr
	0007 1820 2040 4044 0000 071f 1f3f 3f3b
	00e0 1804 0402 0222 0000 e0f8 f8fc fcdc
	4040 4423 2018 0700 3f3f 3b1c 1f07 0000
	0202 22c4 0418 e000 fcfc dc38 f8e0 0000
@slime-icn
	0000 0000 0003 0707 0000 0000 00c0 e0e0
	0707 0300 0000 0000 e0e0 c000 0000 0000
( Controller:
	Buttons should highlight on press and display the button and key bytes. )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button $1 &key $1

|0000

@center
	&x $2 &y $2
@frame
	&w $2 &h $2 &x0 $2 &y0 $2 &x1 $2 &y1 $2

|0100 ( -> )

	( theme )
	#0ff7 .System/r DEO2
	#0f07 .System/g DEO2
	#0f07 .System/b DEO2
	( find center )
	.Screen/width DEI2 #01 SFT2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 .center/y STZ2
	( place controller )
	#0068 .frame/w STZ2
	#0030 .frame/h STZ2
	.center/x LDZ2 .frame/w LDZ2 #01 SFT2 SUB2 .frame/x0 STZ2
	.center/y LDZ2 .frame/h LDZ2 #01 SFT2 SUB2 .frame/y0 STZ2
	.frame/x0 LDZ2 .frame/w LDZ2 ADD2 .frame/x1 STZ2
	.frame/y0 LDZ2 .frame/h LDZ2 ADD2 .frame/y1 STZ2
	( vectors )
	;on-button .Controller/vector DEO2
	( frame )
	.frame/x0 LDZ2 .frame/y0 LDZ2
	.frame/x1 LDZ2 .frame/y1 LDZ2
		#03 ;line-rect JSR2

	,draw-controller JSR

BRK

@on-button ( -> )

	,draw-controller JSR

	( print stack on start button )
	.Controller/button DEI #08 EQU JMP BRK #010e DEO

BRK

@draw-controller ( -- )

	.Controller/button DEI STH

	( d-pad )
	.frame/x0 LDZ2 #0010 ADD2 .Screen/x DEO2
	.frame/y0 LDZ2 #0010 ADD2 .Screen/y DEO2
	;controller-icn/dpad-up .Screen/addr DEO2
	#03  STHkr #04 SFT #01 AND DUP ADD SUB  .Screen/sprite DEO
	.Screen/y DEI2 #0010 ADD2 .Screen/y DEO2
	;controller-icn/dpad-down .Screen/addr DEO2
	#03  STHkr #05 SFT #01 AND DUP ADD SUB  .Screen/sprite DEO
	.Screen/y DEI2 #0008 SUB2 .Screen/y DEO2
	.Screen/x DEI2 #0008 SUB2 .Screen/x DEO2
	;controller-icn/dpad-left .Screen/addr DEO2
	#03  STHkr #06 SFT #01 AND DUP ADD SUB  .Screen/sprite DEO
	.Screen/x DEI2 #0010 ADD2 .Screen/x DEO2
	;controller-icn/dpad-right .Screen/addr DEO2
	#03  STHkr #07 SFT #01 AND DUP ADD SUB  .Screen/sprite DEO
	.Screen/x DEI2 #0008 SUB2 .Screen/x DEO2
	;controller-icn/dpad .Screen/addr DEO2
	#03 .Screen/sprite DEO

	( options )
	.center/y LDZ2 #0009 ADD2 .Screen/y DEO2
	.center/x LDZ2 #0009 SUB2 .Screen/x DEO2
	;controller-icn/option .Screen/addr DEO2
	#03 STHkr #02 SFT #01 AND DUP ADD SUB .Screen/sprite DEO
	.center/x LDZ2 #0004 ADD2 .Screen/x DEO2
	;controller-icn/option .Screen/addr DEO2
	#03 STHkr #03 SFT #01 AND DUP ADD SUB .Screen/sprite DEO

	( buttons )
	.center/y LDZ2 .Screen/y DEO2
	.center/x LDZ2 #0018 ADD2 .Screen/x DEO2
	;controller-icn/button .Screen/addr DEO2
	#03 STHkr #01 SFT #01 AND SUB .Screen/sprite DEO
		.Screen/y DEI2 #000a ADD2 .Screen/y DEO2
		;font-hex #0058 ADD2 .Screen/addr DEO2
		#03 .Screen/sprite DEO

	.center/y LDZ2 .Screen/y DEO2
	.center/x LDZ2 #0024 ADD2 .Screen/x DEO2
	;controller-icn/button .Screen/addr DEO2
	#03 STHr #01 AND SUB .Screen/sprite DEO
		.Screen/y DEI2 #000a ADD2 .Screen/y DEO2
		;font-hex #0050 ADD2 .Screen/addr DEO2
		#03 .Screen/sprite DEO

	.center/x LDZ2 #0010 SUB2 .Screen/x DEO2
	.center/y LDZ2 #0010 SUB2 .Screen/y DEO2
	#01 .Screen/auto DEO
	.Controller/button DEI2 ,draw-short JSR
	#00 .Screen/auto DEO

JMP2r

( generics )

@draw-short ( short* -- )

	SWP ,draw-byte JSR

@draw-byte ( byte -- )

	DUP #04 SFT ,draw-hex JSR 

@draw-hex ( char -- )

	#00 SWP #0f AND #30 SFT2 ;font-hex ADD2 .Screen/addr DEO2
	#03 .Screen/sprite DEO

JMP2r

@line-rect ( x1* y1* x2* y2* color -- )

	STH
	DUP2 ,&ver-y2 STR2 ,&hor-y2 STR2
	DUP2 ,&ver-x2 STR2 ,&hor-x2 STR2
	DUP2 ,&ver-y1 STR2 ,&hor-y1 STR2
	DUP2 ,&ver-x1 STR2 ,&hor-x1 STR2
	( horizontal )
	[ LIT2 &hor-x2 $2 ] INC2 [ LIT2 &hor-x1 $2 ]
	&hor
		DUP2 .Screen/x DEO2
		[ LIT2 &hor-y1 $2 ] .Screen/y DEO2 STHkr .Screen/pixel DEOk
		[ LIT2 &hor-y2 $2 ] .Screen/y DEO2 DEO
		INC2 GTH2k ,&hor JCN
	POP2 POP2
	( vertical )
	[ LIT2 &ver-y2 $2 ] [ LIT2 &ver-y1 $2 ]
	&ver
		DUP2 .Screen/y DEO2
		[ LIT2 &ver-x1 $2 ] .Screen/x DEO2 STHkr .Screen/pixel DEOk
		[ LIT2 &ver-x2 $2 ] .Screen/x DEO2 DEO
		INC2 GTH2k ,&ver JCN
	POP2 POP2
	POPr

JMP2r

@controller-icn
	&dpad       ffff ffff ffff ffff
	&dpad-up    7eff e7c3 ffff ffff
	&dpad-down  ffff ffff c3e7 ff7e
	&dpad-left  7fff efcf cfef ff7f
	&dpad-right feff f7f3 f3f7 fffe
	&option     0000 7eff ff7e 0000
	&button     3c7e ffff ffff 7e3c

@font-hex
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 00fe 0202 0408 1010
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc
	007c 8280 8080 827c 00fc 8282 8282 82fc
	00fe 8080 fe80 80fe 00fe 8080 f080 8080
( dev/audio )

%GET-NOTE { #00 SWP ;melody ADD2 LDA }
%GET-HEXCHAR  { #00 SWP #30 SFT2 ;font-hex ADD2 .Screen/addr DEO2 }

( devices )

|00 @System     [ &vector $2 &pad      $6 &r      $2 &g     $2 &b      $2 ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &pad   $2 &x      $2 &y    $2 &addr  $2 &pixel $1 &sprite $1 ]
|30 @Audio0     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
|80 @Controller [ &vector $2 &button $1 &key    $1 ]

( variables )

|0000

@timer     $1
@progress  $1
@selection $1
@offset
	&x $2 &y $2

|0100 ( -> )
	
	( theme )
	#0f8f .System/r DEO2 
	#0f8f .System/g DEO2 
	#0f80 .System/b DEO2 

	( vectors )
	;on-frame .Screen/vector DEO2
	;on-button .Controller/vector DEO2

	( setup synth )
	#0208 .Audio0/adsr DEO2
	;saw .Audio0/addr DEO2
	#0100 .Audio0/length DEO2
	#dd .Audio0/volume DEO ( TODO: turn ON )

	( center )
	.Screen/width DEI2 #01 SFT2 #0080 SUB2 .offset/x STZ2
	.Screen/height DEI2 #01 SFT2 #0040 SUB2 .offset/y STZ2

	;draw JSR2
	#02 ;draw-selector JSR2

BRK

@on-button ( -> )

	.Controller/button DEI #04 SFT
	[ #01 ] NEQk NIP ,&no-up JCN 
		.selection LDZ STHk 
		#00 ;draw-note JSR2
		[ STHkr GET-NOTE INC ] #00 STHkr ;melody ADD2 STA
		STHr #01 ;draw-note JSR2
		#02 ;draw-selector JSR2
		&no-up
	[ #02 ] NEQk NIP ,&no-down JCN 
		.selection LDZ STHk 
		#00 ;draw-note JSR2
		[ STHkr GET-NOTE #01 SUB ] #00 STHkr ;melody ADD2 STA
		STHr #01 ;draw-note JSR2
		#02 ;draw-selector JSR2
		&no-down
	[ #04 ] NEQk NIP ,&no-left JCN 
		#00 ;draw-selector JSR2
		.selection LDZ #01 SUB #1f AND .selection STZ
		#02 ;draw-selector JSR2
		&no-left
	[ #08 ] NEQk NIP ,&no-right JCN 
		#00 ;draw-selector JSR2
		.selection LDZ INC #1f AND .selection STZ
		#02 ;draw-selector JSR2
		&no-right
	POP
	
BRK

@on-frame ( -> )

	( incr ) .timer LDZ INC .timer STZ 
	( skip ) .timer LDZ #10 EQU #01 JCN [ BRK ]
	.progress LDZ 
	( play note )    DUP GET-NOTE .Audio0/pitch DEO
	( erase last )   DUP #01 SUB #1f AND #01 ,draw-note JSR
	( draw current ) #01 ,draw-note JSR
	( incr ) .progress LDZ INC #1f AND .progress STZ
	#00 .timer STZ

BRK

@draw ( -- )

	#20 #00
	&loop
		DUP #01 ,draw-note JSR
		INC GTHk ,&loop JCN
	POP2

JMP2r

@draw-note ( id color -- )

	STH STH
	( set x ) [ #00 STHkr ] #30 SFT2 .offset/x LDZ2 ADD2 .Screen/x DEO2
	( set y ) [ #00 #00 STHkr ;melody ADD2 LDA ] #20 SFT2 #0100 SWP2 SUB2 .offset/y LDZ2 ADD2 #0080 ADD2 .Screen/y DEO2
	( set addr ) ;marker-icn [ #00 .progress LDZ STHr EQU #08 MUL ADD2 ] .Screen/addr DEO2
	( draw ) STHr .Screen/sprite DEO

JMP2r

@draw-selector ( color -- )
	
	STH
	[ #00 .selection LDZ ] #30 SFT2 .offset/x LDZ2 ADD2 .Screen/x DEO2
	#0070 .offset/y LDZ2 ADD2 .Screen/y DEO2
	;selector-icn .Screen/addr DEO2
	STHkr .Screen/sprite DEO

	.Screen/y DEI2k #0008 ADD2 ROT DEO2
	.selection LDZ GET-NOTE STHr ,draw-byte JSR

JMP2r

@draw-byte ( byte color -- )
	
	STH 
	DUP 
		#04 SFT GET-HEXCHAR 
		( draw ) STHkr .Screen/sprite DEO
	.Screen/x DEI2 #0008 ADD2 .Screen/x DEO2
		#0f AND GET-HEXCHAR 
		( draw ) STHr .Screen/sprite DEO

JMP2r

@melody 
	54 52 54 4f 4b 4f 48 ff
	54 52 54 4f 4b 4f 48 ff
	54 56 57 56 57 54 56 54 
	56 52 54 52 54 50 54 ff 

@selector-icn
	0000 0010 387c 0000

@marker-icn
	3844 8282 8244 3800
	387c fefe fe7c 3800

@saw 
	0003 0609 0c0f 1215 181b 1e21 2427 2a2d
	3033 3639 3b3e 4143 4649 4b4e 5052 5557
	595b 5e60 6264 6667 696b 6c6e 7071 7274
	7576 7778 797a 7b7b 7c7d 7d7e 7e7e 7e7e
	7f7e 7e7e 7e7e 7d7d 7c7b 7b7a 7978 7776
	7574 7271 706e 6c6b 6967 6664 6260 5e5b
	5957 5552 504e 4b49 4643 413e 3b39 3633
	302d 2a27 2421 1e1b 1815 120f 0c09 0603
	00fd faf7 f4f1 eeeb e8e5 e2df dcd9 d6d3
	d0cd cac7 c5c2 bfbd bab7 b5b2 b0ae aba9
	a7a5 a2a0 9e9c 9a99 9795 9492 908f 8e8c
	8b8a 8988 8786 8585 8483 8382 8282 8282
	8182 8282 8282 8383 8485 8586 8788 898a
	8b8c 8e8f 9092 9495 9799 9a9c 9ea0 a2a5
	a7a9 abae b0b2 b5b7 babd bfc2 c5c7 cacd
	d0d3 d6d9 dcdf e2e5 e8eb eef1 f4f7 fafd 

@font-hex ( 0-F )
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 007c 8202 1e02 0202
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc
	007c 8280 8080 827c 00fc 8282 8282 82fc
	007c 8280 f080 827c 007c 8280 f080 8080
( Mouse:
	Paint with 3 colors with each mouse button. )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &pad $3 &modx $2 &mody $2

|0000

@line
	&x $2 &y $2 &dx $2 &dy $2 &e1 $2
@length $2
@frame $2
@pen 
	&x $2 &y $2 &x2 $2 &y2 $2
@pointer
	&x $2 &y $2 &lastx $2 &lasty $2 &state $1

|0100 ( -> )

	( theme )
	#4cfd .System/r DEO2
	#4cf3 .System/g DEO2
	#dcf2 .System/b DEO2

	( vectors )
	;on-mouse .Mouse/vector DEO2
	;on-frame .Screen/vector DEO2

BRK

@on-frame ( -> )

	.Mouse/state DEI ,&skip JCN
		;run DUP2 JSR2 JSR2
		&skip

BRK

@on-mouse ( -> )

	;pointer-icn .Screen/addr DEO2
	( clear last cursor )
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO
	( draw new cursor )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	#42 .Mouse/state DEI #00 NEQ ADD .Screen/sprite DEO
	( on down )
	.Mouse/state DEI #00 NEQ .pointer/state LDZ #00 EQU AND ,on-mouse-down JCN
	( on drag )
	.Mouse/state DEI ,on-mouse-drag JCN
	.Mouse/state DEI .pointer/state STZ

BRK

@on-mouse-down ( -> )

	#0000 DUP2 .length STZ2 .frame STZ2
	;clear-screen JSR2
	( record start position )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .pointer/lastx STZ2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .pointer/lasty STZ2
	.Mouse/state DEI .pointer/state STZ

BRK

@on-mouse-drag ( -> )

	( record )
	;stroke .length LDZ2 #20 SFT2 ADD2 STH2
		.pointer/x LDZ2 .pointer/lastx LDZ2 SUB2 STH2kr STA2
		.pointer/y LDZ2 .pointer/lasty LDZ2 SUB2 STH2r INC2 INC2 STA2
	( move ptr )
	.length LDZ2 INC2 .length STZ2 
	( draw line )
	.pointer/lastx LDZ2
	.pointer/lasty LDZ2
	.pointer/x LDZ2
	.pointer/y LDZ2
		#01
		;draw-line JSR2
	( record last position )
	.Mouse/x DEI2 
		DUP2 .pointer/lastx STZ2 
		DUP2 .pen/x STZ2
		.pen/x2 STZ2
	.Mouse/y DEI2 
		DUP2 .pointer/lasty STZ2 
		DUP2 .pen/y STZ2
		.pen/y2 STZ2
	.Mouse/state DEI .pointer/state STZ

BRK

@run ( -- )

	( read )
	;stroke .frame LDZ2 #20 SFT2 ADD2 STH2
		.pen/x LDZ2 STH2kr LDA2 ADD2 .pen/x STZ2
		.pen/y LDZ2 STH2r INC2 INC2 LDA2 ADD2 .pen/y STZ2
	( line )
	.pen/x LDZ2 .pen/y LDZ2
	.pen/x2 LDZ2 .pen/y2 LDZ2
		.frame LDZ2 #01 SFT2 NIP #01 AND INC ;draw-line JSR2
	( history )
	.pen/x LDZ2 .pen/x2 STZ2
	.pen/y LDZ2 .pen/y2 STZ2
	( incr frame )
	.frame LDZ2 INC2 .length LDZ2 INC2 ( mod2 ) DIV2k MUL2 SUB2 .frame STZ2

JMP2r

@draw-line ( x1* y1* x2* y2* color -- )

	( load ) STH ,&y STR2 ,&x STR2 .line/y STZ2 .line/x STZ2
	,&x LDR2 .line/x LDZ2 SUB2 ;abs2 JSR2 .line/dx STZ2
	#0000 ,&y LDR2 .line/y LDZ2 SUB2 ;abs2 JSR2 SUB2 .line/dy STZ2
	#ffff #00 .line/x LDZ2 ,&x LDR2 ;lts2 JSR2 DUP2 ADD2 ADD2 ,&sx STR2
	#ffff #00 .line/y LDZ2 ,&y LDR2 ;lts2 JSR2 DUP2 ADD2 ADD2 ,&sy STR2
	.line/dx LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
	&loop
		.line/x LDZ2 DUP2 .Screen/x DEO2 [ LIT2 &x $2 ] EQU2
		.line/y LDZ2 DUP2 .Screen/y DEO2 [ LIT2 &y $2 ] EQU2
			STHkr .Screen/pixel DEO
			AND ,&end JCN
		.line/e1 LDZ2 DUP2 ADD2 DUP2
		.line/dy LDZ2 ;lts2 JSR2 ,&skipy JCN
			.line/e1 LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
			.line/x LDZ2 [ LIT2 &sx $2 ] ADD2 .line/x STZ2
		&skipy
		.line/dx LDZ2 ;gts2 JSR2 ,&skipx JCN
			.line/e1 LDZ2 .line/dx LDZ2 ADD2 .line/e1 STZ2
			.line/y LDZ2 [ LIT2 &sy $2 ] ADD2 .line/y STZ2
		&skipx
		,&loop JMP
	&end
	POPr

JMP2r

@abs2 DUP2 #0f SFT2 EQU #05 JCN #0000 SWP2 SUB2 JMP2r
@lts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 GTH2 JMP2r
@gts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 LTH2 JMP2r

@clear-screen ( -- )

	.Screen/height DEI2 #03 SFT2 NIP #00
	&y
		#00 OVR #30 SFT2 .Screen/y DEO2
		.Screen/width DEI2 #03 SFT2 NIP #00
		&x
			#00 OVR #30 SFT2 .Screen/x DEO2
			#00 .Screen/sprite DEO
			INC GTHk ,&x JCN
		POP2
		INC GTHk ,&y JCN
	POP2

JMP2r

@pointer-icn
	80c0 e0f0 f8e0 1000

@stroke

( Piano:
	Play notes with the keyboard or the controller )

|00 @System     &vector $2 &wst      $1 &rst    $1 &pad    $4 &r      $2 &g      $2 &b      $2 &debug  $1 &halt $1
|10 @Console    &vector $2 &read     $1 &pad    $5 &write  $1 &error  $1
|20 @Screen     &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|30 @Audio0     &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length $2 &addr   $2 &volume $1 &pitch $1
|80 @Controller &vector $2 &button   $1 &key    $1
|90 @Mouse      &vector $2 &x        $2 &y      $2 &state  $1 &pad    $3 &modx   $2 &mody   $2

|0000

@last-note $1
@octave $1
@pointer
	&x $2 &y $2
@center
	&x $2 &y $2
@adsr-view
	&x1 $2 &y1 $2 &x2 $2 &y2 $2
@wave-view
	&x1 $2 &y1 $2 &x2 $2 &y2 $2
@octave-view
	&x1 $2 &y1 $2 &x2 $2 &y2 $2

|0100 ( -> )
	
	( theme )
	#0fe5 .System/r DEO2
	#0fc5 .System/g DEO2
	#0f25 .System/b DEO2
	( vectors )
	;on-frame   .Screen/vector DEO2
	;on-control .Controller/vector DEO2
	;on-mouse   .Mouse/vector DEO2
	;on-message .Console/vector DEO2
	( find center )
	.Screen/width DEI2 #01 SFT2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 .center/y STZ2
	( place octave )
	.center/x LDZ2 #0080 SUB2 .octave-view/x1 STZ2
	.center/y LDZ2 #0008 ADD2 .octave-view/y1 STZ2
	.octave-view/x1 LDZ2 #0050 ADD2 .octave-view/x2 STZ2
	.octave-view/y1 LDZ2 #0018 ADD2 .octave-view/y2 STZ2
	( place adsr )
	.center/x LDZ2 #0020 SUB2 .adsr-view/x1 STZ2
	.center/y LDZ2 #0008 ADD2 .adsr-view/y1 STZ2
	.adsr-view/x1 LDZ2 #00a0 ADD2 .adsr-view/x2 STZ2
	.adsr-view/y1 LDZ2 #0018 ADD2 .adsr-view/y2 STZ2
	( place waveform )
	.center/x LDZ2 #0080 SUB2 .wave-view/x1 STZ2
	.center/y LDZ2 #0020 SUB2 .wave-view/y1 STZ2
	.wave-view/x1 LDZ2 #0100 ADD2 .wave-view/x2 STZ2
	.wave-view/y1 LDZ2 #0020 ADD2 .wave-view/y2 STZ2
	( default settings )
	#ff .last-note STZ
	#041c .Audio0/adsr DEO2
	#dd .Audio0/volume DEO
	;sin-pcm .Audio0/addr DEO2
	#0100 .Audio0/length DEO2
	( inital drawing )
	;draw-octave JSR2
	;draw-adsr JSR2
	;draw-wave JSR2

BRK

@on-frame ( -> )
	
	.adsr-view/y2 LDZ2 #0020 SUB2 .Screen/y DEO2
	#10 #00
	&loop
		.adsr-view/x2 LDZ2 #003a SUB2 .Screen/x DEO2
		#10 OVR SUB .Audio0/output DEI #0f AND LTH .Screen/pixel DEO
		.adsr-view/x2 LDZ2 #003a SUB2 INC2 INC2 .Screen/x DEO2
		#10 OVR SUB .Audio0/output DEI #04 SFT LTH .Screen/pixel DEO
		.Screen/y DEI2k INC2 INC2 ROT DEO2
		INC GTHk ,&loop JCN
	POP2

BRK

@on-control ( -> )

	( clear last cursor )
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO

	.Controller/key DEI
	[ LIT 'a ] NEQk NIP ,&no-c JCN #30 .octave LDZ #0c MUL ADD ;play JSR2 &no-c
	[ LIT 's ] NEQk NIP ,&no-d JCN #32 .octave LDZ #0c MUL ADD ;play JSR2 &no-d
	[ LIT 'd ] NEQk NIP ,&no-e JCN #34 .octave LDZ #0c MUL ADD ;play JSR2 &no-e
	[ LIT 'f ] NEQk NIP ,&no-f JCN #35 .octave LDZ #0c MUL ADD ;play JSR2 &no-f
	[ LIT 'g ] NEQk NIP ,&no-g JCN #37 .octave LDZ #0c MUL ADD ;play JSR2 &no-g
	[ LIT 'h ] NEQk NIP ,&no-a JCN #39 .octave LDZ #0c MUL ADD ;play JSR2 &no-a
	[ LIT 'j ] NEQk NIP ,&no-b JCN #3b .octave LDZ #0c MUL ADD ;play JSR2 &no-b
	[ LIT 'k ] NEQk NIP ,&no-c2 JCN #3c .octave LDZ #0c MUL ADD ;play JSR2 &no-c2
	[ #1b ] NEQk NIP ,&no-esc JCN #010f DEO &no-esc
	POP

	( release )
	#00 .Controller/key DEO

	.Controller/button DEI
	[ #11 ] NEQk NIP ,&cu JCN #3c ;play JSR2 &cu
	[ #21 ] NEQk NIP ,&cd JCN #3d ;play JSR2 &cd
	[ #41 ] NEQk NIP ,&cl JCN #3e ;play JSR2 &cl
	[ #81 ] NEQk NIP ,&cr JCN #3f ;play JSR2 &cr
	[ #12 ] NEQk NIP ,&au JCN #40 ;play JSR2 &au
	[ #22 ] NEQk NIP ,&ad JCN #41 ;play JSR2 &ad
	[ #42 ] NEQk NIP ,&al JCN #42 ;play JSR2 &al
	[ #82 ] NEQk NIP ,&ar JCN #43 ;play JSR2 &ar
	[ #14 ] NEQk NIP ,&su JCN #44 ;play JSR2 &su
	[ #24 ] NEQk NIP ,&sd JCN #45 ;play JSR2 &sd
	[ #44 ] NEQk NIP ,&sl JCN #46 ;play JSR2 &sl
	[ #84 ] NEQk NIP ,&sr JCN #47 ;play JSR2 &sr
	[ #40 ] NEQk NIP ,&l JCN .Audio0/addr DEI2 #0010 SUB2 .Audio0/addr DEO2 &l
	[ #80 ] NEQk NIP ,&r JCN .Audio0/addr DEI2 #0010 ADD2 .Audio0/addr DEO2 &r
	POP

	;draw-octave JSR2
	;draw-wave JSR2

BRK

@on-message ( -> )
	
	.Console/read DEI ;play JSR2
	;draw-octave JSR2

BRK

@on-mouse ( -> )

	;draw-cursor JSR2
	
	.Mouse/state DEI #00 NEQ JMP [ BRK ]

	.Mouse/x DEI2 .Mouse/y DEI2 .wave-view ;within-rect JSR2
		;on-touch-wave-view JCN2
	.Mouse/x DEI2 .Mouse/y DEI2 .adsr-view ;within-rect JSR2
		;on-touch-adsr-view JCN2
	.Mouse/x DEI2 .Mouse/y DEI2 .octave-view ;within-rect JSR2
		;on-touch-octave-view JCN2

BRK

@on-touch-wave-view ( -> )

	.Mouse/x DEI2 .wave-view/x1 LDZ2 SUB2 .Audio0/length DEO2
	;draw-wave JSR2
	;draw-cursor JSR2

BRK

@on-touch-octave-view ( -> )

	.Mouse/x DEI2 .octave-view/x1 LDZ2 SUB2 #03 SFT2 NIP #09 NEQ ,&no-mod JCN
		.Mouse/y DEI2 .octave-view/y1 LDZ2 SUB2 #03 SFT2 NIP
		[ #00 ] NEQk NIP ,&no-incr JCN
			.octave LDZ #03 EQU ,&no-incr JCN
			.octave LDZ INC .octave STZ &no-incr
		[ #02 ] NEQk NIP ,&no-decr JCN
			.octave LDZ #ff EQU ,&no-decr JCN
			.octave LDZ #01 SUB .octave STZ &no-decr
		POP
		( release ) #00 .Mouse/state DEO
		;draw-octave JSR2
		BRK
	&no-mod

	.Mouse/x DEI2 .octave-view/x1 LDZ2 SUB2 #03 SFT2 NIP #06 GTH ,&no-key JCN
		.Mouse/x DEI2 .octave-view/x1 LDZ2 SUB2 #03 SFT2 ;notes ADD2 LDA .octave LDZ #0c MUL ADD ;play JSR2
		( release ) #00 .Mouse/state DEO
		;draw-octave JSR2
	&no-key

BRK

@on-touch-adsr-view ( -> )

	.Mouse/x DEI2 .adsr-view/x1 LDZ2 SUB2 #03 SFT2 NIP #03 DIV
	[ #00 ] NEQk NIP ,&no-a JCN
		.Audio0/adsr DEI ,&touch2 JSR .Audio0/adsr DEO &no-a
	[ #01 ] NEQk NIP ,&no-d JCN
		.Audio0/adsr DEI ,&touch JSR .Audio0/adsr DEO &no-d
	[ #02 ] NEQk NIP ,&no-s JCN
		.Audio0/adsr INC DEI ,&touch2 JSR .Audio0/adsr INC DEO &no-s
	[ #03 ] NEQk NIP ,&no-r JCN
		.Audio0/adsr INC DEI ,&touch JSR .Audio0/adsr INC DEO &no-r
	[ #05 ] NEQk NIP ,&no-left JCN
		.Audio0/volume DEI ,&touch2 JSR .Audio0/volume DEO &no-left
	[ #06 ] NEQk NIP ,&no-right JCN
		.Audio0/volume DEI ,&touch JSR .Audio0/volume DEO &no-right
	POP

	( release ) #00 .Mouse/state DEO
	;draw-adsr JSR2
	;draw-cursor JSR2

BRK
	&touch DUP #f0 AND STH #01 .Mouse/state DEI #01 GTH #0e MUL ADD ADD #0f AND STHr ADD JMP2r
	&touch2 #10 .Mouse/state DEI #01 GTH #e0 MUL ADD ADD JMP2r

@play ( pitch -- )
	
	DUP #0c ( mod ) [ DIVk MUL SUB ] .last-note STZ
	.Audio0/pitch DEO

JMP2r

@draw-cursor ( -- )
	
	( clear last cursor )
	;cursor .Screen/addr DEO2
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO
	( record pointer positions )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	( colorize on state )
	#41 [ .Mouse/state DEI #00 NEQ ] ADD .Screen/sprite DEO

JMP2r

@draw-octave ( -- )
	
	.octave-view/x1 LDZ2 #0048 ADD2 .Screen/x DEO2

	;arrow-icns .Screen/addr DEO2
	.octave-view/y1 LDZ2 .Screen/y DEO2
	#01 .Screen/sprite DEO

	;arrow-icns/down .Screen/addr DEO2
	.octave-view/y1 LDZ2 #0010 ADD2 .Screen/y DEO2
	#01 .Screen/sprite DEO

	;font-hex .octave LDZ #03 ADD #00 SWP #30 SFT2 ADD2 .Screen/addr DEO2
	.octave-view/y1 LDZ2 #0008 ADD2 .Screen/y DEO2
	#03 .Screen/sprite DEO

	.octave-view/x1 LDZ2 .Screen/x DEO2
	.octave-view/y1 LDZ2 .Screen/y DEO2
	#06 .Screen/auto DEO
	.last-note LDZ STH
	;keys-left-icns STHkr #00 EQU INC ,draw-key JSR
	;keys-middle-icns STHkr #02 EQU INC ,draw-key JSR
	;keys-right-icns STHkr #04 EQU INC ,draw-key JSR
	;keys-left-icns STHkr #05 EQU INC ,draw-key JSR
	;keys-middle-icns STHkr #07 EQU INC ,draw-key JSR
	;keys-middle-icns STHkr #09 EQU INC ,draw-key JSR
	;keys-right-icns STHr #0b EQU INC ,draw-key JSR
	#00 .Screen/auto DEO

JMP2r

@draw-key ( addr* color -- )
		
	STH
	.Screen/addr DEO2
	.Screen/y DEI2
	STHr .Screen/sprite DEOk DEOk DEO
	.Screen/x DEI2k #0008 ADD2 ROT DEO2
	.Screen/y DEO2

JMP2r

@draw-adsr ( -- )
	
	( adsr )
	.adsr-view/x1 LDZ2 .adsr-view/y1 LDZ2
		.Audio0/adsr DEI #04 SFT
		;draw-knob JSR2
	.adsr-view/x1 LDZ2 #0018 ADD2 .adsr-view/y1 LDZ2
		.Audio0/adsr DEI #0f AND
		;draw-knob JSR2
	.adsr-view/x1 LDZ2 #0030 ADD2 .adsr-view/y1 LDZ2
		.Audio0/adsr INC DEI #04 SFT
		;draw-knob JSR2
	.adsr-view/x1 LDZ2 #0048 ADD2 .adsr-view/y1 LDZ2
		.Audio0/adsr INC DEI #0f AND
		;draw-knob JSR2
	( volume )
	.adsr-view/x2 LDZ2 #0028 SUB2 .adsr-view/y1 LDZ2
		.Audio0/volume DEI #04 SFT
		;draw-knob JSR2
	.adsr-view/x2 LDZ2 #0010 SUB2 .adsr-view/y1 LDZ2
		.Audio0/volume DEI #0f AND
		;draw-knob JSR2

JMP2r

@draw-wave ( -- )
	
	#01 ;draw-wave-length JSR2

	.wave-view/x1 LDZ2 .Screen/x DEO2

	( waveform )
	#ff #00
	&loop
		( dotted line )
		DUP #01 AND ,&no-dot JCN
			.wave-view/y1 LDZ2 #0010 ADD2 .Screen/y DEO2
			#03 .Screen/pixel DEO
		&no-dot
		#00 OVR .Audio0/addr DEI2 ADD2 LDA
		#01 SFT
		#00 SWP #02 SFT2 .wave-view/y1 LDZ2 ADD2 .Screen/y DEO2
		.Screen/x DEI2 INC2 .Screen/x DEO2
		( draw ) DUP
			.Audio0/length DEI2 NIP GTH
			.Audio0/length DEI2 #0100 NEQ2 AND DUP ADD INC .Screen/pixel DEO
		INC GTHk ,&loop JCN
	POP2

	( range )
	#01 .Screen/auto DEO
	.wave-view/x1 LDZ2 .Screen/x DEO2
	.wave-view/y1 LDZ2 #0010 SUB2 .Screen/y DEO2
	.Audio0/addr DEI2 ;draw-short JSR2
	.wave-view/x2 LDZ2 #0020 SUB2 .Screen/x DEO2
	.Audio0/length DEI2 ;draw-short JSR2
	#00 .Screen/auto DEO

JMP2r

@draw-wave-length ( color -- )

	( clear background )
	#f2 .Screen/auto DEO
	.wave-view/x1 LDZ2 DUP2 .Screen/x DEO2
	.wave-view/y1 LDZ2 DUP2 .Screen/y DEO2
	,&wipe JSR
	.Screen/y DEO2
	#0080 ADD2 .Screen/x DEO2
	,&wipe JSR
	#00 .Screen/auto DEO

	STH
	.wave-view/x1 LDZ2 .Audio0/length DEI2 ADD2 .Screen/x DEO2
	.wave-view/y1 LDZ2 DUP2 #0020 ADD2 SWP2
	&loop
		DUP2 .Screen/y DEO2
		( draw ) STHkr .Screen/pixel DEO
		INC2 GTH2k ,&loop JCN
	POP2 POP2
	POPr

JMP2r
	&wipe #00 .Screen/sprite DEOk DEOk DEOk DEO JMP2r

@draw-knob ( x* y* value -- )

	STH
	OVR2 OVR2 .Screen/y DEO2 .Screen/x DEO2
	( circle )
	;knob-icns .Screen/addr DEO2
	#16 .Screen/auto DEO
	#01 .Screen/sprite DEOk DEO
	#00 .Screen/auto DEO
	( value )
	#0010 ADD2 .Screen/y DEO2
	#0004 ADD2 .Screen/x DEO2
	;font-hex #00 STHkr #30 SFT ADD2 .Screen/addr DEO2
	#01 .Screen/sprite DEO
	( marker )
	.Screen/x DEI2 #0004 SUB2 #00 #00 STHkr ;knob-offsetx ADD2 LDA ADD2 .Screen/x DEO2
	.Screen/y DEI2 #0010 SUB2 #00 #00 STHr ;knob-offsety ADD2 LDA ADD2 .Screen/y DEO2
	;knob-icns #0020 ADD2 .Screen/addr DEO2
	#05 .Screen/sprite DEO

JMP2r

@draw-short ( short* -- )

	SWP ,draw-byte JSR

@draw-byte ( byte -- )

	DUP #04 SFT ,draw-hex JSR #0f AND

@draw-hex ( char -- )

	#00 SWP #30 SFT2 ;font-hex ADD2 .Screen/addr DEO2
	#02 .Screen/sprite DEO

JMP2r

@within-rect ( x* y* rect -- flag )
	
	STH
	( y < rect.y1 ) DUP2 STHkr INC INC LDZ2 LTH2 ,&skip JCN
	( y > rect.y2 ) DUP2 STHkr #06 ADD LDZ2 GTH2 ,&skip JCN
	SWP2
	( x < rect.x1 ) DUP2 STHkr LDZ2 LTH2 ,&skip JCN
	( x > rect.x2 ) DUP2 STHkr #04 ADD LDZ2 GTH2 ,&skip JCN
	POP2 POP2 POPr
	#01
JMP2r
	&skip
	POP2 POP2 POPr
	#00

JMP2r

@cursor
	80c0 e0f0 f8e0 1000

@arrow-icns
	0010 387c fe10 1000
	&down
	0010 1010 fe7c 3810

@notes
	30 32 34 35
	37 39 3b 3c

@keys-left-icns
	7c7c 7c7c 7c7c 7c7c
	7c7c 7c7c 7c7c 7e7f
	7f7f 7f7f 7f7f 3e00

@keys-middle-icns
	1c1c 1c1c 1c1c 1c1c
	1c1c 1c1c 1c1c 3e7f
	7f7f 7f7f 7f7f 3e00

@keys-right-icns
	1f1f 1f1f 1f1f 1f1f
	1f1f 1f1f 1f1f 3f7f
	7f7f 7f7f 7f7f 3e00

@knob-icns
	0003 0c10 2020 4040
	00c0 3008 0404 0202
	4040 2020 100c 0300
	0202 0404 0830 c000
	0000 183c 3c18 0000

@knob-offsetx
	01 00 00 00 00 01 02 03
	05 06 07 08 08 08 08 07

@knob-offsety
	07 06 05 03 02 01 00 00
	00 00 01 02 03 05 06 07

@font-hex ( 0-F )
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 007c 8202 1e02 0202
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc
	007c 8280 8080 827c 00fc 8282 8282 82fc
	007c 8280 f080 827c 007c 8280 f080 8080

@sin-pcm
	8083 8689 8c8f 9295 989b 9ea1 a4a7 aaad
	b0b3 b6b9 bbbe c1c3 c6c9 cbce d0d2 d5d7
	d9db dee0 e2e4 e6e7 e9eb ecee f0f1 f2f4
	f5f6 f7f8 f9fa fbfb fcfd fdfe fefe fefe
	fffe fefe fefe fdfd fcfb fbfa f9f8 f7f6
	f5f4 f2f1 f0ee eceb e9e7 e6e4 e2e0 dedb
	d9d7 d5d2 d0ce cbc9 c6c3 c1be bbb9 b6b3
	b0ad aaa7 a4a1 9e9b 9895 928f 8c89 8683
	807d 7a77 7471 6e6b 6865 625f 5c59 5653
	504d 4a47 4542 3f3d 3a37 3532 302e 2b29
	2725 2220 1e1c 1a19 1715 1412 100f 0e0c
	0b0a 0908 0706 0505 0403 0302 0202 0202
	0102 0202 0202 0303 0405 0506 0708 090a
	0b0c 0e0f 1012 1415 1719 1a1c 1e20 2225
	2729 2b2e 3032 3537 3a3d 3f42 4547 4a4d
	5053 5659 5c5f 6265 686b 6e71 7477 7a7d
@load-rom ( filename* -- )
(
	Attempts to load the ROM from filename* and executes it. If the file exists
	and has non-zero length, this function does not return, because the new ROM
	is executing in its place.

	The screen and both stacks are cleared and all the device vectors are
	written to zero as a convenience. All other device bytes are left
	untouched, so they could introduce a device state to the next ROM that
	it's not expecting.
)

	.File/name DEO2

	( clear wst )
	#ab
	&wst-loop
	POP
	.System/wst STH DEIr STHr ,&wst-loop JCN

	( clear rst )
	LITr ab
	&rst-loop
	POPr
	.System/rst DEI ,&rst-loop JCN

	( clear screen )
	#01 .Screen/auto DEO
	#0000 .Screen/y DEO2
	.Screen/width DEI2 #0007 ADD2 #03 SFT2 #ffff MUL2 STH2
	&screen-yloop
		#0000 .Screen/x DEO2
		STH2kr
		&screen-xloop-bg
			#00 .Screen/sprite DEO
			INC2
			ORAk ,&screen-xloop-bg JCN
		POP2
		#0000 .Screen/x DEO2
		STH2kr
		&screen-xloop-fg
			#40 .Screen/sprite DEO
			INC2
			ORAk ,&screen-xloop-fg JCN
		POP2
		.Screen/y DEI2 #0008 ADD2
		DUP2 .Screen/y DEO2
		.Screen/height DEI2 LTH2 ,&screen-yloop JCN
	POP2r
	#00 .Screen/auto DEO

	( reset device vectors )
	LIT2r 0000 #00
	&device-vector-loop
	DUP2r STHk DEO2r
	#10 ADD
	DUP ,&device-vector-loop JCN
	POP POP2r

	( copy the zero-page-loader into f0-ff )
	;&zero-page-loader LITr f0
	&copy-loop
	LDAk STHkr STZ
	INC2 INCr
	STHkr ,&copy-loop JCN
	POP2 ( leave 00 on return stack )

	( prepare the stack for the zero-page-loader )
	( the more we prepare here in advance, the less we'll have to overwrite )
	STHkr #00fe ( arguments for STZ2 at ff )
	STHkr ( argument for JMP at fe (carry on) )
	DUPk #fcfe ( arguments for STZ2 at fd and JMP (repeat) )
	OVR2 #fafe ( arguments for STZ2 at fd and JMP (repeat) )
	OVR2 #f8fe ( arguments for STZ2 at fd and JMP (repeat) )
	OVR2 #f6fe ( arguments for STZ2 at fd and JMP (repeat) )
	OVR2 #f401 ( arguments for STZ2 at fd, plus an extra 01 )
	STHkr ( first argument for ADD2 )
	.File/success ( argument for DEI2 )
	#0100 .File/read ( arguments for DEO2 )
	#ff00 .File/length DEO2
	#00f0 JMP2

	&zero-page-loader
	( f0 ) DEO2
	( f1 ) DEI2
	( f2 ) ADD2
	( f3 ) &loop DUPr
	( f4 ) STH2k
	( f5 ) STAr
	( f6 ) INC2
	( f7 ) NEQ2k
	( f8 ) ,&loop
	( f9 )
	( fa ) JCN
	( fb ) POPr
	( fc ) POP2
	( fd ) STZ2 ( deletes f4-fd through looping )
	( fe ) JMP
	( ff ) STZ2 ( deletes fe-ff )

	&tmp $1

( app/neralie : clock with arvelie date )

%PAD { #0018 }

%MOD  { DIVk MUL SUB }
%MOD2 { DIV2k MUL2 SUB2 }

%h { .DateTime/hour   DEI }
%m { .DateTime/minute DEI }
%s { .DateTime/second DEI }

( devices )

|00 @System [ &vector $2 &pad $6 &r $2 &g $2 &b $2 ]
|10 @Console    [ &vector $2 &read     $1 &pad    $5 &write $1 &error  $1 ]
|20 @Screen [ &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]
|c0 @DateTime [ &year $2 &month $1 &day $1 &hour $1 &minute $1 &second $1 &dotw $1 &doty $2 &isdst $1 ]

( variables )

|0000

@fps [ &current $1 &next $1 &second $1 ]
@number [ &started $1 &count $1 ]
@lines [ &addr $1 ]
@neralie [ &n0123 $2 &n4 $1 &n5 $1 &n6 $1 &n7 $1 &n8 $1 &n9 $1 &color $1 &x $2 &y $2 &w $2 &h $2 ]
@mul [ &ahi $1 &alo $1 &bhi $1 &blo $1 ]
@frame
	&x1 $2 &x2 $2 &y1 $2 &y2 $2

( program )

|0100

	( theme )  
	#0f3d .System/r DEO2 
	#0fe3 .System/g DEO2 
	#0fb2 .System/b DEO2

	( vectors )  
	;on-screen .Screen/vector DEO2

	( window )
	#0160 .Screen/width DEO2
	#0110 .Screen/height DEO2

	#01 .fps/current STZ

	( set size )
	PAD
	DUP2 .frame/x1 STZ2
	DUP2 .frame/y1 STZ2
	DUP2 .Screen/width DEI2 SWP2 SUB2 #0001 SUB2 .frame/x2 STZ2
	     .Screen/height DEI2 SWP2 SUB2 .frame/y2 STZ2

	#01 .neralie/color STZ

	.frame/x1 LDZ2 .frame/x2 LDZ2
	OVR2 OVR2 .frame/y1 LDZ2 ;h JSR2
	          .frame/y2 LDZ2 ;h JSR2
	.frame/y1 LDZ2 #0001 SUB2 .frame/y2 LDZ2 INC2
	OVR2 OVR2 .frame/x1 LDZ2 ;v JSR2
	          .frame/x2 LDZ2 ;v JSR2

@on-screen ( -> )

	;update-fps JSR2

	#00 .neralie/color STZ
	;draw-clock JSR2
	;neralie-calc JSR2

	#01 .neralie/color STZ
	;draw-date JSR2
	;draw-clock JSR2

BRK

@neralie-calc ( -- )

	( add up fractions of a pulse, store tenths in n6 )
	#0120 #00 h MUL2
	#00c0 #00 m MUL2 ADD2
	#00f8 #00 s MUL2 ADD2
	#0271 #00 .fps/next LDZ MUL2 #00 .fps/current LDZ DIV2 #30 SFT2 ADD2
	#01b0 ;modf JSR2 SWP2 #0017 MUL2 #03e8 DIV2 .neralie/n6 STZ POP

	( add up units and tens of pulses, store in n5 and n4 )
	#0042 #00 h MUL2 ADD2
	#005e #00 m MUL2 ADD2
	#000b #00 s MUL2 ADD2
	#000a ;modf JSR2 SWP2 .neralie/n5 STZ POP
	#000a ;modf JSR2 SWP2 .neralie/n4 STZ POP

	( add up hundreds of pulses + 10 x beats, store in n0123 )
	#01a0 #00 h MUL2 ADD2
	#0006 #00 m MUL2 ADD2 .neralie/n0123 STZ2

JMP2r

@draw-date ( -- )

	( auto x ) #01 .Screen/auto DEO

	.Screen/width DEI2 #01 SFT2 #0034 SUB2 .Screen/x DEO2
	.Screen/height DEI2 #0010 SUB2 .Screen/y DEO2

	( arvelie )
	.DateTime/year DEI2 #07d6 SUB2 NIP
		DUP #0a DIV #00 SWP #30 SFT2 ;font-numbers ADD2 .Screen/addr DEO2
			#01 .Screen/sprite DEO
		#0a MOD #00 SWP #30 SFT2 ;font-numbers ADD2 .Screen/addr DEO2
			#01 .Screen/sprite DEO
	.DateTime/doty DEI2
		DUP2 #000e DIV2 #30 SFT2 ;font-letters ADD2 .Screen/addr DEO2
			#01 .Screen/sprite DEO
		#000e MOD2
		DUP2 #000a DIV2 ,digit JSR
		#000a MOD2 ,digit JSR

	.Screen/x DEI2 #0008 ADD2 .Screen/x DEO2

	( neralie )
	.neralie/n0123 LDZ2 
	#03e8 ;modf JSR2 ,digit JSR
	#0064 ;modf JSR2 ,digit JSR
	#000a ;modf JSR2 ,digit JSR
	           #000b ,digit JSR ( the colon )
	                 ,digit JSR
	#00 .neralie/n4 LDZ  ,digit JSR
	#00 .neralie/n5 LDZ  ,digit JSR

	( auto none ) #00 .Screen/auto DEO

JMP2r

@digit ( index* -- )

	#30 SFT2 ;font-numbers ADD2 .Screen/addr DEO2
	.neralie/color LDZ .Screen/sprite DEO
	
JMP2r

@draw-clock ( -- )

	.frame/x2 LDZ2 .frame/x1 LDZ2 
		DUP2 .neralie/x STZ2 SUB2 .neralie/w STZ2
	.frame/y2 LDZ2 .frame/y1 LDZ2 
		DUP2 .neralie/y STZ2 SUB2 .neralie/h STZ2

	;neralie/n4 NIP .neralie/n0123 LDZ2

	DUP2 ;&h JSR2

	;&next JSR2 #0008 .Screen/x DEO2 .neralie/y LDZ2 #0003 SUB2 .Screen/y DEO2 ,digit JSR

	DUP2 ;&v JSR2
	#04 ;v/spacing STA
	.frame/y1 LDZ2 #0003 SUB2 .neralie/y LDZ2 .neralie/x LDZ2 ;v JSR2
	#01 ;v/spacing STA
	,&next JSR #0008 .Screen/y DEO2 .neralie/x LDZ2 #0003 SUB2 .Screen/x DEO2 ;digit JSR2
	DUP2 ,&h JSR
	,&next JSR .Screen/width DEI2 #0010 SUB2 .Screen/x DEO2 .neralie/y LDZ2 #0003 SUB2 .Screen/y DEO2 ;digit JSR2
	DUP2 ,&v JSR
	,&next JSR POP2
	DUP2 ,&h JSR
	,&next JSR POP2
	DUP2 ,&v JSR
	POP2 POP
	JMP2r

	&next ( digit-addr number* -- next-digit-addr next-number* prev-digit* )
	#03e8 ;modf JSR2 STH2 #000a MUL2
	ROT STHk INC ROT ROT
	#00 STHr LDZ ADD2
	STH2r
	JMP2r

	&h ( number* -- )
	,scale JSR
	.neralie/h LDZ2 ;mul2hi JSR2
	ORAk #02 JCN POP2 JMP2r
	DUP2 .neralie/y LDZ2 ADD2 .neralie/y STZ2
	.neralie/h LDZ2 SWP2 SUB2 .neralie/h STZ2
	.neralie/x LDZ2 DUP2 .neralie/w LDZ2 ADD2 .neralie/y LDZ2 ,h JMP

	&v ( number* -- )
	,scale JSR
	.neralie/w LDZ2 ;mul2hi JSR2
	ORAk #02 JCN POP2 JMP2r
	DUP2 .neralie/x LDZ2 ADD2 .neralie/x STZ2
	.neralie/w LDZ2 SWP2 SUB2 .neralie/w STZ2
	.neralie/y LDZ2 DUP2 .neralie/h LDZ2 ADD2 .neralie/x LDZ2 ,v JMP

@scale ( 0..10000* -- 0..65535* )
	DUP2 #8db8 ;mul2hi JSR2
	SWP2 #0006 MUL2 ADD2
	JMP2r

@h ( x1* x2* y* -- )
	.Screen/y DEO2
	.Screen/x .lines/addr STZ
	,v/draw-line JMP

@v ( y1* y2* x* -- )
	.Screen/x DEO2
	.Screen/y .lines/addr STZ

	&draw-line ( v1* v2* -- )
	LTH2k #01 JCN SWP2
	STH2

	&loop
	LIT2 [ 00 ] &spacing [ 01 ] ADD2
	DUP2 DUP2r STH2r LTH2 ,&keep-going JCN
	POP2 POP2r
	JMP2r

	&keep-going
	DUP2 .lines/addr LDZ DEO2
	.neralie/color LDZ .Screen/pixel DEO
	,&loop JMP

@update-fps ( -- )
	.fps/next LDZ INC .fps/next STZ
	s .fps/second LDZ NEQ JMP JMP2r
	s .fps/second STZ
	.fps/next LDZ .fps/current STZ

	#00 .fps/next STZ
	JMP2r

@modf ( dividend* divisor* SUB2 remainder* quotient* )
	DIV2k STH2k MUL2 SUB2 STH2r JMP2r

@mul2hi ( a* b* -- product-top-16-bits* )
	(
		Multiplying two 16-bit numbers yields a 32-bit number.
		MUL2 returns the lowest 16 bits, we want the highest.

		We split each short into hi and lo bytes, then sum
		the following multiplications:

		31..24 23..16 15..08 07..00
		{ ahi * bhi }
		       { alo * bhi }
		       { ahi * blo }
		              { alo * blo }

		Bits 07..00 can be ignored, but each sum in bits 23..16
		can end up overflowing into bit 24.
	)
	
	;mul/bhi STA2 ;mul/ahi STA2
	#00
		#00
			#00 .mul/alo LDZ #00 .mul/blo LDZ MUL2
		POP
		#00 .mul/ahi LDZ #00 .mul/blo LDZ MUL2 ,&adc JSR
		#00 .mul/alo LDZ #00 .mul/bhi LDZ MUL2 ,&adc JSR
	POP
	#00 .mul/ahi LDZ #00 .mul/bhi LDZ MUL2 ADD2
	JMP2r

	&adc ( 31..24 a* b* -- 31..24 sum* )
	OVR2 ADD2 SWP2 OVR2
	GTH2 ,&carry JCN
	JMP2r
	&carry
	ROT INC ROT ROT
	JMP2r

@font-numbers
	7cc6 ced6 e6c6 7c00 1838 1818 1818 7e00 3c66 063c 6066 7e00
	3c66 061c 0666 3c00 1c3c 6ccc fe0c 1e00 7e62 607c 0666 3c00
	3c66 607c 6666 3c00 7e66 060c 1818 1800 3c66 663c 6666 3c00
	3c66 663e 0666 3c00 7cc6 ced6 e6c6 7c00 0018 1800 1818 0000

@font-letters
	183c 6666 7e66 6600 fc66 667c 6666 fc00 3c66 c0c0 c066 3c00
	f86c 6666 666c f800 fe62 6878 6862 fe00 fe62 6878 6860 f000
	3c66 c0c0 ce66 3e00 6666 667e 6666 6600 7e18 1818 1818 7e00
	1e0c 0c0c cccc 7800 e666 6c78 6c66 e600 f060 6060 6266 fe00
	c6ee fefe d6c6 c600 c6e6 f6de cec6 c600 386c c6c6 c66c 3800
	fc66 667c 6060 f000 386c c6c6 dacc 7600 fc66 667c 6c66 e600
	3c66 603c 0666 3c00 7e5a 1818 1818 3c00 6666 6666 6666 3c00
	6666 6666 663c 1800 c6c6 c6d6 feee c600 c66c 3838 6cc6 c600
	6666 663c 1818 3c00 fec6 8c18 3266 fe00 0018 187e 1818 0000
( GUI Picture )

|00 @System     &vector $2 &wst      $1 &rst    $1 &eaddr  $2 &ecode  $1 &pad     $1 &r       $2 &g      $2 &b     $2 &debug  $1 &halt $1
|20 @Screen     &vector $2 &width    $2 &height $2 &auto   $1 &pad    $1 &x       $2 &y       $2 &addr   $2 &pixel $1 &sprite $1

( variables )

|0000

( program )

|0100
	
	( theme ) 
	#f0f7 .System/r DEO2 
	#f00e .System/g DEO2 
	#f00c .System/b DEO2

	#0030 .Screen/x DEO2
	#0030 .Screen/y DEO2
	;picture-icn #20 #10 #01 ;draw-icn JSR2

	#0100 .Screen/x DEO2
	#0090 .Screen/y DEO2
	#10 #10 ;dafu10x10 #0a ;draw-small JSR2

BRK

@draw-icn ( addr* width height color -- )

	#05 .Screen/auto DEO
	STH 
	( set bounds ) ,&height STR ,&width STR .Screen/addr DEO2
	( set origin ) .Screen/x DEI2 ,&x STR2
	LIT &height $1 #00
	&ver
		LIT2 &x $2 .Screen/x DEO2
		LIT &width $1 #00
		&hor
			STHkr .Screen/sprite DEO
			INC GTHk ,&hor JCN
		POP2
		.Screen/y DEI2k #0008 ADD2 ROT DEO2
		INC GTHk ,&ver JCN
	POP2
	POPr
	#00 .Screen/auto DEO

JMP2r

( makes use of the auto byte )

@draw-small ( w h addr* color -- )

	STH
	.Screen/addr DEO2
	SWP #01 SUB #40 SFT #06 ADD .Screen/auto DEO
	#00
	&loop
		STHkr .Screen/sprite DEO
		INC GTHk ,&loop JCN
	POP2
	POPr

JMP2r

@picture-icn ( akane2010.bit 20 x 10 )
	0000 0000 0000 0000 2b41 2341 2b41 2341
	8881 8081 8880 8080 0a00 2000 8800 2000
	8004 2004 8804 2a04 0000 0000 8000 0000
	0307 0f0f 0f1f 1f5f ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff fff7 ffff efdf
	fbf7 efd7 efdf af5f fffd fbfd fbf5 ebd7
	eaf5 ead5 ead5 aa55 ab55 ab55 ab57 ab57
	fbf7 ebd7 ebd7 ab57 ffff ffff ffff fbf7
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff fefc
	80c0 8000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 2a54 2a54 2a54 2a54
	8800 2200 8800 2200 8800 2200 8800 2200
	0000 0000 0000 0000 2b41 2341 2b41 2341
	8880 8080 8880 a080 8800 2000 8800 2000
	8a05 2a05 8f0f 2a15 aa55 aafd ffff aa45
	bf7f ff7f ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff fefd ffff ffff ffff be7c
	ffff ffff 8a00 0200 befd fafd fe1f 2307
	bf5f bf7d bad5 eaf5 ead5 aa55 aa55 aa55
	aa55 aa55 aa55 aa55 aa55 aa55 aa55 ab57
	af57 af7f ffc5 a307 fbf7 ff9f 1f1f 8f9f
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff fefd faf5 eaff ff5f
	0055 aa55 aaff ffff 0055 aa55 aaff ffff
	0055 aadf aaff ffff aa55 aad5 aaff ffff
	8840 aa77 aaff ffff 8800 aaff aaff ffff
	0000 0000 0000 0000 2b41 2341 2b41 2241
	8800 a000 8800 a004 8804 2004 8000 2240
	8810 0810 a010 2010 0200 0000 0000 0000
	bf3f 3f1f 0f07 0303 ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffd7 ab55
	faf5 faf5 eaf5 eaf5 f870 e240 8840 8240
	8800 2200 8841 233f 8f1f 3f7f ffff ffff
	fadd eac1 e2c1 c2c1 aa55 aa55 aa55 aa55
	aa55 aa55 aa54 a040 ae54 a854 a855 2f07
	8f1f 1f3f bfff ffff 8f87 8f85 8205 2a05
	ffdf af5f bf7f bf77 ffff ffff ffff ffff
	fefd f8c0 80c0 80c0 aa55 2a15 0a15 0a15
	ab55 8000 8000 8000 fe55 0200 0800 2200
	aa55 2200 8800 2200 eb77 2a54 2a54 2a54
	ff55 2000 8800 2000 ff55 0000 0000 2000
	0000 0000 0000 0000 2a41 2241 2b41 2341
	8804 a004 8004 a004 0840 aa40 8850 8210
	a010 2040 a040 2040 0000 0000 0000 0000
	0301 0000 0000 0000 ffff ff7f 7f3f 3b07
	ffff ffff ffff ffff ffff ffff ffff ffff
	feff fefd fefd fefd aa55 aa55 aa55 aa55
	eaf5 fafd fafd fefd 8840 a250 a854 aa54
	bf1f 2f07 8800 8055 ffff fefc e800 0a54
	8201 2000 8000 8010 aa54 2800 0000 0000
	0000 0000 0000 0000 0301 0000 0000 0200
	fefc fa70 8801 aa50 8a05 0a05 0201 0303
	ef57 af5f af5f bf7f ffff ffff ffff ffff
	c0c0 a2c0 8880 a280 0a15 0a15 8a15 0a15
	0000 0000 8000 2000 0800 0200 0800 2000
	0800 2200 8800 0000 2a54 2a55 2a55 2a57
	8800 2000 a0ff ffff 8000 2000 a8ff ffff
	0000 0000 0000 0001 ab41 a341 ab5f ffff
	8004 a804 8eff ffff 8010 a200 a0c0 e2c1
	8040 80c0 80c0 8000 0000 0000 0000 0000
	0000 0000 0000 0000 0301 0101 0000 0000
	ffff ffff ff7f 1f0f ffff ffff ffff ffff
	fefd feff feff ffff aa55 aa55 aa55 aad5
	feff feff fe7f fe7f aa54 aa55 aa55 aa54
	0000 0000 0000 0000 0000 0000 0000 0000
	0800 0000 0000 0000 0000 0000 0000 0000
	0000 0001 0205 0a05 8040 2040 e070 e040
	0000 0000 0000 0000 0307 0307 0707 0f07
	ffff ffff ffff ffff ffff fefc fefc fcfc
	8207 3f7f 7f7f 7f7f 8aff ffff ffff ffff
	08c0 faf8 fcfc feff 8800 2000 8800 2000
	0000 2000 0000 0000 2b57 2f57 2b55 2a54
	ffff ffff ffff ffff ffff ffff ffff ffff
	0b03 0307 0707 0f1f ffff ffff ffff ffff
	ffff ffff ffff ffff e0f1 f9f1 faf3 faf7
	8000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0707 0301 0000 0000 ffff ffff ff7f 3f1f
	ffff ffff ffff ffff eaf5 fafd feff ffff
	fe7d be7f be7d ffff aa54 aa54 aa54 aad5
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0201 0000 0000 0001 e040 0000 0000 0040
	0000 0000 0000 0000 0f07 0f07 0f0f 0f1f
	ffff ffff fffe fcfc f8f0 c280 0800 2200
	be7f 3e15 8a01 2205 ff5f af55 ab55 ab55
	feff ffff ffff bf7f 8000 2000 8800 a201
	8800 2000 0000 00f7 2854 2854 2854 28f4
	ff7f bf57 af5f 2f57 ffff ffff ffff ffff
	0f1f 0f07 0707 0707 ffff ffff ffff ffff
	ffff ffff fefd faf5 e2c4 8604 8844 a854
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0f03 0100 0000 0000
	ffff ff7f 0f07 0a05 ffff ffff ffff ff7f
	ffff ffff ffff ffff eaf5 fafd feff ffff
	8000 8040 a0d0 e8d4 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0200 0000 0000 0000 8000 0000 0000 0000
	0000 0000 0001 0305 0f1f 3f7c f8f0 8201
	e8c4 2a11 a840 a200 8800 2200 2005 2000
	8215 2e57 2a55 aa55 aa55 aa55 aa55 3a15
	fe7c f8f0 e840 a250 0307 2f1f 8f1f 2f0f
	ffff ffff ffff ffff f8fc fefc feff fef0
	ab57 2b15 0a55 0a01 ffff feff ea55 8040
	0301 0005 aa10 0805 ffff ff5f aa05 2000
	eaf5 ead5 aa55 aa41 8810 b810 2070 2040
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0204 0a10
	0000 0000 a805 2200 0000 0000 0040 2805
	0a05 0a10 2a41 a200 af57 a840 8844 0a10
	ffff ff7f 8f01 2004 ffff ffff ffff ff7f
	aed5 aad5 aad5 aad5 80c0 a85d ab55 aa55
	0000 0000 a054 aa55 0000 0000 0000 a055
	0000 0000 0000 0045 0000 0071 fa7c faf0
	0810 a240 0800 2001 0a04 0254 a850 8200
	0800 2200 8800 2200 8800 2200 8804 2a00
	8a05 2201 8a01 2001 a8d0 a0c4 8a54 a040
	2801 2000 8800 0250 8f01 8240 a011 2211
	af55 a040 8051 a815 e0c0 c240 8800 a200
	0840 2200 aa10 2214 2a05 2000 8800 2200
	8a00 2000 8000 2200 2a00 2200 8800 2200
	a214 2301 8000 2210 e040 80c0 6070 2010
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0001 0204 0814 2840 a200 8800 2200
	8800 2200 8800 2200 8b10 2240 0800 a200
	a855 2200 8800 2200 2040 a240 a810 2a04
	8810 2200 0845 a800 bf7f 3a11 3805 2301
	aa55 aa55 aa55 aa55 aa55 aa55 aa55 aa55
	aa55 aa55 aa55 aa55 aa55 aa55 aa75 fa7f
	ef75 bb5d bb5f bb5f f8f8 fafc f8fc fcfc
	8800 2201 8801 2201 0800 2200 0801 2204
	8800 2200 0850 2800 8010 0240 a810 2210
	8a01 2000 8800 2200 0800 a200 8800 2240
	a840 2200 a800 2200 8801 2a04 8805 2204
	8add aa45 8a14 2015 8800 a200 8800 a280
	8804 2804 8004 2204 8800 2200 8800 2200
	8800 0200 8840 0240 8800 2200 8800 2001
	8800 0240 8800 2200 b010 1810 b810 1810
	0000 0000 0000 0000 0000 0000 0000 0001
	0810 2240 8800 a200 8800 2200 8800 2201
	8801 2241 8a00 a204 8800 2200 8800 2200
	8800 2200 8800 2200 8a00 2201 8800 2200
	8a01 2200 0800 a200 0a05 aa75 aa05 2201
	aa55 aa55 aa55 aa55 aa55 aa55 aa55 aa55
	aa55 aa55 aa55 aa55 bf7f bf5f af47 8301
	bbd7 fbf1 f8fd feff fefc fefc fefe fefe
	8801 2241 2a05 2200 0040 8200 8800 0200
	0000 a204 a840 2200 0a50 8200 8800 2200
	a010 2200 8801 2200 8800 2200 2800 a240
	a800 2205 8205 2205 8a04 2254 a855 ab55
	3e15 2a75 ead5 aa55 82d5 ea75 aa75 aa75
	a85c aa50 a850 aa50 8800 2200 8800 2200
	0800 a200 8800 a200 8a01 2000 8801 2001
	0800 2200 8800 2200 8810 2810 8814 2804
	0000 0000 0000 0000 0204 0004 0810 0210
	8800 2200 8800 2200 8801 2001 8801 2200
	0804 2a00 0810 a200 8800 2200 8800 2200
	8800 2200 8800 2200 8800 2200 8801 2200
	0840 0240 a800 a210 8800 2200 8800 2200
	2a14 2200 8800 2200 aa00 8040 a804 2200
	a800 0000 0000 8050 0000 0000 0000 0001
	ff7f 3f1f 3f71 8200 feff feff ffff ff7f
	8800 2200 88f0 fafc a804 2200 aa11 0210
	8800 2200 0800 a200 8800 2200 8800 2200
	8800 2200 8800 2200 0840 2240 a800 221f
	8a01 2205 8205 befd a850 a854 a855 a955
	ff7f ffdd badd ba5d eaf5 ea75 ea75 ead5
	a850 aa50 a850 a250 8800 2a04 8a00 2200
	0800 0250 0800 0254 8011 2200 8800 2201
	0800 2055 aa55 aad5 8810 2040 a040 a040
	0000 0000 0000 0200 2800 2240 0840 0240
	8800 2200 8800 2200 8800 2200 8800 2200
	8800 2200 8800 2200 8800 2200 8800 2200
	8800 2200 8800 2200 8800 2200 8800 2200
	0850 2210 881c 2804 8800 2200 8800 2200
	8800 2200 8800 2200 8800 2200 8800 2200
	8a05 2200 8004 0f1f 0244 a818 9810 b2f0
	8800 2200 8800 2200 bf1f 2f1f 8f0f 2f07
	feff ffff ffff ffff 0090 e2f0 e0f0 f8fc
	8840 2200 a800 2210 8800 2200 8800 2200
	8800 2200 8800 2200 9f1f 2f0f 8f07 2305
	fefd fefd fefd fefd ab51 aa57 aa57 ae55
	ba5d ba55 aa55 aa55 ead5 ead5 aad5 aad5
	a857 bf7f ff7f ffff afff ffff ffff ffff
	80f5 ffff ffff ffff 8855 faf0 f8f8 f8fd
	aad5 aa55 2a55 2a55 a075 aa40 a040 a055
	0850 aa01 0201 0055 0840 8240 2800 2270
	8800 2200 8800 2200 8800 2200 8800 2200
	8800 2200 8800 2200 8800 2200 8800 2200
	8800 2200 8800 2200 8800 2200 8800 2200
	8a01 2001 8800 2200 8800 a2c0 a850 2834
	8800 2200 8800 2200 8800 2200 8800 2200
	bf7f ff7f ff7f 7f7f e8f0 e2f0 f0f0 fafc
	8800 2200 8800 2200 8f0f 2f1f 9f1f 3f7f
	ffff ffff fffd fefd fcfd fef5 aa55 ab57
	0050 e0f1 fafd eed5 0874 ae57 af5f be5d
	8800 22c0 b85c aa5c 8a04 2200 8800 2200
	fe7d 3e3d be1d 2e05 ae55 ae55 ae7d ee5d
	ab55 ab55 ab57 aa57 aa55 ab55 ab57 ab57
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff fefc
	ead5 eaf5 eaf5 aa15 bf5f bf5f bf5d aa51
	feff ffff ff75 aa40 e8f0 eae4 e064 a210
	8800 2200 8800 2200 8800 2200 8800 2200
	8800 2200 8800 2200 8800 2200 8800 2201
	8800 2005 8810 2200 8800 8200 8800 2200
	8800 2200 8800 2200 ba14 2a05 8607 2301
	0800 2210 0804 a200 8800 2201 8a04 2850
	7f7f ff7f 3f1f 3f1f fcfe ffff ffff f8fc
	8801 8fff ffff fe7d ffff ffff ebd7 af57
	feff ead7 abd5 aa55 ab55 aa55 ab75 faf5
	aed7 aa57 fa50 a0c1 be5f fa50 0000 0255
	b878 f87c 2f17 aa40 8800 2200 8840 2010
	8a05 2a05 0a1d 0a1d ae5d ae5d ae5d ee5d
	aa55 ae55 aa5d ba55 af5f ab5f bb77 ab77
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff fefc fefc fefc feff
	0a15 0a05 0a05 0255 a850 a850 a850 a854
	8040 0000 0800 0814 2211 2010 2010 2210
	8800 2200 0800 2200 8800 2200 8800 2200
	8800 2200 8800 2200 8a04 2a10 a840 0200
	0800 2200 8800 2015 8800 2200 8800 a800
	8800 2200 8800 2240 8801 2201 8801 2001
	88c0 aad5 aad5 aa55 2000 ba55 aa55 aa57
	8f1f af5f afff bf7f fafd fcfc faf5 faff
	3a55 0e07 0301 80c0 aa55 eaf5 fbff ff7f
	aa55 ab7f ffff ffff fb75 f8f0 e0c0 80c0
	8a14 0800 0000 0000 aa00 0000 0000 0000
	0004 0201 0001 0001 2010 2040 8880 a001
	3e15 2040 e0f4 feff ef55 0000 0000 80d0
	fa55 0a15 0a15 0a15 bf77 a347 a347 83c7
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	feff feff ffff aad5 af57 af57 ab57 ab55
	ffff ffff ffff aa55 e8f0 e2e0 e8e0 a240
	8800 2200 8800 2200 8800 2200 8800 2200
	8801 2204 8000 2810 0800 2204 8810 2240
	2040 2200 8800 2200 8800 2200 8800 2200
	8000 2a04 8a00 2211 8a07 2e0d 8a1d 3a7d
	aa55 aa55 aa55 aa55 ae55 af57 ab55 abff
	ffff ffff ffff ffff ffff ffff ffff ffff
	e0c0 e0f0 f8f0 f8f0 3f1f 0f07 0301 0001
	ffff ffff fefe fefc 8000 8000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0001 0001 0000 0000 8303 8343 8343 8343
	ffff ffff ffff ffff faff ffff ffff fbf7
	bafd ffff bfdf ff5f ef7f ffff af5f af5f
	ffff ffff ffff ffff ffff ffff ffff ffff

@dafu10x10
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0001 0000 0000 010f 7fff
	0000 002f ffff ffff 0000 00fd ffff ffff
	0000 0000 e0fc ffff 0000 0000 0000 00e0
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0107 071f
	071f 3fff fffc f3cf ffff f8c7 3fff ffff
	e82f fbfb fbfb fbfb 02ff ffff ffff ffff
	bf41 feff ffff ffff fcff 1fe3 fcff ffff
	00d0 fcff 7fd2 ffff 0000 00c0 f0f8 5efe
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0103 0f1f 3f7e 5f7e f9f3 cf9f 7fff
	3f7f ffff ffff ffff ffff ffff ffff ffff
	f9fb fbf9 fdf9 fdfd ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff feff fefe
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0001 002f 1f1f 1f1f
	e907 ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ffff ffff ffff ffff
	fdfd fdfd fcff fd45 ffff ffff ffff ed37
	ffff ffff ffff b76c ffff ffff ffff ff0b
	ffff ffff ffff ffff fefc fcfc f8fc f8f8
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 1f1f 1f0f 0f07 0703
	ffff ffff ffff ffff ffff ffff fffe fdf5
	ffff fceb 8fbf 7fff f48b 7fff ffff ffff
	bffe fefa f8fc fdff ffff 7f3f 3f7f bfff
	ffff ffff ffff ffff f8ff ffff ffff ffff
	7fd7 ffff ffff ffff f0f0 f0e0 e0e0 e0e0
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0301 0100 0000 0000
	ffff fffc 7d33 3f1f ef9f 7fff ffff ffff
	ffff ffff ffff f4cb ffff ffff e807 ffff
	ffff ffa0 00c0 0197 ffff 5007 1f03 5eff
	ffff a5ff ff6d bfff ffff 4de8 ff7f 6fff
	ffff ffbf a7fe fefe f0e0 f0e0 f0e0 b0d0
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	1f0f 0f0f 0f0e 0e12 fefa f5cf bfff ffff
	3fff ffff ffff ffff ffff ffff ffff ffff
	f8e0 e0c0 e040 c040 7f7f 5f2f 7b1b 0f0f
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff fcfd fbf5 f9d4 50f0 f0e0 f0f0 e060
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	1a1a 150f 0d07 1100 7fff ffff fdff ffe1
	ffff ffff baff ff55 ffff ffaa fdff fe00
	c040 d708 f0eb a800 0fa6 7f2f 3fd0 021a
	d7bf fff7 086a b8b0 feff e914 a000 0000
	ab20 e078 0000 0000 e0c0 d6e1 4084 0204
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0402 010a 0200 0000 7876 39b0 5078 9018
	0892 71a9 2112 1210 aa00 ff01 7692 0000
	a01e 3628 8488 4484 a5a0 0000 0080 8000
	2003 070d 3815 0260 feff 7b69 9e60 0000
	90e0 8080 0000 0000 c004 8020 8890 8888
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0300 0000 0000 0000 2848 8008 4428 0c04
	1211 1201 1d14 2a29 1200 0016 dd55 22a9
	4084 44ca 8a0d 5800 0000 0800 a02e d105
	1000 0000 0080 6a11 0000 0000 0000 8865
	0100 0100 0101 005e 2080 2040 4000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0600 0a05 0303 0300
	50a0 8040 8000 8000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	ad00 0000 0000 0000 510a 0000 0000 0000
	2214 0002 0200 0406 0000 0000 0000 0080
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0021 010f 0407 0812 2e5c de3e
	4000 c060 f0f0 f878 0000 0000 0000 0000
	0000 0000 0000 0000 0000 502d 0200 157f
	0040 a000 0000 e0f8 0000 0000 0000 0000
	060f 0f1f 1737 336b a01c e3f0 feff ffff
	0000 407a 05c0 f0fc 0000 0000 807c 0300
	0000 0000 0000 a05a 0000 0000 0000 0004
	0000 0000 0000 030c 0001 0514 53a7 0f3f
	265c 5df9 f3e7 c7cf fbfd fbfb fbfb fbfb
	7c7e 7fbf bfff bfff 0000 0090 c0e0 f0f8
	0101 0101 0001 0020 7fc8 ff1b c6f0 7f78
	fc5c ec08 b858 30e0 0108 0001 0103 0707
	6b5b dbdf bbbf bb7f ffff ffff ffff ffff
	fefe fcfc f9f3 f3f7 6079 fffe fcfc f9f3
	0540 823f 7fff ffff d02c 03f8 feff ffff
	3040 800e 3f7f ffff 7f7f 7fff 7f7f 7f7f
	9fdf 9f9f df9f 9fdf fbfb fbf3 fbfb fbfb
	efff fff7 fffd ffff fefe ffff ffff ff7f
	0000 80e0 f0fc ffff 1f02 0000 0001 01e1
	c000 00a8 b050 590b 0f1f 1e7d 7dff ffff
	7f7f ffff ffff ffff ffff ffff ffff ffff
	e7ef cfdf 9f3f 7f3f f3e7 efcf dfbf bf3f
	ffff ffff ffff ffff fffe fcf8 f0f0 e0c0
	ffff ffff ffff ffff bfbf bfbf dfdf dfcf
	9fcf 9fcf dfcf dfcf f7fb fbf7 fbfb fbfb
	ffff ffff ffff ffff ffd7 f7fd feff ffff
	ffff ffff 7f9e e8e0 ffff fff5 8000 0001
	4f47 66a4 7056 4b43 fffe 8001 015f ffff
	ffbf 1f7f ffff ffff fefe fcfe fdf9 fbfb
	7fff feff fefe fcfe 7f7f 7f7f ffff ffff
	ffff fffe fefc f8f8 8183 070f 1f3f 3f7f
	ffff ffff 7f3f 9f8f efef eff7 f7f7 f7f7
	dfcf efdf cfff cfef fbfb fbf9 fdfd fbfc
	ffff fffe f4c0 8000 fffc e080 0000 0000
	8000 0000 0000 0000 0506 0802 0300 0000
	4925 2365 a2b2 1191 ffff ffff ff05 0000
	ffff ffff ff7f 0307 fbfb ffff ffff ffff
	fcfd fcfe fdfd fdfd ffff ffff ffff ffff
	f0e0 e1c3 8387 0f1f ffff ffff ffff fffe
( GUI Terminal )

( devices )

|00 @System     [ &vector $2 &pad    $6 &r      $2 &g     $2 &b      $2 ]
|20 @Screen     &vector $2 &width   $2 &height $2 &auto  $1 &pad   $1 &x     $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller [ &vector $2 &button $1 &key    $1 ]

( variables )

|0000

@buffer $80

( init )

|0100 ( -> )

	( theme ) 
	#0f0f .System/r DEO2 
	#0ff0 .System/g DEO2 
	#0fff .System/b DEO2

	( vectors ) 
	;on-button .Controller/vector DEO2

	( AUTO-Y-ADDR )
	#06 .Screen/auto DEO

	#01 ;draw-input JSR2

BRK

@on-button ( -> )

	.Controller/key DEI
	DUP ,&no-null JCN
		POP BRK
		&no-null
	DUP #0d NEQ ,&no-enter JCN
		#00 ;draw-input JSR2
		;validate JSR2
		;buffer #0080 ;mclr JSR2
		#01 ;draw-input JSR2
		&no-enter
	DUP #08 NEQ ,&no-backspace JCN
		#00 ;draw-input JSR2
		;buffer ;spop JSR2
		#01 ;draw-input JSR2
		&no-backspace
	DUP STHk #1f GTH STHr #7b LTH #0101 NEQ2 ,&no-valid JCN
	;buffer ;slen JSR2 #007f GTH2 ,&no-valid JCN
		STHk ;buffer STHr ;sput JSR2
		#01 ;draw-input JSR2
		&no-valid
	POP

BRK

@validate ( -- )

	#0010 .Screen/x DEO2
	.Screen/height DEI2 #0040 SUB2 .Screen/y DEO2

	( clear )
	#8000
	&loop
		#30 #00 ;draw-char JSR2
		INC GTHk ,&loop JCN
	POP2
	#0010 .Screen/x DEO2

	( respond )
	;strings/you-said #02 ;draw-str JSR2
	LIT 22 #02 ;draw-char JSR2
	;buffer #03 ;draw-str JSR2
	LIT 22 #02 ;draw-char JSR2
	LIT '. #02 ;draw-char JSR2

JMP2r

@draw-input ( color -- )

	STH
	#0010 .Screen/x DEO2
	.Screen/height DEI2 #0020 SUB2 .Screen/y DEO2

	( marker ) LIT '> #03 ;draw-char JSR2

	;buffer STHr ;draw-str JSR2

JMP2r

@draw-str ( str* color -- )

	STH
	&while
		LDAk STHkr ,draw-char JSR
		INC2 LDAk ,&while JCN
	POP2
	POPr

JMP2r

@draw-char ( char color -- )

	SWP
	[ #20 SUB #00 SWP #40 SFT2 ;font ADD2 ] .Screen/addr DEO2
	.Screen/sprite DEOk DEO
	.Screen/y DEI2 #0010 SUB2 .Screen/y DEO2
	.Screen/x DEI2 #0008 ADD2 .Screen/x DEO2

JMP2r

( utils )

@slen ( str* -- len* )

	DUP2 ,scap JSR SWP2 SUB2

JMP2r

@scap ( str* -- str-end* )

	( clamp ) LDAk #00 NEQ JMP JMP2r
	&while INC2 LDAk ,&while JCN

JMP2r

@sput ( str* char -- )

	ROT ROT ,scap JSR STA

JMP2r

@spop ( str* -- )

	( clamp ) LDAk #00 NEQ JMP JMP2r
	#00 ROT ROT ,scap JSR #0001 SUB2 STA

JMP2r

@mclr ( addr* len* -- )

	OVR2 ADD2 SWP2
	&loop
		STH2k #00 STH2r STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2

JMP2r

@strings
	&you-said "You 20 "said 20 $1

@font ( terminus01x02 )
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 183c 3c3c 1818 1800 1818 0000 0000
	0066 6666 2400 0000 0000 0000 0000 0000
	0000 006c 6cfe 6c6c 6cfe 6c6c 0000 0000
	1818 7cc6 c2c0 7c06 0686 c67c 1818 0000
	0000 0000 c2c6 0c18 3060 c686 0000 0000
	0000 386c 6c38 76dc cccc cc76 0000 0000
	0030 3030 6000 0000 0000 0000 0000 0000
	0000 0c18 3030 3030 3030 180c 0000 0000
	0000 3018 0c0c 0c0c 0c0c 1830 0000 0000
	0000 0000 0066 3cff 3c66 0000 0000 0000
	0000 0000 0018 187e 1818 0000 0000 0000
	0000 0000 0000 0000 0018 1818 3000 0000
	0000 0000 0000 00fe 0000 0000 0000 0000
	0000 0000 0000 0000 0000 1818 0000 0000
	0000 0000 0206 0c18 3060 c080 0000 0000
	0000 386c c6c6 d6d6 c6c6 6c38 0000 0000
	0000 1838 7818 1818 1818 187e 0000 0000
	0000 7cc6 060c 1830 60c0 c6fe 0000 0000
	0000 7cc6 0606 3c06 0606 c67c 0000 0000
	0000 0c1c 3c6c ccfe 0c0c 0c1e 0000 0000
	0000 fec0 c0c0 fc06 0606 c67c 0000 0000
	0000 3860 c0c0 fcc6 c6c6 c67c 0000 0000
	0000 fec6 0606 0c18 3030 3030 0000 0000
	0000 7cc6 c6c6 7cc6 c6c6 c67c 0000 0000
	0000 7cc6 c6c6 7e06 0606 0c78 0000 0000
	0000 0000 1818 0000 0018 1800 0000 0000
	0000 0000 1818 0000 0018 1830 0000 0000
	0000 0006 0c18 3060 3018 0c06 0000 0000
	0000 0000 007e 0000 7e00 0000 0000 0000
	0000 0060 3018 0c06 0c18 3060 0000 0000
	0000 7cc6 c60c 1818 1800 1818 0000 0000
	0000 007c c6c6 dede dedc c07c 0000 0000
	0000 1038 6cc6 c6fe c6c6 c6c6 0000 0000
	0000 fc66 6666 7c66 6666 66fc 0000 0000
	0000 3c66 c2c0 c0c0 c0c2 663c 0000 0000
	0000 f86c 6666 6666 6666 6cf8 0000 0000
	0000 fe66 6268 7868 6062 66fe 0000 0000
	0000 fe66 6268 7868 6060 60f0 0000 0000
	0000 3c66 c2c0 c0de c6c6 663a 0000 0000
	0000 c6c6 c6c6 fec6 c6c6 c6c6 0000 0000
	0000 3c18 1818 1818 1818 183c 0000 0000
	0000 1e0c 0c0c 0c0c cccc cc78 0000 0000
	0000 e666 666c 7878 6c66 66e6 0000 0000
	0000 f060 6060 6060 6062 66fe 0000 0000
	0000 c6ee fefe d6c6 c6c6 c6c6 0000 0000
	0000 c6e6 f6fe dece c6c6 c6c6 0000 0000
	0000 7cc6 c6c6 c6c6 c6c6 c67c 0000 0000
	0000 fc66 6666 7c60 6060 60f0 0000 0000
	0000 7cc6 c6c6 c6c6 c6d6 de7c 0c0e 0000
	0000 fc66 6666 7c6c 6666 66e6 0000 0000
	0000 7cc6 c660 380c 06c6 c67c 0000 0000
	0000 7e7e 5a18 1818 1818 183c 0000 0000
	0000 c6c6 c6c6 c6c6 c6c6 c67c 0000 0000
	0000 c6c6 c6c6 c6c6 c66c 3810 0000 0000
	0000 c6c6 c6c6 d6d6 d6fe ee6c 0000 0000
	0000 c6c6 6c7c 3838 7c6c c6c6 0000 0000
	0000 6666 6666 3c18 1818 183c 0000 0000
	0000 fec6 860c 1830 60c2 c6fe 0000 0000
	0000 3c30 3030 3030 3030 303c 0000 0000
	0000 0080 c0e0 7038 1c0e 0602 0000 0000
	0000 3c0c 0c0c 0c0c 0c0c 0c3c 0000 0000
	1038 6cc6 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 00ff 0000
	3030 1800 0000 0000 0000 0000 0000 0000
	0000 0000 0078 0c7c cccc cc76 0000 0000
	0000 e060 6078 6c66 6666 667c 0000 0000
	0000 0000 007c c6c0 c0c0 c67c 0000 0000
	0000 1c0c 0c3c 6ccc cccc cc76 0000 0000
	0000 0000 007c c6fe c0c0 c67c 0000 0000
	0000 386c 6460 f060 6060 60f0 0000 0000
	0000 0000 0076 cccc cccc cc7c 0ccc 7800
	0000 e060 606c 7666 6666 66e6 0000 0000
	0000 1818 0038 1818 1818 183c 0000 0000
	0000 0606 000e 0606 0606 0606 6666 3c00
	0000 e060 6066 6c78 786c 66e6 0000 0000
	0000 3818 1818 1818 1818 183c 0000 0000
	0000 0000 00ec fed6 d6d6 d6c6 0000 0000
	0000 0000 00dc 6666 6666 6666 0000 0000
	0000 0000 007c c6c6 c6c6 c67c 0000 0000
	0000 0000 00dc 6666 6666 667c 6060 f000
	0000 0000 0076 cccc cccc cc7c 0c0c 1e00
	0000 0000 00dc 7666 6060 60f0 0000 0000
	0000 0000 007c c660 380c c67c 0000 0000
	0000 1030 30fc 3030 3030 361c 0000 0000
	0000 0000 00cc cccc cccc cc76 0000 0000
	0000 0000 0066 6666 6666 3c18 0000 0000
	0000 0000 00c6 c6d6 d6d6 fe6c 0000 0000
	0000 0000 00c6 6c38 3838 6cc6 0000 0000
	0000 0000 00c6 c6c6 c6c6 c67e 060c f800
	0000 0000 00fe cc18 3060 c6fe 0000 0000
	0000 0e18 1818 7018 1818 180e 0000 0000
	0000 1818 1818 0018 1818 1818 0000 0000
	0000 7018 1818 0e18 1818 1870 0000 0000
( GUI Labels )

|00 @System &vector $2 &pad $6 &r $2 &g $2 &b $2
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1

|0000

@center &x $2 &y $2

|0100

	( theme )
	#a0dc .System/r DEO2
	#a0dc .System/g DEO2
	#a0dc .System/b DEO2

	( find screen center )
	.Screen/width DEI2 #01 SFT2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 .center/y STZ2

	( dashed line )
	#02 .Screen/auto DEO
	#0000 .Screen/y DEO2
	.center/x LDZ2 .Screen/x DEO2
	.Screen/height DEI2 #0000
	&ver
		DUP #01 AND .Screen/pixel DEO
		INC2 GTH2k ,&ver JCN
	POP2 POP2

	( left )
	.center/x LDZ2 .Screen/x DEO2
	.center/y LDZ2 #0018 SUB2 .Screen/y DEO2
	;left-txt ,draw-uf2 JSR

	( center )
	.center/x LDZ2 .Screen/x DEO2
	.center/y LDZ2 .Screen/y DEO2
	;center-txt ,draw-uf2-center JSR

	( right )
	.center/x LDZ2 .Screen/x DEO2
	.center/y LDZ2 #0018 ADD2 .Screen/y DEO2
	;right-txt ,draw-uf2-right JSR

BRK

@get-uf2-width ( text* -- width* )

	LIT2r 0000
	&while
		LDAk #0000 ROT ;font ADD2 LDA STH2 ADD2r
		INC2 LDAk ,&while JCN
	POP2
	STH2r

JMP2r

@draw-uf2-center ( text* -- )

	DUP2 ,get-uf2-width JSR #01 SFT2 STH2
	.Screen/x DEI2k STH2r SUB2 ROT DEO2
	,draw-uf2 JMP

@draw-uf2-right ( text* -- )

	DUP2 ,get-uf2-width JSR STH2
	.Screen/x DEI2k STH2r SUB2 ROT DEO2

@draw-uf2 ( text* -- )

	#15 .Screen/auto DEO
	&while
		LDAk #20 SUB #00 SWP
			DUP2 #50 SFT2 ;font/glyphs ADD2 .Screen/addr DEO2
			;font ADD2 LDA STHk #00 SWP .Screen/x DEI2 ADD2
		#01 .Screen/sprite DEOk STHr #08 LTH ,&thin JCN DEOk &thin POP2
		.Screen/x DEO2
		INC2 LDAk ,&while JCN
	POP2

JMP2r

@left-txt "Left 20 "Aligned 20 "Label $1
@center-txt "Center 20 "Aligned 20 "Label $1
@right-txt "Right 20 "Aligned 20 "Label $1

@font ( venice14 )
	0505 0809 080c 0d05 0707 0a09 0609 0608
	0808 0808 0908 0808 0808 0505 0708 0709
	000d 0a08 0b0a 090a 0c08 070c 090e 0c09
	0a09 0c08 090b 0a0d 0d0a 0906 0806 0809
	0509 0807 0a07 0708 0906 0609 050f 0a08
	0908 0707 060a 090e 0a09 0807 0507 0800
	0d0d 080a 0c09 0b09 0909 0909 0907 0707
	0707 0606 0606 0a08 0808 0808 0a0a 0a0a
	0000 0000 0000 000a 0000 0005 0000 1009
	0000 0000 0000 0000 0000 0000 0000 0c08
	0905 0000 0000 000a 0a00 080d 0d09 0e0c
	090c 0808 0505 0000 0907 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	&glyphs ( starting at #20 )
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3030 3030 3030 3000 3030 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 2424 2400 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 1212 7f24 24fe 4848 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 1038 5450 7038 1c14 5438 1000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3748 494b 360d 1a32 6241 0000 0000
	0000 c0c0 8000 0080 4040 4080 0000 0000
	0000 1c22 261c 1835 6343 463c 0000 0000
	0000 0000 0000 e090 1020 8060 0000 0000
	0000 2020 2000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0008 1030 2060 6060 6020 3010 0800 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0020 1018 080c 0c0c 0c08 1810 2000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0012 0c3f 0c12 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0008 0808 7f08 0808 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 3030 1020 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 7f00 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 3030 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0206 040c 0818 1030 2060 4000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3c66 6666 6666 6666 663c 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0818 3818 1818 1818 183c 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3c46 8606 0c18 3060 c2fc 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 7e8c 1830 7c06 4686 8c78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 040c 1c2c 4c8d fe0c 0c1e 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 7c62 6078 0c06 0606 4c38 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 1c22 606c 7666 6666 663c 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 7e86 060c 0c18 1830 3030 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3c66 6666 3c66 6666 663c 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3c66 6666 666e 3606 4438 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0030 3000 0000 3030 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0030 3000 0000 3030 1020 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0c18 3060 3018 0c00 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 7e00 7e00 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 6030 180c 1830 6000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3c46 0606 0c18 1000 1010 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0001 0200 0001 0306 7f98 30e0 0000 0000
	00c0 6060 e0e0 6060 e060 6038 0000 0000
	0010 7eb3 b333 3e31 3131 31ff 0000 0000
	0000 0000 0000 0080 8080 8000 0000 0000
	0000 7cc2 c2c4 c0c0 c0c2 c478 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0010 7fb1 b030 3030 3030 30ff 0000 0000
	0000 0080 c0c0 c0c0 c0c0 8000 0000 0000
	0010 7fb0 b030 3e30 3030 30ff 0000 0000
	0000 8080 0000 0000 0040 8000 0000 0000
	0010 7fb0 b030 3e30 3030 30e0 0000 0000
	0000 8080 0000 0000 0000 0000 0000 0000
	0000 3f61 c2c0 cfc3 c3c7 cb73 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0000 71b1 b131 7fb1 3131 31e1 0000 0000
	00e0 8080 8080 8080 8090 a0c0 0000 0000
	0000 7898 9818 1818 1819 1a1c 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 7898 9818 1818 1818 1818 1810 20c0
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 70b1 b336 3c38 3c36 33e1 0000 0000
	0000 c080 0000 0000 0010 20c0 0000 0000
	0000 3860 6060 6060 6060 61fe 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0000 70b8 bd2e 2420 2020 20c0 0000 0000
	0000 70e0 6060 6060 6064 6870 0000 0000
	0000 70b8 bc2e 2723 2120 20c0 0000 0000
	0000 6040 4040 40c0 c0c0 4040 0000 0000
	0000 3c46 c3c3 c3c3 c3c2 4438 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 7fb1 b131 313f 3030 30e0 0000 0000
	0000 0080 8080 8000 0000 0000 0000 0000
	0000 3c46 c3c3 c3c3 c3d3 4a3c 0402 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0010 7fb1 b131 313f 3633 31e0 0000 0000
	0000 0080 8080 8000 0000 90e0 0000 0000
	0000 7cc2 e470 381c 4e86 c67c 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 7f8c 8c0c 0c0c 0c0c 0c38 0000 0000
	0000 8000 0000 0000 0000 0000 0000 0000
	0000 61e1 6161 6161 6365 6931 0000 0000
	0000 8080 8080 8080 80a0 c080 0000 0000
	0000 61e3 6161 6163 666c 7870 0000 0000
	0000 0080 8080 8000 0000 0000 0000 0000
	0000 60e0 6060 6266 6e76 6747 0000 0000
	0000 2070 3030 3030 60c0 8000 0000 0000
	0000 60b0 980d 0707 0d18 3060 0000 0000
	0000 3060 c080 0000 80c8 6830 0000 0000
	0000 61e1 6161 6161 6163 6539 0101 021c
	0000 8080 8080 8080 8080 8080 8000 0000
	0000 7f83 860c 1830 60c0 c1fe 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0078 6060 6060 6060 6060 6060 7800 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 4060 2030 1018 080c 0406 0200 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0078 1818 1818 1818 1818 1818 7800 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0010 2844 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 00ff 0000 0000
	0000 0000 0000 0000 0000 0080 0000 0000
	0040 2010 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 007e c6c6 c6ce d766 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0070 c0c0 c0dc e6c6 c6c6 ccf8 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 007c c4c0 c0c4 c870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0003 0606 067e c6c6 c6ce d667 0000 0000
	0080 0000 0000 0000 0040 8000 0000 0000
	0000 0000 007c c4c8 d0e2 c478 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	001c 3030 3078 3030 3030 3030 3030 20c0
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 007e c6c6 c6ce d666 0604 0830
	0000 0000 0000 0000 0000 0000 0000 0000
	0070 c0c0 c0ce d6e6 c6c6 c7c6 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0000 2040 0060 e060 6064 6870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 1020 0030 70b0 3030 3030 3020 4080
	0000 0000 0000 0000 0000 0000 0000 0000
	0070 c0c0 c0d8 e4c4 f8d8 cdc6 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0070 c0c0 c0c0 c0c0 c0c8 d0e0 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0067 eb73 6363 6363 0000 0000
	0000 0000 0038 5898 181a 1c18 0000 0000
	0000 0000 0067 eb73 6363 6363 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0000 0000 007c c6c6 c6c6 cc78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 006e f363 6363 667c 6060 60c0
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 007e c6c6 c6ce d666 0606 0706
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 006c f060 6060 7060 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0078 c4c0 780c 8c78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0020 60f8 6060 6064 6870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0063 e363 6367 6b33 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0000 0000 0042 e763 6264 6870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0042 e763 676b 7363 0000 0000
	0000 0000 0010 3818 1020 4080 0000 0000
	0000 0000 0061 b21c 0c16 2341 0000 0000
	0000 0000 0000 0000 0000 4080 0000 0000
	0000 0000 0063 e363 6367 6b33 0302 0438
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 007e 860c 1830 61fe 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 1830 3030 3060 3030 3030 3018 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 2020 2020 2020 2020 2020 2020 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3018 1818 180c 1818 1818 1830 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	4c00 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0001 0200 0001 0306 7f98 30e0 0000 0000
	00c0 6060 e0e0 6060 e060 6038 0000 0000
	0001 0200 0001 0306 7f98 30e0 0000 0000
	c0c0 6060 e0e0 6060 e060 6038 0000 0000
	0000 7cc2 c2c4 c0c0 c0c2 c478 1010 2000
	0000 0000 0000 0000 0000 0000 0000 0000
	0010 7fb0 b030 3e30 3030 30ff 0000 0000
	0000 8080 0000 0000 0040 8000 0000 0000
	1300 70b8 bc2e 2723 2120 20c0 0000 0000
	0000 6040 4040 40c0 c0c0 4040 0000 0000
	0000 3c46 c3c3 c3c3 c3c2 4438 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 61e1 6161 6161 6365 6931 0000 0000
	0000 8080 8080 8080 80a0 c080 0000 0000
	0008 1000 007e c6c6 c6ce d766 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0010 0800 007e c6c6 c6ce d766 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	1028 4400 007e c6c6 c6ce d766 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0000 2400 007e c6c6 c6ce d766 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0032 4c00 007e c6c6 c6ce d766 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	1824 2418 007e c6c6 c6ce d766 0000 0000
	0000 0000 0000 0000 0080 0000 0000 0000
	0000 0000 007c c4c0 c0c4 c870 1010 2000
	0000 0000 0000 0000 0000 0000 0000 0000
	0008 1000 007c c4c8 d0e2 c478 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0020 1000 007c c4c8 d0e2 c478 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	1028 4400 007c c4c8 d0e2 c478 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 4800 007c c4c8 d0e2 c478 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0020 4000 0060 e060 6064 6870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0040 2000 0060 e060 6064 6870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	2050 8800 0060 e060 6064 6870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 9000 0060 e060 6064 6870 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0019 2600 0067 eb73 6363 6363 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0008 1000 007c c6c6 c6c6 cc78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0020 1000 007c c6c6 c6c6 cc78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	1028 4400 007c c6c6 c6c6 cc78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 2400 007c c6c6 c6c6 cc78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0032 4c00 007c c6c6 c6c6 cc78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0008 1000 0063 e363 6367 6b33 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0010 0800 0063 e363 6367 6b33 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0814 2200 0063 e363 6367 6b33 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0000 2400 0063 e363 6367 6b33 0000 0000
	0000 0000 0000 0000 0040 8000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 1e33 3333 3631 3131 33e6 0000 0000
	0000 0000 0000 0000 8080 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0010 2040 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0001 0200 0001 0306 7f98 30e1 0000 0000
	00c0 7f61 e0e0 7c60 e060 61fe 0000 0000
	0000 3d42 c7cb cbd3 d3e2 44b8 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 007d c6c6 c6cf d663 0000 0000
	0000 0000 00e0 2040 8010 20c0 0000 0000
	0000 0000 007c c6ce d6e6 cc78 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0808 0008 1830 6060 623c 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 6060 0060 6060 6060 6060 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0009 1224 4824 1209 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0024 1209 0409 1224 0000 0000
	0000 0000 0000 0000 8000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0001 0200 0001 0306 7f98 30e0 0000 0000
	00c0 6060 e0e0 6060 e060 6038 0000 0000
	0001 0200 0001 0306 7f98 30e0 0000 0000
	00c0 6060 e0e0 6060 e060 6038 0000 0000
	4c00 3c46 c3c3 c3c3 c3c2 4438 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3f47 c3c3 c3c3 c3c3 473b 0000 0000
	0000 f808 0000 e000 0004 08f0 0000 0000
	0000 0000 007d c6c6 c6c7 ce79 0000 0000
	0000 0000 00e0 2040 8010 20c0 0000 0000
	0000 0000 0000 7f00 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 7f00 0000 0000 0000 0000
	0000 0000 0000 e000 0000 0000 0000 0000
	0000 2448 6c6c 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3636 1224 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 2040 6060 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 3030 1020 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 2400 0063 e363 6367 6b33 0302 0438
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0070 98ce 6438 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000
( bunnymark.tal )

( November 2021, Kira Oakley )
( March 2022, Devine Lu Linvega )

|00 @System  &vector $2 &pad $6 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen  &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr  $2 &pixel $1 &sprite $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &wheel $1
|c0 @Date &year $2 &month $1 &day $1 &hour $1 &minute $1 &second $1 &dotw $1 &doty $2 &isdst $1

|0000

	@frames $2
	@last $1

|0100 ( -> )

	( set system colors )
	#2ce9 .System/r DEO2
	#01c0 .System/g DEO2
	#2ce5 .System/b DEO2

	( interrupts )
	;on-frame .Screen/vector DEO2

	( draw "FPS:" and "BUNNIES:" and instructions labels )
	.Screen/width DEI2 #0046 SUB2 #0008 ;text/fps #42 ;draw-str JSR2
	#0004 #0008 ;text/bunnies #42 ;draw-str JSR2
	.Screen/width DEI2 #01 SFT2 #0050 SUB2 #0008 ;text/instructions #43 ;draw-str JSR2
	#0028 #0008 #0000 ;draw-dec JSR2

	( seed prng )
	#04 ;rand/a STA

BRK

@on-frame ( -> )

	( frames++ ) 
	.frames LDZ2k INC2 ROT STZ2
	.Date/second DEI .last LDZ EQU ,&post-fps-update JCN
	( fps update )
	( update last-secs ) .Date/second DEI .last STZ
	( update fps label ) .Screen/width DEI2 #002b SUB2 #0008 .frames LDZ2 ;draw-dec JSR2
	( reset frames counter ) #0000 .frames STZ2

	&post-fps-update
		( mouse input to add/remove bunnies )
		.Mouse/state DEI #01 EQU ,&add JCN
		.Mouse/state DEI #01 GTH ,&remove JCN
		,&done JMP
	&add
		;add-bunny JSR2 ,&done JMP
	&remove
		;remove-bunny JSR2 ,&done JMP
	&done

	( loop from 0 to ;sprite/length to make all ;draw-bunny calls )
	[ ;sprite/length LDA2 ] #0000
	&loop
		EQU2k ,&bail JCN
		DUP2 ,draw-bunny JSR
		INC2 ,&loop JMP
	&bail
	POP2 POP2

BRK

@draw-bunny ( idx -- )

	( compute the offset to the beginning of this bunny's data )
	[ #30 SFT2 ;sprite/array ADD2 ]

	( clear the old sprite location )
		( top )
	[ LDA2k ] #05 SFT2 .Screen/x DEO2
	[ INC2k INC2 LDA2 ] #05 SFT2 .Screen/y DEO2
	#00 ;draw-sprite JSR2

	( move the sprite by its velocity )
	[ LDA2k ] [ OVR2 #0004 ADD2 LDA2 ] ADD2 OVR2 STA2
	[ INC2k INC2 LDA2 ] [ OVR2 #0006 ADD2 LDA2 ] ADD2 OVR2 INC2 INC2 STA2

	( check for right wall collision + bounce x )
	[ DUP2 #0004 ADD2 LDA2 ] #0f SFT2 #0001 EQU2 ,&skip-max-x JCN
	[ LDA2k ] #05 SFT2 #0008 ADD2 [ .Screen/width DEI2 ] LTH2 ,&skip-max-x JCN
	[ DUP2 #0004 ADD2 LDA2 ] #ffff MUL2 [ OVR2 #0004 ADD2 STA2 ]
	&skip-max-x
	( check for left wall collision + bounce x )
	[ LDA2k ] #0f SFT2 #0000 EQU2 ,&skip-min-x JCN
	[ DUP2 #0004 ADD2 LDA2 ] #ffff MUL2 [ OVR2 #0004 ADD2 STA2 ]
	&skip-min-x
	( check for bottom wall collision + bounce y )
	[ DUP2 #0006 ADD2 LDA2 ] #0f SFT2 #0001 EQU2 ,&skip-max-y JCN
	[ INC2k INC2 LDA2 ] #05 SFT2 #0008 ADD2 [ .Screen/height DEI2 ] LTH2 ,&skip-max-y JCN
	[ DUP2 #0006 ADD2 LDA2 ] #ffff MUL2 [ OVR2 #0006 ADD2 STA2 ]
	,&skip-gravity JMP
	&skip-max-y
	( check for top wall collision + bounce x )
	[ INC2k INC2 LDA2 ] #0f SFT2 #0000 EQU2 ,&skip-min-y JCN
	[ DUP2 #0006 ADD2 LDA2 ] #ffff MUL2 [ OVR2 #0006 ADD2 STA2 ]
	,&skip-gravity JMP
	&skip-min-y

	( apply gravity )
	[ DUP2 #0006 ADD2 LDA2 ] #0004 ADD2 OVR2 #0006 ADD2 STA2
	&skip-gravity

	( draw the sprite )
	( top )
	[ LDA2k ] #05 SFT2 .Screen/x DEO2
	[ INC2 INC2 LDA2 ] #05 SFT2 .Screen/y DEO2
	#85 ,draw-sprite JSR

JMP2r

@draw-sprite ( color -- )

	#15 .Screen/auto DEO
	;bunny-chr .Screen/addr DEO2
	.Screen/sprite DEO
	#00 .Screen/auto DEO

JMP2r

@add-bunny ( -- )

	;sprite/length LDA2
	( cap bunny count at 65535 )
	DUP2 #ffff EQU2 ,&bail JCN
	( compute the offset to the beginning of this new bunny's data )
	DUP2 #30 SFT2 ;sprite/array ADD2
	( populate the new bunny's x/y/xvel/yvel with random values )
	#00 [ ;rand JSR2 ] OVR2 STA2
	[ ;rand JSR2 #1f AND ] [ ;rand JSR2 ] OVR2 INC2 INC2 STA2
	#00 [ ;rand JSR2 #7f AND ] OVR2 #0004 ADD2 STA2
	#00 [ ;rand JSR2 #7f AND ] OVR2 #0006 ADD2 STA2
	( pop ptr to bunny data ) POP2
	( write new increased array length )
	INC2 DUP2 ;sprite/length STA2
	( update label )
	STH2k #0028 #0008 STH2r ;draw-dec JSR2
	&bail
	( pop sprite/length ) POP2

JMP2r

@draw-str ( x* y* text* color -- )

	#01 .Screen/auto DEO
	STH
	SWP2 .Screen/y DEO2
	SWP2 .Screen/x DEO2
	&loop
		LDAk #20 SUB #00 SWP #30 SFT2 ;font ADD2 .Screen/addr DEO2
		STHkr .Screen/sprite DEO
		INC2 LDAk ,&loop JCN
	POP2
	STHr POP
	#00 .Screen/auto DEO

JMP2r

@draw-dec ( x* y* num* -- )

	#01 .Screen/auto DEO
	SWP2 .Screen/y DEO2
	SWP2 .Screen/x DEO2
	#2710 DIV2k DUP2 NIP ,&digit JSR MUL2 SUB2
	#03e8 DIV2k DUP2 NIP ,&digit JSR MUL2 SUB2
	#0064 DIV2k DUP2 NIP ,&digit JSR MUL2 SUB2 NIP
	#0a DIVk DUP ,&digit JSR MUL SUB
	,&digit JSR
	#00 .Screen/auto DEO

JMP2r
	&digit ( num -- )
		#30 SFT #00 SWP ;font/num ADD2 .Screen/addr DEO2
		#41 .Screen/sprite DEO
	JMP2r

@remove-bunny ( -- )

	;sprite/length LDA2
	( don't let length go below 0 )
	ORAk #00 EQU ,&bail JCN
	( clear the old sprite location )
	DUP2 #0001 SUB2 #30 SFT2 ;sprite/array ADD2
	( top )
	[ LDA2k ] #05 SFT2 .Screen/x DEO2
	[ INC2k INC2 LDA2 ] #05 SFT2 .Screen/y DEO2
	( clear )
	#00 ;draw-sprite JSR2
	POP2
	#0001 SUB2 DUP2 ;sprite/length STA2
	( update label )
	STH2k #0028 #0008 STH2r ;draw-dec JSR2
	&bail
		POP2

JMP2r

( PRNG code taken from flappy.tal -- thanks! )

@rand ( -- number )

	( local vars )
	#04 JMP
	&x $1 &y $1 &z $1 &a $1
	( 8-bit PRNG https://github.com/edrosten/8bit_rng )
	( t = x ^ (x << 4) )
	,&x LDR DUP #40 SFT EOR
	( x = y )
	,&y LDR ,&x STR
	( y = z )
	,&z LDR ,&y STR
	( z = a )
	,&a LDR DUP ,&z STR
	( a = z ^ t ^ (z >> 1) ^ (t << 1) )
	DUPk ADD EOR SWP DUP #01 SFT EOR EOR
	DUP ,&a STR

JMP2r

( static string data )

@text
	&fps "FPS: 00
	&bunnies "BUNS: 00
	&instructions "CLICK 20 "TO 20 "ADD 20 "BUNNIES! 00

@font ( atari8.uf1 )
	0000 0000 0000 0000 6060 6060 6000 6000
	6666 6600 0000 0000 006c fe6c 6cfe 6c00
	183e 603c 067c 1800 0066 6c18 3066 4600
	386c 3870 decc 7600 6060 6000 0000 0000
	0e1c 1818 181c 0e00 7038 1818 1838 7000
	0066 3cff 3c66 0000 0018 187e 1818 0000
	0000 0000 0030 3060 0000 007e 0000 0000
	0000 0000 0018 1800 0206 0c18 3060 4000
	&num
	3c66 6e76 6666 3c00 1838 1818 1818 7e00
	3c66 060c 1830 7e00 7e0c 180c 0666 3c00
	0c1c 3c6c 7e0c 0c00 7e60 7c06 0666 3c00
	3c60 607c 6666 3c00 7e06 0c18 3030 3000
	3c66 663c 6666 3c00 3c66 663e 060c 3800
	0060 6000 6060 0000 0030 3000 3030 6000
	0c18 3060 3018 0c00 0000 7e00 007e 0000
	6030 180c 1830 6000 3c66 060c 1800 1800
	3c66 6e6a 6e60 3e00 183c 6666 7e66 6600
	7c66 667c 6666 7c00 3c66 6060 6066 3c00
	786c 6666 666c 7800 7e60 607c 6060 7e00
	7e60 607c 6060 6000 3e60 606e 6666 3e00
	6666 667e 6666 6600 7830 3030 3030 7800
	0606 0606 0666 3c00 666c 7870 786c 6600
	6060 6060 6060 7e00 c6ee fed6 c6c6 c600
	6676 7e7e 6e66 6600 3c66 6666 6666 3c00
	7c66 667c 6060 6000 3c66 6666 766c 3600
	7c66 667c 6c66 6600 3c66 603c 0666 3c00
	7e18 1818 1818 1800 6666 6666 6666 3e00
	6666 6666 663c 1800 c6c6 c6d6 feee c600
	6666 3c18 3c66 6600 6666 663c 1818 1800
	7e06 0c18 3060 7e00 7860 6060 6060 7800

@bunny-chr
	2466 6600 2424 003c 4200 007e 7e7e 7e7e
	1818 3c3c 1800 0000 ff66 4242 667e 4242

( beginning of sprite pixel data + array )

@sprite
	&length $2
	&array
		&x 0600
		&y 0500
		&xvel 0060
		&yvel 0010
( Console:
	Prints Hello Uxn!, and listens for incoming stdin events on enter. )

|10 @Console &vector $2 &read $1 &pad $5 &write $1 &error $1

|0100 ( -> )

	( set vector )
	;on-console .Console/vector DEO2
	( print hello )
	;hello-txt 
	&while
		LDAk .Console/write DEO
		INC2 LDAk ,&while JCN
	POP2

BRK

@on-console ( -> )

	;yousaid-txt ,print-str JSR
	.Console/read DEI .Console/write DEO
	#0a .Console/write DEO

BRK

@print-str ( str* -- )

	&while
		LDAk #18 DEO
		INC2 LDAk ,&while JCN
	POP2

JMP2r

@hello-txt "Hello 20 "Uxn! $1
@yousaid-txt "You 20 "said: 20 $1
(
	100r animated logo splash screen
	by Andrew Alderwick, 2021
	based on artwork by Hundred Rabbits
)

( devices )

|00 @System     [ &vector $2 &wst      $1 &rst    $1 &pad   $4 &r      $2 &g      $2 &b    $2 &debug  $1 &halt $1 ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &pad   $2 &x      $2 &y      $2 &addr $2 &pixel  $1 &sprite $1 ]
|c0 @DateTime   [ &year   $2 &month    $1 &day    $1 &hour  $1 &minute $1 &second $1 &dotw $1 &doty   $2 &isdst $1 ]

( variables )

|0000

( program )

|0100 @Reset ( -> )
	( seed prng (must be nonzero) )
	#00 .DateTime/second DEI
	#00 .DateTime/minute DEI #60 SFT2 EOR2
	#00 .DateTime/hour   DEI #c0 SFT2 EOR2 ;prng/x STA2
	#00 .DateTime/hour   DEI #04 SFT2
	#00 .DateTime/day    DEI DUP2 ADD2 EOR2
	#00 .DateTime/month  DEI #60 SFT2 EOR2
	    .DateTime/year  DEI2 #a0 SFT2 EOR2 ;prng/y STA2
	;prng/x LDA2 ;prng/y LDA2 EOR2

	;rabbits STH2 #0f05 &loop-x
		#0f05 &loop-y
			ROTk SWP STH2kr STA2 POP
			INC2r INC2r
			INC
			GTHk ,&loop-y JCN
			POP2
		INC
		GTHk ,&loop-x JCN
		POP2 POP2r
	( fall through )

@repeat
	;init-occupancy JSR2
	#00 ;precalc-frame STA
	;precalculate-vector .Screen/vector DEO2
	BRK

@init-occupancy ( -- )
	#1400 &loop-y
		#1400 &loop-x
			ROTk #00 ;set-occupied JSR2 POP
			INC
			GTHk ,&loop-x JCN
			POP2
		INC
		GTHk ,&loop-y JCN
		POP2
	;rabbits
	DUP2 #00c8 ADD2 SWP2 &loop-rabbits
		LDA2k #01 ;set-occupied JSR2
		INC2 INC2
		GTH2k ,&loop-rabbits JCN
		POP2 POP2
	JMP2r

@precalculate-vector ( -> )
	,precalculate JSR BRK

@precalculate ( -- )
	;rabbits #00c8 OVR ,precalc-frame LDR MUL2 ADD2 ( first rabbit address )
	DUP2 #00c8 ADD2 SWP2 &loop-rabbits
		DUP2 ,move-rabbit JSR
		INC2 INC2
		GTH2k ,&loop-rabbits JCN
		POP2 POP2
	,precalc-frame LDR INC DUP ,precalc-frame STR
		#05 EQU JMP JMP2r
	;display-init JSR2
	;display .Screen/vector DEO2
	JMP2r

@precalc-frame $1

@set-occupied ( x y value -- )
	STH
	#00 SWP #0014 MUL2 ( x yoffset* / value )
	ROT #00 SWP ADD2 ( offset* / value )
	;occupied ADD2 STH2 STAr
	JMP2r

@move-rabbit ( addr* -- )
	STH2k LDA2 ( x y / addr* )
	DUP2 #00 ,set-occupied JSR
	;&possible-moves ( x y possible* / addr* )
	OVR2 #01   SUB  ,&check-move JSR ( up )
	OVR2 INC   INC  ,&check-move JSR ( down )
	OVR2 #0100 SUB2 ,&check-move JSR ( left )
	OVR2 #0100 ADD2 ,&check-move JSR ( right )
	;&possible-moves SUB2 ( x y num-possible-times-2* / addr* )
	DUP ,&can-move JCN
	POP2
	&write ( x y / addr* )
	DUP2 #01 ,set-occupied JSR
	STH2r #00c8 ADD2 STA2
	JMP2r

	&can-move ( x y num-possible-times-2* / addr* )
	NIP2 ( num-possible-times-2* / addr* )
	,prng JSR SWP2 DIV2k MUL2 SUB2 #fe AND ( chosen-move* / addr* )
	;&possible-moves ADD2 LDA2
	,&write JMP

	&check-move ( possible* new-x new-y -- possible'* )
	DUP2 ,get-occupied JSR ,&blocked JCN
	OVR2r LIT2r 00c8 SUB2r ( possible* new-x new-y / previous-frame-addr* )
		&check-history-loop
		;rabbits INC2 STH2kr GTH2 ,&history-okay JCN
		DUP2 STH2kr LDA2 EQU2 ,&history-clash JCN
		LIT2r 00c8 SUB2r
		,&check-history-loop JMP
	&history-okay
	POP2r
	OVR2 STA2 INC2 INC2
	JMP2r
	&history-clash ( possible* new-x new-y / previous-frame-addr* )
	POP2r
	&blocked ( possible* new-x new-y )
	POP2
	JMP2r

	&possible-moves $10

@get-occupied ( x y -- value )
	#00 SWP #0014 MUL2 ( x yoffset* )
	ROT #00 SWP ADD2 ( offset* )
	;occupied ADD2 LDA
	JMP2r

@prng ( -- number* )
	LIT2 &x $2
	DUP2 #50 SFT2 EOR2
	DUP2 #03 SFT2 EOR2
	LIT2 &y $2 DUP2 ,&x STR2
	DUP2 #01 SFT2 EOR2 EOR2
	,&y STR2k POP
	JMP2r

@display-init ( -- )
	.Screen/width  DEI2 #01 SFT2 #0050 SUB2 ;display-rabbit/xoffset STA2
	.Screen/height DEI2 #01 SFT2 #0050 SUB2 ;display-rabbit/yoffset STA2
	;rabbit-sprite .Screen/addr DEO2
	JMP2r

@display-rabbit ( color n counter -- )
	OVR LTHk ,&finish JCN
	SUB ( color n timeline )
	DUP #63 GTH ,&start JCN
	#17 DIVk STHk MUL SUB ( color n stage-timeline / frame )
	DUP #07 GTH ,&static JCN
	( rabbit is in-between two frames )
	#08 OVR SUB ,&from-weight STR
	,&to-weight STR ( color n / frame )
	#00 SWP DUP2 ADD2 ;rabbits ADD2 #00c8 #00 STHr MUL2 ADD2 ( color from-addr* )
	LDA2k STH2 #00c8 ADD2 LDA2
	&draw ( color to-x to-y / from-x from-y )
	STHr ,&mix JSR LIT2 &yoffset $2 ADD2 .Screen/y DEO2
	STHr ,&mix JSR LIT2 &xoffset $2 ADD2 .Screen/x DEO2
	.Screen/sprite DEO
	JMP2r

	&mix ( to-z from-z -- mixed* )
	    #00 SWP LIT2 00 &from-weight 00 MUL2 ( to-n from-mixed* )
	ROT #00 SWP LIT2 00 &to-weight   00 MUL2 ADD2
	JMP2r

	&finish ( color n counter n )
	POP
	LITr ff ,&static JMP
	&start ( color n counter )
	LITr 04
	&static ( color n counter / frame )
	INCr
	POP
	#00 SWP DUP2 ADD2 ;rabbits ADD2 #00c8 #00 STHr MUL2 ADD2
	LDA2 STH2k
	,&draw JMP

@display-counter $1

@display ( -> )
	,display-counter LDR #01 SUB DUP ,display-counter STR
	DUP #f0 LTH ,&skip-palette JCN
	#ff OVR SUB #00
		DUP2 .System/r DEO2
		DUP2 .System/g DEO2
		     .System/b DEO2
	&skip-palette
	INCk #0000 &clear-loop
		ROTk ;display-rabbit JSR2
		INC
		DUP #64 LTH ,&clear-loop JCN
		POP2 POP
	#0500 &draw-loop
		ROTk ;display-rabbit JSR2
		INC
		DUP #64 LTH ,&draw-loop JCN
	POP2
	,&no-finish JCN
	;sunset .Screen/vector DEO2
	&no-finish
	BRK

@sunset ( -> )
	;display-counter LDA #02 SUB DUP ;display-counter STA
	DUP #1f GTH ,&skip-palette JCN
	DUP #01 SFT #00
		DUP2 .System/r DEO2
		DUP2 .System/g DEO2
		     .System/b DEO2
	#6400 &draw-loop
		#05 OVR #00 ;display-rabbit JSR2
		INC
		GTHk ,&draw-loop JCN
		POP2
	&skip-palette
	,&no-finish JCN
	;repeat JMP2
	&no-finish
	BRK

@rabbit-sprite 003c 7e7e 7e7e 3c00

@occupied $190

@rabbits

